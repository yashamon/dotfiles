!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/952bd1e9/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
parameter1	fuck.ps1	/^$parameter1 = $args[0]$/;"	v
a	gheto.ps1	/^$a=$args[0]$/;"	v
res	jumpRootDir.ps1	/^Invoke-Command -ScriptBlock { $res= fd . '\/' -t d -H | fzf --reverse --header='Jump to location/;"	v
tmp	lfcd.ps1	/^$tmp = [System.IO.Path]::GetTempFileName()$/;"	v
lf	lfcd.ps1	/^$lf=(which lf)+" last-dir-path="+"$tmp"+" $args"$/;"	v
dir	lfcd.ps1	/^    $dir = Get-Content "$tmp"$/;"	v
res	lfcdFindFile.ps1	/^$res= fd . $HOME -H -I | fzf --reverse --header='Jump to location' | sed 's\/\\\\\/\\\\\\\\\/g' $/;"	v
res	lfcdjumpDir.ps1	/^$res=fd . $HOME -t d -H | fzf --reverse --header='Jump to location' | sed s\/\\\\\/\\\\\\\\\/g$/;"	v
res	lfcdsimplejump.ps1	/^$res= fd . -H -I -d 1 | fzf --reverse --header='Jump to location' | sed 's\/\\\\\/\\\\\\\\\/g' $/;"	v
tmp	lfcdWin.ps1	/^$tmp = [System.IO.Path]::GetTempFileName()$/;"	v
dir	lfcdWin.ps1	/^    $dir = Get-Content "$tmp"$/;"	v
f	lfLn.ps1	/^foreach ($x in $args) { $f= ( Split-Path $x -leaf ); new-Item -ItemType SymbolicLink -Path ".\/$/;"	v
myfile	lualatexscript.ps1	/^$myfile=(Get-item $args[-1]).BaseName$/;"	v
mypdfstring	lualatexscript.ps1	/^$mypdfstring=$myfile+".pdf"$/;"	v
mylogstring	lualatexscript.ps1	/^$mylogstring=$myfile+".log"$/;"	v
install_zsh	makesymlinksChromeos.sh	/^install_zsh () {$/;"	f
ho	nf.ps1	/^$ho=fd . $HOME -t f -H | fzf$/;"	v
line	remote.ps1	/^$line=$args[0]$/;"	v
buf	remote.ps1	/^$buf=$args[1]$/;"	v
var	remote.ps1	/^$var=(cat ~\/servername.txt)$/;"	v
e	remote.ps1	/^$e="nvim --server " + "$var" + " --remote-send " + "`'" + ':' +$/;"	v
file	remotelf.ps1	/^$file=$args$/;"	v
var	remotelf.ps1	/^$var=(cat ~\/servername.txt)$/;"	v
e2	remotelf.ps1	/^$e2="nvim --server " + "$var" + " --remote-silent " + "$file"$/;"	v
file	rneo.ps1	/^$file=$args$/;"	v
var	rneo.ps1	/^$var=(cat ~\/servername.txt)$/;"	v
e2	rneo.ps1	/^$e2="nvim --server " + "$var" + " --remote-silent " + "$file"$/;"	v
f	sentence.ps1	/^$f=$args[0]$/;"	v
newfile	sentence.ps1	/^$newfile='sentence_' + "$f"$/;"	v
a	sentence.ps1	/^$a=Get-Content $f | foreach { ([string]($_.ReadCount-1) + ': ' + $_  + "@") -replace "\\.\\s+@",/;"	v
b	sentence.ps1	/^$b=[String]$a$/;"	v
c	sentence.ps1	/^$c=$b -replace "`n", "" $/;"	v
d	sentence.ps1	/^$d=$c -replace "\\.\\s+", "\\.@`n" -replace "\\.@", ".@`n" -replace$/;"	v
