  c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:1:    require("noice").setup({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:2:      lsp = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:3:           override markdown rendering so that **cmp** and other plugins use **Treesitter**@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:4:        override = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:5:          ["vim.lsp.util.convert input to markdown lines"  = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:6:          ["vim.lsp.util.stylize markdown"  = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:7:          ["cmp.entry.get documentation"  = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:8:         ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:9:       ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:10:         you can enable a preset for easier configuration@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:11:      presets = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:12:        bottom search = true,    use a classic bottom cmdline for search@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:13:        command palette = true,    position the cmdline and popupmenu together@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:14:        long message to split = true,    long messages will be sent to a split@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:15:        inc rename = false,    enables an input dialog for inc rename.nvim@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:16:        lsp doc border = false,    add a border to hover docs and signature help@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:17:       ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:18:     )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:19: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:20: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:21:    Keymaps@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:22:    LSP@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:23: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:24: require'nvim treesitter.configs'.setup {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:25:    ensure installed = "all",    one of "all", "maintained" (parsers with maintainers), or a list of languages@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:26:   incremental selection = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:27:     enable = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:28:     keymaps = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:29:       init selection = '<m CR>',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:30:         scope incremental = '<CR>',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:31:       node incremental = '<TAB>',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:32:       node decremental = '<S TAB>',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:33:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:34:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:35:   highlight = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:36:     enable = true,                 false will disable the whole extension@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:37:        Instead of true it can also be a list of languages@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:38:     additional vim regex highlighting = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:39:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:40:  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:41: require('leap').setup {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:42:   max aot targets = nil,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:43:   highlight unlabeled = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:44:   max highlighted traversal targets = 20,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:45:   case sensitive = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:46:      Sets of characters that should match each other
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:47:      Obvious candidates are braces and quotes ('([{', ')  ', '`" '')
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:48:   equivalence classes =@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:49:   {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:50:       {' ', " r", " n"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:51:       {' '','"', ':', '=', '#', '&', '%','^', ' ', '<', '>', '?', '|', '!', '*', '+', ' ', '`', '/', '  ', ',', '.',';', ' ', '[', ' ', '{', ')', '(', ' ' @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:52:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:53:      Leaving the   appropriate list emapty effectively disables "smart" mode,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:54:      and forces auto jump to be on or off.%@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:55:   @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:56:  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:57: vim.api.nvim set hl(0, 'LeapMatch', { fg='white'  )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:58: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:59: require("todo comments").setup {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:60:        your configuration comes here@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:61:        or leave it empty to use the default settings@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:62:        refer to the configuration section below@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:63:    @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:64: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:65: require('telescope').setup({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:66:   defaults = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:67:     layout config = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:68:       vertical = { width = 0.9  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:69:          other layout configuration here@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:70:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:71:     scroll strategy = 'limit',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:72:      previewers = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:73:     {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:74:       filesize limit = 25,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:75:       timeout = 300,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:76:       use highlighter = false@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:77:      @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:78:   ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:79:        other defaults configuration here@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:80:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:81:      other configuration values here@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:82:  )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:83: require("tokyonight").setup({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:84:      your configuration comes here@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:85:      or leave it empty to use the default settings@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:86:   style = "storm",    The theme comes in three styles, `storm`, `moon`, a darker variant `night` and `day`@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:87:   light style = "day",    The theme is used when the background is set to light@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:88:   transparent = false,    Enable this to disable setting the background color@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:89:   terminal colors = true,    Configure the colors used when opening a `:terminal` in Neovim@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:90:   styles = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:91:        Style to be applied to different syntax groups@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:92:        Value is any valid attr list value for `:help nvim set hl`@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:93:     comments = { italic = true  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:94:     keywords = { italic = true  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:95:     functions = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:96:     variables = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:97:        Background styles 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:97:Can be "dark", "transparent" or "normal"@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:98:     sidebars = "dark",    style for sidebars, see below@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:99:     floats = "dark",    style for floating windows@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:100:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:101:   sidebars = { "qf", "help"  ,    Set a darker background on sidebar like windows 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:101:For example: `["qf", "vista kind", "terminal", "packer" `@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:102:   day brightness = 0.1,    Adjusts the brightness of the colors of the **Day** style 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:102:Number between 0 and 1, from dull to vibrant colors@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:103:   hide inactive statusline = true,    Enabling this option, will hide inactive statuslines and replace them with a thin border instead 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:103:Should work with the standard **StatusLine** and **LuaLine**
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:104:   dim inactive = true,    dims inactive windows@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:105:   lualine bold = false,    When `true`, section headers in the lualine theme will be bold@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:106: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:107:       You can override specific color groups to use other groups or a hex color@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:108:       function will be called with a ColorScheme table@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:109:      @param colors ColorScheme@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:110:     on colors = function(colors) @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:111:     colors.normal = colors.black @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:112:     end,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:113: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:114:       You can override specific highlights to use other groups or a hex color@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:115:       function will be called with a Highlights and ColorScheme table@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:116:      @param highlights Highlights@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:117:      @param colors ColorScheme@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:118:      on highlights = function(highlights, colors)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:119:      end,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:120:  )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:121: require("which key").setup({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:122:   plugins = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:123:     marks = true,    shows a list of your marks on ' and `@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:124:     registers = true,    shows your registers on " in NORMAL or <C r> in INSERT mode@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:125:     spelling = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:126:       enabled = false,    enabling this will show WhichKey when pressing z= to select spelling suggestions@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:127:       suggestions = 50,    how many suggestions should be shown in the list?@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:128:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:129:        the presets plugin, adds help for a bunch of default keybindings in Neovim@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:130:        No actual key bindings are created@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:131:     presets = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:132:       operators = true,    adds help for operators like d, y, .. 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:132:and registers them for motion / text object completion@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:133:       motions = true,    adds help for motions@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:134:       text objects = true,    help for text objects triggered after entering an operator@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:135:       windows = true,    default bindings on <c w>@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:136:       nav = true,    misc bindings to work with windows@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:137:       z = true,    bindings for folds, spelling and others prefixed with z@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:138:       g = true,    bindings for prefixed with g@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:139:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:140:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:141:      add operators that will trigger motion and text object completion@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:142:      to enable all native operators, set the preset / operators plugin above@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:143:   operators = { gc = "Comments"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:144:   key labels = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:145:        override the label used to display some keys 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:145:It doesn't effect WK in any other way
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:146:        For example:@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:147:        ["<space>"  = "SPC",@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:148:        ["<cr>"  = "RET",@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:149:        ["<tab>"  = "TAB",@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:150:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:151:   icons = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:152:     breadcrumb = "»",    symbol used in the command line area that shows your active key combo@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:153:     separator = "➜",    symbol used between a key and it's label@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:154:     group = "+",    symbol prepended to a group@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:155:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:156:   popup mappings = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:157:     scroll down = '<c d>',    binding to scroll down inside the popup@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:158:     scroll up = '<c u>',    binding to scroll up inside the popup@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:159:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:160:   window = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:161:     border = "none",    none, single, double, shadow@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:162:     position = "bottom",    bottom, top@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:163:     margin = { 1, 0, 1, 0  ,    extra window margin [top, right, bottom, left @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:164:     padding = { 2, 2, 2, 2  ,    extra window padding [top, right, bottom, left @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:165:     winblend = 0@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:166:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:167:   layout = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:168:     height = { min = 50, max = 50  ,    min and max height of the columns@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:169:     width = { min = 10, max = 50  ,    min and max width of the columns@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:170:     spacing = 3,    spacing between columns@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:171:     align = "left",    align columns left, center or right@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:172:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:173:   ignore missing = false,    enable this to hide mappings for which you didn't specify a label@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:174:   hidden = { "<silent>", "<cmd>", "<Cmd>", "<CR>", "call", "lua", "^:", "^ " ,    hide mapping boilerplate@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:175:   show help = true,    show help message on the command line when the popup is visible@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:176:   show keys = true,    show the currently pressed key and its label as a message in the command line@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:177:   triggers = {"<leader>", "g", ";" ,    automatically setup triggers@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:178:      triggers = {"<leader>"     or specify a list manually@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:179:   triggers blacklist = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:180:        list of mode / prefixes that should never be hooked by WhichKey@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:181:        this is mostly relevant for key maps that start with a native binding@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:182:        most people should not need to change this@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:183:     i = { "j", "k"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:184:     v = { "j", "k"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:185:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:186:      disable the WhichKey popup for certain buf types and file types
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:187:      Disabled by deafult for Telescope@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:188:   disable = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:189:     buftypes = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:190:     filetypes = { "TelescopePrompt"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:191:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:192:  )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:193: require("gruvbox").setup({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:194: undercurl = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:195:   underline = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:196:   bold = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:197:   italic = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:198:   strikethrough = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:199:   invert selection = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:200:   invert signs = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:201:   invert tabline = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:202:   invert intend guides = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:203:   inverse = false,    invert background for search, diffs, statuslines and errors@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:204:   contrast = "hard",    can be "hard", "soft" or empty string@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:205:   palette overrides = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:206:   dim inactive = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:207:   transparent mode = false,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:208:     overrides = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:209:         SignColumn = {bg = "#ffa546" ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:210:         Normal = {bg = "#ffa546" ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:211:         DiagnosticSignError = { bg = "#ffa546"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:212:         DiagnosticSignWarn = { bg = "#ffa546"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:213:         DiagnosticSignInfo = { bg = "#ffa546"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:214:         DiagnosticSignHint = { bg = "#ffa546"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:215:         texType = { fg = "#808080"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:216:         texMath = { fg = "#808080"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:217:         Special = { fg = "#650000"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:218:         texDelimiter = { fg = "#808080"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:219:         texStatement = { fg = "#808080"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:220:            Operator = { fg = "#808080"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:221:         Type = { fg = "#008800"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:222:         Comment = { fg = "#af6000"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:223:         String = { fg = "#580058"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:224:         Operator = { fg = "#580058"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:225:         Pmenu = { bg = "#ffa546", fg = "#1e2030"  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:226:           bright orange  #fd8432@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:227:           texComment = { fg = "#00ff00"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:228:            texString = { fg = "#0000ff"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:229:            Special = {fg = "#0000ff"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:230:            texCmdName = { fg = "#0000ff"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:231:            SpecialChar = { fg = "#0000ff"  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:232:            Statement = { fg = "#0000ff"  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:233:      @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:234:  )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:235: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:236:    nvim LSP@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:237: require('snippets')@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:238: require("mason").setup()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:239: require("mason lspconfig").setup()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:240: require("lspconfig")@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:241:    LSP config@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:242: local lspconfig = require("lspconfig")@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:243: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:244:     lspconfig.sumneko lua.setup { on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:245:     lspconfig.tsserver.setup { on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:246:     lspconfig.jsonls.setup { on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:247:     lspconfig.rome.setup { on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:248:     lspconfig.vimls.setup { on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:249:     lspconfig.ltex.setup { autostart = false;@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:250:        on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:251:     lspconfig.texlab.setup { on attach = on attach  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:252:    lspconfig stuff    @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:253:    local nvim lsp = require('lspconfig')@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:254:    Use an on attach function to only map the following keys@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:255:    after the language server attaches to the current buffer@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:256: local on attach = function(client, bufnr)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:257: local function buf set keymap(...) vim.api.nvim buf set keymap(bufnr, ...) end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:258: local function buf set option(...) vim.api.nvim buf set option(bufnr, ...) end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:259: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:260:     Enable completion triggered by <c x><c o>@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:261: buf set keymap('omnifunc', 'v:lua.vim.lsp.omnifunc')@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:262: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:263: require'lspconfig'.sumneko lua.setup(require("lualsp"))    Mappings
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:264: local opts = { noremap=true, silent=true  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:265: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:266:      See `:help vim.lsp.*` for documentation on any of the below functions@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:267:   buf set keymap('n', 'gD', '<cmd>lua vim.lsp.buf.declaration()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:268:   buf set keymap('n', 'gd', '<cmd>lua vim.lsp.buf.definition()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:269:     buf set keymap('n', 'K', '<cmd>lua vim.lsp.buf.hover()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:270:   buf set keymap('n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:271:   buf set keymap('n', '<S C k>', '<cmd>lua vim.lsp.buf.signature help()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:272:   buf set keymap('n', 'gwa', '<cmd>lua vim.lsp.buf.add workspace folder()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:273:   buf set keymap('n', 'gwr', '<cmd>lua vim.lsp.buf.remove workspace folder()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:274:   buf set keymap('n', 'gwl', '<cmd>lua print(vim.inspect(vim.lsp.buf.list workspace folders()))<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:275:   buf set keymap('n', 'gtD', '<cmd>lua vim.lsp.buf.type definition()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:276:   buf set keymap('n', '<space>rn', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:277:   buf set keymap('n', 'ga', '<cmd>lua vim.lsp.buf.code action()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:278:   buf set keymap('n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:279:   buf set keymap('n', 'gld', '<cmd>lua vim.lsp.diagnostic.show line diagnostics()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:280:   buf set keymap('n', '[d', '<cmd>lua vim.lsp.diagnostic.goto prev()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:281:   buf set keymap('n', ' d', '<cmd>lua vim.lsp.diagnostic.goto next()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:282:   buf set keymap('n', 'gq', '<cmd>lua vim.lsp.diagnostic.set loclist()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:283:   buf set keymap('n', 'gf', '<cmd>lua vim.lsp.buf.formatting()<CR>', opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:284: end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:285: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:286:      Setup cmp
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:287: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:288: local has words before = function()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:289:   if vim.api.nvim buf get option(0, "buftype") == "prompt" then@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:290:     return false@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:291:   end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:292:   local line, col = unpack(vim.api.nvim win get cursor(0))@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:293:   return col ~= 0 and vim.api.nvim buf get lines(0, line   1, line, true)[1 :sub(col, col):match("%s") == nil@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:294: end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:295: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:296: local feedkey = function(key, mode)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:297:   vim.api.nvim feedkeys(vim.api.nvim replace termcodes(key, true, true, true), mode, true)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:298: end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:299: local luasnip = require("luasnip")@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:300: local cmp = require'cmp'@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:301: cmp.setup ({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:302: snippet = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:303:   expand = function(args)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:304:     luasnip.lsp expand(args.body)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:305:   end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:306:  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:307: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:308: mapping = cmp.mapping.preset.insert({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:309:         ["<C p>"  = cmp.mapping.select prev item(),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:310:         ["<C n>"  = cmp.mapping.select next item(),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:311:        ['<C d>'  = cmp.mapping.scroll docs( 4),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:312:       ['<C f>'  = cmp.mapping.scroll docs(4),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:313:       ['<C x>'  = cmp.mapping.complete(),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:314:       ['<C e>'  = cmp.mapping.close(),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:315:       ['<CR>'  = cmp.mapping.confirm({ select = true  ),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:316:    .. 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:316:Your other mappings ..
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:317: ["<Tab>"  = cmp.mapping(function(fallback)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:318: 			if luasnip.expandable() then@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:319: 				luasnip.expand()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:320:                         elseif cmp.visible() then@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:321:                              cmp.select next item()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:322: 			elseif has words before() then@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:323: 				cmp.complete()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:324:                              else@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:325: 				fallback()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:326: 			end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:327: 		end, { "i", "s"  ),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:328: 		["<S Tab>"  = cmp.mapping(function(fallback)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:329: 			if cmp.visible() then@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:330: 				cmp.select prev item()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:331: 			elseif luasnip.jumpable( 1) then@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:332: 				luasnip.jump( 1)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:333: 			else@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:334: 				fallback()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:335: 			end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:336: 		end, { "i", "s"  ),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:337:  ),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:338: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:339: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:340: requires = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:341:     {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:342:       'tzachar/fuzzy.nvim',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:343:       'quangnguyen30192/cmp nvim tags',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:344:          if you want the sources is available for some file types@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:345:       ft = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:346:         'tex',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:347:         'latex'@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:348:        @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:349:      @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:350:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:351:    .. 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:351:Your other configuration ..
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:352: sources = cmp.config.sources({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:353:          For vsnip user 

c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:354: { name = 'tags'  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:355: { name = 'nvim lsp', keyword length = 2  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:356: { name = 'luasnip', keyword length = 4  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:357:    For ultisnips user
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:358:          { name = 'ultisnips'  ,  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:359:    { name = 'omni', keyword length = 4 ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:360:           { name = 'spell'  , @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:361:         { name = 'treesitter', keyword length = 4  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:362:    { name = 'buffer', keyword length = 4  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:363:   { name = 'fuzzy buffer', keyword length = 8  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:364:  ),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:365: completion = { autocomplete = false  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:366:  )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:367: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:368: require('nvim comment').setup({@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:369:       Linters prefer comment and line to have a space in between markers@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:370:    marker padding = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:371:       should comment out empty or whitespace only lines@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:372:    comment empty = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:373:       Should key mappings be created@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:374:    create mappings = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:375:       Normal mode mapping left hand side@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:376:    line mapping = "gc",@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:377:       Visual/Operator mapping left hand side@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:378:    operator mapping = "<leader>c",@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:379:       Hook function to call before commenting takes place@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:380:      hook = nil @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:381:   )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:382: require('spellsitter').setup {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:383:   hl = 'SpellBad',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:384:   captures = { ,     set to {  to spellcheck everything@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:385: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:386:      Spellchecker to use 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:386:values:@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:387:      * vimfn: built in spell checker using vim.fn.spellbadword()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:388:      * ffi: built in spell checker using the FFI to access the@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:389:        internal spell check() function@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:390: spellchecker = 'vimfn'@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:391:  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:392: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:393: require('lualine').setup {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:394:   options = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:395:        theme = @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:396:     theme = require('theme').theme(),@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:397:     icons enabled = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:398:     component separators = { left = '', right = '' ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:399:     section separators = { left = '', right = '' ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:400:     disabled filetypes = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:401:       statusline = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:402:       winbar = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:403:      ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:404:     ignore focus = {'tex', 'md', 'text', 'lua', 'latex', 'nu' ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:405:     always divide middle = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:406:     globalstatus = true,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:407:     refresh = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:408:       statusline = 1000,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:409:       tabline = 1000,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:410:       winbar = 1000,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:411:      @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:412:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:413:   sections = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:414:   lualine a = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:415:         {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:416:           'filename',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:417:           color = 'lualine a normal',@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:418:           file status = true,         Displays file status (readonly status, modified status)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:419:           newfile status = false,      Display new file status (new file means no write after created)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:420:           path = 3,                   0: Just the filename@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:421:                                       1: Relative path@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:422:                                       2: Absolute path@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:423:                                       3: Absolute path, with tilde as the home directory@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:424:           symbols = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:425:             modified = '[+ ',         Text to show when the file is modified
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:426:             readonly = '[  ',         Text to show when the file is non modifiable or readonly
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:427:             unnamed = '[No Name ',    Text to show for unnamed buffers
 c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:428:             newfile = '[New ',        Text to show for new created file before first writting@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:429:           @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:430:          @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:431:        ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:432:       lualine b = {{'branch', 'diff', 'diagnostics', color = 'lualine b normal'  ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:433:     lualine c = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:434:     lualine x = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:435:     lualine y = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:436:     lualine z = {{'location', color = 'lualine z normal'  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:437:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:438:   inactive sections = {@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:439:     lualine a = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:440:     lualine b = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:441:     lualine c = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:442:     lualine x = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:443:     lualine y = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:444:     lualine z = { @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:445:    ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:446:   tabline = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:447:   winbar = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:448:   inactive winbar = { ,@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:449:   extension = { @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:450:  @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:451: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:452: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:453:      gitgutter@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:454:    require('gitsigns').setup{@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:455:      on attach = function(bufnr)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:456:        local gs = package.loaded.gitsigns@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:457:   @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:458:        local function map(mode, l, r, opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:459:          opts = opts or { @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:460:          opts.buffer = bufnr@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:461:          vim.keymap.set(mode, l, r, opts)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:462:        end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:463:   @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:464:           Navigation@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:465:        map('n', ' c', function()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:466:          if vim.wo.diff then return ' c' end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:467:          vim.schedule(function() gs.next hunk() end)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:468:          return '<Ignore>'@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:469:        end, {expr=true )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:470:   @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:471:        map('n', '[c', function()@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:472:          if vim.wo.diff then return '[c' end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:473:          vim.schedule(function() gs.prev hunk() end)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:474:          return '<Ignore>'@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:475:        end, {expr=true )@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:476:   @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:477:           Actions@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:478:        map({'n', 'v' , '<leader>hs', ':Gitsigns stage hunk<CR>')@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:479:        map({'n', 'v' , '<leader>hr', ':Gitsigns reset hunk<CR>')@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:480:        map('n', '<leader>hS', gs.stage buffer)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:481:        map('n', '<leader>hu', gs.undo stage hunk)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:482:        map('n', '<leader>hR', gs.reset buffer)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:483:        map('n', '<leader>hp', gs.preview hunk)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:484:        map('n', '<leader>hb', function() gs.blame line{full=true  end)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:485:        map('n', '<leader>tb', gs.toggle current line blame)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:486:        map('n', '<leader>hd', gs.diffthis)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:487:        map('n', '<leader>hD', function() gs.diffthis('~') end)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:488:        map('n', '<leader>td', gs.toggle deleted)@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:489:   @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:490:           Text object@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:491:        map({'o', 'x' , 'ih', ':<C U>Gitsigns select hunk<CR>')@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:492:      end@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:493:     @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:494: @ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:495:    load snippets from path/of/your/nvim/config/my cool snippets@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:496:   vim.o.runtimepath = vim.o.runtimepath . 
c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:496:'C:/Users/yasha/.config/nvim/lua/snippets,'@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:497:    require("luasnip/loaders/from vscode").lazy load()    load snippets of friendly/snippets@ c:/Users/yasha/dotfiles/config/nvimnew/lua/settings.lua:498:    require("luasnip/loaders/from vscode").load({ paths = "C:/Users/yasha/dotfiles/snippets"  )    load your own snippets@