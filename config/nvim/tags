!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/yasha/dotfiles/config/nvim/	//
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
g:neovide_fullscreen	init.vim	/^let g:neovide_fullscreen=v:true$/;"	v
<m-y>	init.vim	/^nnoremap <m-y> viw:buffer g:buffmain<cr>:<c-r>+<cr><cr>$/;"	m
g:tex_flavor	init.vim	/^let g:tex_flavor = "latex"$/;"	v
g:tex_isk	init.vim	/^let g:tex_isk = '@,48-57,58,_,192-255,:' $/;"	v
g:tex_conceal	init.vim	/^let g:tex_conceal = ""$/;"	v
maplocalleader	init.vim	/^let maplocalleader = "\\\\"$/;"	v
Reset	init.vim	/^function Reset()$/;"	f
Server	init.vim	/^function Server()$/;"	f
<leader>nn	init.vim	/^nmap <leader>nn :call Server()$/;"	m
mapleader	init.vim	/^let mapleader=';'$/;"	v
g:mapleader	init.vim	/^let g:mapleader=';'$/;"	v
<C-A>	init.vim	/^cnoremap <C-A>      <Home>$/;"	m
<C-E>	init.vim	/^cnoremap <C-E>      <End>$/;"	m
<C-K>	init.vim	/^cnoremap <C-K>      <C-U>$/;"	m
<	init.vim	/^vnoremap < <gv$/;"	m
>	init.vim	/^vnoremap > >gv$/;"	m
cd.	init.vim	/^cmap cd. lcd %:p:h$/;"	m
<A-S-t>	init.vim	/^nmap <A-S-t> :te<cr>$/;"	m
<Leader>U	init.vim	/^vnoremap <Leader>U ""y:%s\/<C-r>"$/;"	m
<leader>r	init.vim	/^noremap <leader>r :w<cr>:e<cr> $/;"	m
<leader>hh	init.vim	/^noremap <leader>hh :set tw=50<cr>$/;"	m
<leader>w	init.vim	/^noremap <leader>w :set tw=0<cr> $/;"	m
q	init.vim	/^map q :q<cr>$/;"	m
<leader>q	init.vim	/^noremap <leader>q q$/;"	m
<m-7>	init.vim	/^nmap <m-7> :ZenMode<cr>:mksession!<cr>$/;"	m
<leader>rr	init.vim	/^nnoremap <leader>rr :w<cr>:source $MYVIMRC<CR>$/;"	m
<leader>u	init.vim	/^nnoremap <leader>u :UndotreeToggle<CR>$/;"	m
<leader>e	init.vim	/^nnoremap <leader>e :Lf<cr>$/;"	m
<leader>t	init.vim	/^nnoremap <leader>t :FloatermToggle<cr>$/;"	m
<c-,>	init.vim	/^nnoremap <c-,> :cprevious<cr>$/;"	m
<c-.>	init.vim	/^nnoremap <c-.> :cnext<cr> $/;"	m
<m-s>	init.vim	/^vnoremap <m-s> :s\/\/\/gc<left><left><left><left>$/;"	m
<m-s>	init.vim	/^inoremap <m-s> <esc>:%s\/\/\/gc<left><left><left><left>$/;"	m
<m-s>	init.vim	/^nnoremap <m-s> :%s\/\/\/gc<left><left><left><left>$/;"	m
<M-.>	init.vim	/^vmap <M-.> t.<CR>h$/;"	m
<M-.>	init.vim	/^nmap <M-.> t.<CR>h$/;"	m
<up>	init.vim	/^nnoremap <up> 1<C-U>$/;"	m
<up>	init.vim	/^imap <up> <nop>$/;"	m
<down>	init.vim	/^nnoremap <down> 1<C-D>$/;"	m
<down>	init.vim	/^imap <down> <nop>$/;"	m
<ScrollWheelUp>	init.vim	/^noremap <ScrollWheelUp>      <nop>$/;"	m
<S-ScrollWheelUp>	init.vim	/^noremap <S-ScrollWheelUp>    <nop>$/;"	m
<C-ScrollWheelUp>	init.vim	/^noremap <C-ScrollWheelUp>    <nop>$/;"	m
<ScrollWheelDown>	init.vim	/^noremap <ScrollWheelDown>    <nop>$/;"	m
<S-ScrollWheelDown>	init.vim	/^noremap <S-ScrollWheelDown>  <nop>$/;"	m
<C-ScrollWheelDown>	init.vim	/^noremap <C-ScrollWheelDown>  <nop>$/;"	m
<ScrollWheelLeft>	init.vim	/^noremap <ScrollWheelLeft>    <nop>$/;"	m
<S-ScrollWheelLeft>	init.vim	/^noremap <S-ScrollWheelLeft>  <nop>$/;"	m
<C-ScrollWheelLeft>	init.vim	/^noremap <C-ScrollWheelLeft>  <nop>$/;"	m
<ScrollWheelRight>	init.vim	/^noremap <ScrollWheelRight>   <nop>$/;"	m
<S-ScrollWheelRight>	init.vim	/^noremap <S-ScrollWheelRight> <nop>$/;"	m
<C-ScrollWheelRight>	init.vim	/^noremap <C-ScrollWheelRight> <nop>$/;"	m
\\	init.vim	/^inoremap \\ \/$/;"	m
/	init.vim	/^inoremap \/ \\$/;"	m
p	init.vim	/^vnoremap p "_dP$/;"	m
<C-p>	init.vim	/^inoremap <C-p> <C-r>"+$/;"	m
d	init.vim	/^noremap d "_d$/;"	m
dd	init.vim	/^nnoremap dd "_dd$/;"	m
c	init.vim	/^noremap c "_c$/;"	m
c	init.vim	/^noremap c "_c$/;"	m
s	init.vim	/^noremap s "_s$/;"	m
C	init.vim	/^noremap C "_C$/;"	m
x	init.vim	/^noremap x "_x$/;"	m
x	init.vim	/^vnoremap x "+x$/;"	m
d	init.vim	/^vnoremap d "_d$/;"	m
c	init.vim	/^vnoremap c "_c$/;"	m
y	init.vim	/^vnoremap y "+y$/;"	m
y	init.vim	/^nnoremap y "+y$/;"	m
p	init.vim	/^nnoremap p "+p$/;"	m
<leader>q	init.vim	/^nnoremap <leader>q q$/;"	m
<cr>	init.vim	/^inoremap <cr> <esc>$a<cr><space><esc>"_s$/;"	m
<m-cr>	init.vim	/^inoremap <m-cr> <cr><space><esc>"_s$/;"	m
D	init.vim	/^nmap D "0dg\$$/;"	m
V	init.vim	/^nmap V vg\$$/;"	m
A	init.vim	/^nmap A g$a$/;"	m
0	init.vim	/^map 0 g^$/;"	m
9	init.vim	/^map 9 g\$$/;"	m
<m-8>	init.vim	/^nmap <m-8> :set laststatus=0<cr>:set lines=100<cr>$/;"	m
<c-l>	init.vim	/^nnoremap <c-l> :bnext<CR>$/;"	m
<c-h>	init.vim	/^nnoremap <c-h> :bprevious<CR>$/;"	m
<M-j>	init.vim	/^imap <M-j> <C-j>$/;"	m
<M-m>	init.vim	/^map <M-m> <cmd>HopChar1<cr>\$$/;"	m
<M-w>	init.vim	/^map <M-w> <cmd>HopChar1<cr>}$/;"	m
<M-b>	init.vim	/^map <M-b> <cmd>HopChar1<cr>{$/;"	m
q:	init.vim	/^map q: nop$/;"	m
<S-C-q>	init.vim	/^map <S-C-q> <Esc>:qa!<CR>$/;"	m
<m-q>	init.vim	/^map <m-q> <esc>:wq<cr>$/;"	m
<m-Q>	init.vim	/^map <m-Q> <esc>:q<cr>$/;"	m
<m-c>	init.vim	/^map <m-c> :close<cr>$/;"	m
<m-d>	init.vim	/^map <m-d> <Esc>:w<CR>:bdelete<CR>$/;"	m
gf	init.vim	/^noremap gf gq$/;"	m
f	init.vim	/^noremap f \/$/;"	m
F	init.vim	/^noremap F ?$/;"	m
#	init.vim	/^noremap # \/\\$<CR>v?\\$<CR>$/;"	m
$	init.vim	/^noremap $ \/\\$<CR>hv?\\$<CR>l$/;"	m
@	init.vim	/^noremap @ \/}<CR>v?{<CR>$/;"	m
j	init.vim	/^map j gj$/;"	m
k	init.vim	/^map k gk$/;"	m
<Space>	init.vim	/^noremap <Space> .$/;"	m
<Space>	init.vim	/^vnoremap <Space> t <cr>$/;"	m
K	init.vim	/^map K <C-u>$/;"	m
J	init.vim	/^map J <C-d>$/;"	m
<C-j>	init.vim	/^map <C-j> <C-e>jj$/;"	m
<C-k>	init.vim	/^map <C-k> <C-y>kk$/;"	m
<leader>j	init.vim	/^nnoremap <leader>j J$/;"	m
<leader>k	init.vim	/^nnoremap <leader>k K$/;"	m
'	init.vim	/^map ' "$/;"	m
<Backspace>	init.vim	/^nnoremap <Backspace> i<Backspace><Esc>$/;"	m
<leader>c	init.vim	/^nmap <leader>c gc$/;"	m
<A-r>	init.vim	/^noremap <A-r> <C-r>$/;"	m
`	init.vim	/^nnoremap ` ~$/;"	m
.	init.vim	/^nnoremap . `$/;"	m
<m-1>	init.vim	/^noremap <m-1> <C-o>$/;"	m
<m-2>	init.vim	/^noremap <m-2> <C-i>$/;"	m
<D-d>	init.vim	/^noremap <D-d> <C-d>$/;"	m
;w	init.vim	/^noremap ;w <Esc>:w<CR>$/;"	m
<C-t>	init.vim	/^noremap <C-t> <Esc>:AsyncRun ctags -R<CR>$/;"	m
<D-u>	init.vim	/^noremap <D-u> <C-u>$/;"	m
<A-u>	init.vim	/^noremap <A-u> <C-u>$/;"	m
;ww	init.vim	/^nnoremap ;ww :%s\/$/;"	m
<CR>	init.vim	/^inoremap <expr> <CR> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<Leader>y	init.vim	/^nnoremap <silent> <Leader>y :YRGetElem<CR>$/;"	m
'	init.vim	/^map ' "$/;"	m
<D-]>	init.vim	/^inoremap <D-]> <C-x><C-]>$/;"	m
<C-]>	init.vim	/^inoremap <C-]> <C-x><C-]>$/;"	m
t	init.vim	/^map t <cmd>HopChar1AC<cr>$/;"	m
T	init.vim	/^map T <cmd>HopChar1BC<cr>$/;"	m
<m-.>	init.vim	/^map <m-.> <cmd>HopChar1<cr>.$/;"	m
<m-space>	init.vim	/^map <m-space> <cmd>HopWord<cr>$/;"	m
<m-t>	init.vim	/^noremap <m-t> :BTags<cr>$/;"	m
S	init.vim	/^noremap S <Esc> :BLines<CR>$/;"	m
<m-b>	init.vim	/^noremap <m-b> <Esc>:Buffers<CR>$/;"	m
<A-e>	init.vim	/^map <A-e> :FZF ~<CR> $/;"	m
<m-f>	init.vim	/^map <m-f> :FZF ~<CR> $/;"	m
<leader>g	init.vim	/^nmap <leader>g :ZenMode<CR>$/;"	m
<leader>ss	init.vim	/^noremap <leader>ss :w<cr>:source $MYVIMRC<cr> $/;"	m
<c-e>	init.vim	/^noremap <c-e> viwy:cclose<cr>:<c-r>+<cr>:ZenMode<cr><cr>$/;"	m
<c-p>	init.vim	/^noremap <c-p> :<c-r>+<cr>$/;"	m
<m-l>	init.vim	/^noremap <m-l> viwy:bdelete<cr>:execute "buffer" g:buf<cr>:<c-r>+<cr>:ZenMode<cr><cr>$/;"	m
<leader>y	init.vim	/^nnoremap <leader>y :FZFNeoyank<cr>$/;"	m
<leader>Y	init.vim	/^nnoremap <leader>Y :FZFNeoyank  P<cr>$/;"	m
<leader>y	init.vim	/^vnoremap <leader>y :FZFNeoyankSelection<cr>$/;"	m
<leader>p	init.vim	/^nnoremap <leader>p :FZFNeoyank +<cr> $/;"	m
<leader>1	init.vim	/^nnoremap <leader>1 :FZFNeoyank 1<cr>$/;"	m
<leader>P	init.vim	/^nnoremap <leader>P :FZFNeoyank " P+<cr>$/;"	m
<leader>p	init.vim	/^vnoremap <leader>p :FZFNeoyankSelection +<cr>$/;"	m
<c-x><c-k>	init.vim	/^inoremap <expr> <c-x><c-k> fzf#vim#complete('cat \/usr\/share\/dict\/words')  $/;"	m
Light	init.vim	/^function Light()$/;"	f
Bluemoon	init.vim	/^function Bluemoon()$/;"	f
Deepocean	init.vim	/^function Deepocean()$/;"	f
g:material_style	init.vim	/^   let g:material_style = 'deep ocean'  $/;"	v
Palenight	init.vim	/^function Palenight()$/;"	f
g:material_style	init.vim	/^   let g:material_style = 'palenight'  $/;"	v
Lighter	init.vim	/^function Lighter()$/;"	f
g:material_style	init.vim	/^   let g:material_style = 'lighter'  $/;"	v
Dark	init.vim	/^function Dark()$/;"	f
Profile	init.vim	/^function! Profile()$/;"	f
Sentence	init.vim	/^function Sentence()$/;"	f
g:buf	init.vim	/^  let g:buf = bufname()$/;"	v
LL	init.vim	/^noremap LL :lua require("zen-mode").close()<cr>:call Sentence()<cr>$/;"	m
GitAsync	init.vim	/^function GitAsync()$/;"	f
g:bufdude	init.vim	/^let g:bufdude = bufname()$/;"	v
ToggleQuickFix	init.vim	/^function ToggleQuickFix()$/;"	f
<leader>s	init.vim	/^nnoremap <leader>s :silent call ToggleQuickFix()<CR>$/;"	m
ClearLatex	init.vim	/^function! ClearLatex()$/;"	f
CompileLatex	init.vim	/^function! CompileLatex()$/;"	f
ViewPdf	init.vim	/^function! ViewPdf() $/;"	f
g:buffmain	init.vim	/^let g:buffmain=bufname()$/;"	v
<leader>v	init.vim	/^nmap <leader>v :call ViewPdf()<cr><cr>$/;"	m
<leader>ll	init.vim	/^nmap <leader>ll :call CompileLatex()<cr>$/;"	m
<leader>cl	init.vim	/^nmap <leader>cl :call ClearLatex()<cr>$/;"	m
<leader>m	init.vim	/^nmap <leader>m :w<cr>:silent ! cat % >> ~\/workspace\/email.txt; cp % \/tmp\/temp; make4ht \/tmp/;"	m
g:auto_save	init.vim	/^let g:auto_save = 0$/;"	v
g:auto_save_events	init.vim	/^let g:auto_save_events = ["CursorHold"]$/;"	v
g:auto_save_in_insert_mode	init.vim	/^let g:auto_save_in_insert_mode = 0$/;"	v
g:auto_save_silent	init.vim	/^let g:auto_save_silent = 1$/;"	v
g:vsnip_snippet_dir	init.vim	/^let g:vsnip_snippet_dir = '~\/dotfiles\/snippets'  $/;"	v
<M-j>	init.vim	/^imap <expr> <M-j>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<C-l>'$/;"	m
<M-j>	init.vim	/^  smap <expr> <M-j>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<C-l>'$/;"	m
<M-k>	init.vim	/^imap <expr> <M-k> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'$/;"	m
<M-k>	init.vim	/^smap <expr> <M-k> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'$/;"	m
<leader>ca	init.vim	/^noremap <leader>ca  :lua vim.lsp.buf.code_action()<CR>$/;"	m
<leader>la	init.vim	/^noremap <leader>la  :lua vim.lsp.buf.code_action()<CR>$/;"	m
<leader>c	init.vim	/^nmap <leader>c gc$/;"	m
g:firenvim_config	init.vim	/^let g:firenvim_config = { $/;"	v
<cr>	init.vim	/^inoremap <cr> <cr><space><esc>"_s$/;"	m
o	init.vim	/^nnoremap o o<space><esc>"_s$/;"	m
g:neovide_fullscreen	init.vim	/^let g:neovide_fullscreen=v:true$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
g:plug_home	autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
s:define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
Plug	autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugInstall	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugUpdate	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugClean	autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugUpgrade	autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
PlugStatus	autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugDiff	autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugSnapshot	autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
s:to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
filetypedetect	autoload/plug.vim	/^        augroup filetypedetect$/;"	a
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
s:loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
s:remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
g:plugs	autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
s:parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
s:syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
s:lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
s:plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
R	autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
D	autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
S	autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
U	autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
]]	autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
[[	autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
s:prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
s:assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
g:_plug_bang	autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
s:regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:retry	autoload/plug.vim	/^function! s:retry()$/;"	f
s:is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:names	autoload/plug.vim	/^function! s:names(...)$/;"	f
s:check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:bar	autoload/plug.vim	/^function! s:bar()$/;"	f
s:logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:tick	autoload/plug.vim	/^function! s:tick()$/;"	f
s:update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
s:glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
s:system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
d	autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
dd	autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
d	autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
s:delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:status	autoload/plug.vim	/^function! s:status()$/;"	f
L	autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
s:extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
s:section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:diff	autoload/plug.vim	/^function! s:diff()$/;"	f
<cr>	autoload/plug.vim	/^    nnoremap <silent> <buffer> <cr> :silent! call <SID>preview_commit()<cr>$/;"	m
o	autoload/plug.vim	/^    nnoremap <silent> <buffer> o    :silent! call <SID>preview_commit()<cr>$/;"	m
X	autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
s:revert	autoload/plug.vim	/^function! s:revert()$/;"	f
s:snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
colors_name	colors/metacosm.vim	/^let colors_name = "metacosm"$/;"	v
s:moria_style	colors/moria.vim	/^    let s:moria_style = g:moria_style$/;"	v
s:moria_style	colors/moria.vim	/^    let s:moria_style = &background$/;"	v
s:moria_monochrome	colors/moria.vim	/^    let s:moria_monochrome = g:moria_monochrome$/;"	v
s:moria_monochrome	colors/moria.vim	/^    let s:moria_monochrome = 0$/;"	v
s:moria_fontface	colors/moria.vim	/^    let s:moria_fontface = g:moria_fontface$/;"	v
s:moria_fontface	colors/moria.vim	/^    let s:moria_fontface = "plain"$/;"	v
s:moria_style	colors/moria.vim	/^    let s:moria_style = &background $/;"	v
colors_name	colors/moria.vim	/^let colors_name = "moria"$/;"	v
g:colors_name	colors/wombat256.vim	/^let g:colors_name = "wombat256"$/;"	v
grey_number	colors/wombat256.vim	/^fun <SID>grey_number(x)$/;"	f
grey_level	colors/wombat256.vim	/^fun <SID>grey_level(n)$/;"	f
grey_color	colors/wombat256.vim	/^fun <SID>grey_color(n)$/;"	f
rgb_number	colors/wombat256.vim	/^fun <SID>rgb_number(x)$/;"	f
rgb_level	colors/wombat256.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_color	colors/wombat256.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
color	colors/wombat256.vim	/^fun <SID>color(r, g, b)$/;"	f
rgb	colors/wombat256.vim	/^fun <SID>rgb(rgb)$/;"	f
X	colors/wombat256.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
g:colors_name	colors/monochrome.vim	/^let g:colors_name = 'monochrome'$/;"	v
colors_name	colors/solarized8_dark_low.vim	/^let colors_name = "solarized8_dark_low"$/;"	v
g:colors_name	colors/bw.vim	/^let g:colors_name="bw"$/;"	v
s:terms_italic	colors/solarized2.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	colors/solarized2.vim	/^let s:terms_noitalic=[$/;"	v
s:terminal_italic	colors/solarized2.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terminal_italic	colors/solarized2.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	colors/solarized2.vim	/^            let s:terminal_italic=1$/;"	v
s:options_list	colors/solarized2.vim	/^let s:options_list=[$/;"	v
s:colorscheme_list	colors/solarized2.vim	/^let s:colorscheme_list=[$/;"	v
s:defaults_list	colors/solarized2.vim	/^let s:defaults_list=[$/;"	v
s:lazycat_list	colors/solarized2.vim	/^let s:lazycat_list=[$/;"	v
s:SetOption	colors/solarized2.vim	/^function! s:SetOption(name,default)$/;"	f
s:solarized_termtrans_default	colors/solarized2.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:solarized_termtrans_default	colors/solarized2.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
colors_name	colors/solarized2.vim	/^let colors_name = "solarized"$/;"	v
s:vmode	colors/solarized2.vim	/^    let s:vmode       = "gui"$/;"	v
s:base03	colors/solarized2.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base02	colors/solarized2.vim	/^    let s:base02      = "#073642"$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = "#839496"$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base3	colors/solarized2.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:yellow	colors/solarized2.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:orange	colors/solarized2.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:red	colors/solarized2.vim	/^    let s:red         = "#dc322f"$/;"	v
s:magenta	colors/solarized2.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:violet	colors/solarized2.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:blue	colors/solarized2.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:cyan	colors/solarized2.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:green	colors/solarized2.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:vmode	colors/solarized2.vim	/^    let s:vmode       = "gui"$/;"	v
s:base03	colors/solarized2.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base02	colors/solarized2.vim	/^    let s:base02      = "#262626"$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = "#585858"$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = "#808080"$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base3	colors/solarized2.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:yellow	colors/solarized2.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:orange	colors/solarized2.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:red	colors/solarized2.vim	/^    let s:red         = "#af0000"$/;"	v
s:magenta	colors/solarized2.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:violet	colors/solarized2.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:blue	colors/solarized2.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:cyan	colors/solarized2.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:green	colors/solarized2.vim	/^    let s:green       = "#5f8700"$/;"	v
s:vmode	colors/solarized2.vim	/^    let s:vmode       = "cterm"$/;"	v
s:base03	colors/solarized2.vim	/^    let s:base03      = "8"$/;"	v
s:base02	colors/solarized2.vim	/^    let s:base02      = "0"$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = "10"$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = "11"$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = "12"$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = "14"$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = "7"$/;"	v
s:base3	colors/solarized2.vim	/^    let s:base3       = "15"$/;"	v
s:yellow	colors/solarized2.vim	/^    let s:yellow      = "3"$/;"	v
s:orange	colors/solarized2.vim	/^    let s:orange      = "9"$/;"	v
s:red	colors/solarized2.vim	/^    let s:red         = "1"$/;"	v
s:magenta	colors/solarized2.vim	/^    let s:magenta     = "5"$/;"	v
s:violet	colors/solarized2.vim	/^    let s:violet      = "13"$/;"	v
s:blue	colors/solarized2.vim	/^    let s:blue        = "4"$/;"	v
s:cyan	colors/solarized2.vim	/^    let s:cyan        = "6"$/;"	v
s:green	colors/solarized2.vim	/^    let s:green       = "2"$/;"	v
s:vmode	colors/solarized2.vim	/^    let s:vmode       = "cterm"$/;"	v
s:base03	colors/solarized2.vim	/^    let s:base03      = "234"$/;"	v
s:base02	colors/solarized2.vim	/^    let s:base02      = "235"$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = "239"$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = "240"$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = "244"$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = "245"$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = "187"$/;"	v
s:base3	colors/solarized2.vim	/^    let s:base3       = "230"$/;"	v
s:yellow	colors/solarized2.vim	/^    let s:yellow      = "136"$/;"	v
s:orange	colors/solarized2.vim	/^    let s:orange      = "166"$/;"	v
s:red	colors/solarized2.vim	/^    let s:red         = "124"$/;"	v
s:magenta	colors/solarized2.vim	/^    let s:magenta     = "125"$/;"	v
s:violet	colors/solarized2.vim	/^    let s:violet      = "61"$/;"	v
s:blue	colors/solarized2.vim	/^    let s:blue        = "33"$/;"	v
s:cyan	colors/solarized2.vim	/^    let s:cyan        = "37"$/;"	v
s:green	colors/solarized2.vim	/^    let s:green       = "64"$/;"	v
s:vmode	colors/solarized2.vim	/^    let s:vmode       = "cterm"$/;"	v
s:bright	colors/solarized2.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:base03	colors/solarized2.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base02	colors/solarized2.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base3	colors/solarized2.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:yellow	colors/solarized2.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:orange	colors/solarized2.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:red	colors/solarized2.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:magenta	colors/solarized2.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:violet	colors/solarized2.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:blue	colors/solarized2.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:cyan	colors/solarized2.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:green	colors/solarized2.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:none	colors/solarized2.vim	/^    let s:none            = "NONE"$/;"	v
s:none	colors/solarized2.vim	/^    let s:none            = "NONE"$/;"	v
s:t_none	colors/solarized2.vim	/^    let s:t_none          = "NONE"$/;"	v
s:n	colors/solarized2.vim	/^    let s:n               = "NONE"$/;"	v
s:c	colors/solarized2.vim	/^    let s:c               = ",undercurl"$/;"	v
s:r	colors/solarized2.vim	/^    let s:r               = ",reverse"$/;"	v
s:s	colors/solarized2.vim	/^    let s:s               = ",standout"$/;"	v
s:ou	colors/solarized2.vim	/^    let s:ou              = ""$/;"	v
s:ob	colors/solarized2.vim	/^    let s:ob              = ""$/;"	v
s:back	colors/solarized2.vim	/^    let s:back        = s:base03$/;"	v
s:back	colors/solarized2.vim	/^    let s:back        = "NONE"$/;"	v
s:temp03	colors/solarized2.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp02	colors/solarized2.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp01	colors/solarized2.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp00	colors/solarized2.vim	/^    let s:temp00      = s:base00$/;"	v
s:base03	colors/solarized2.vim	/^    let s:base03      = s:base3$/;"	v
s:base02	colors/solarized2.vim	/^    let s:base02      = s:base2$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = s:base1$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = s:base0$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = s:temp00$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	colors/solarized2.vim	/^    let s:base3       = s:temp03$/;"	v
s:back	colors/solarized2.vim	/^        let s:back    = s:base03$/;"	v
s:base01	colors/solarized2.vim	/^    let s:base01      = s:base00$/;"	v
s:base00	colors/solarized2.vim	/^    let s:base00      = s:base0$/;"	v
s:base0	colors/solarized2.vim	/^    let s:base0       = s:base1$/;"	v
s:base1	colors/solarized2.vim	/^    let s:base1       = s:base2$/;"	v
s:base2	colors/solarized2.vim	/^    let s:base2       = s:base3$/;"	v
s:back	colors/solarized2.vim	/^    let s:back        = s:back$/;"	v
s:back	colors/solarized2.vim	/^    let s:back        = s:base02$/;"	v
s:ou	colors/solarized2.vim	/^    let s:ou          = ",underline"$/;"	v
s:b	colors/solarized2.vim	/^    let s:b           = ""$/;"	v
s:bb	colors/solarized2.vim	/^    let s:bb          = ",bold"$/;"	v
s:b	colors/solarized2.vim	/^    let s:b           = ",bold"$/;"	v
s:bb	colors/solarized2.vim	/^    let s:bb          = ""$/;"	v
s:u	colors/solarized2.vim	/^    let s:u           = ""$/;"	v
s:u	colors/solarized2.vim	/^    let s:u           = ",underline"$/;"	v
s:i	colors/solarized2.vim	/^    let s:i           = ""$/;"	v
s:i	colors/solarized2.vim	/^    let s:i           = ",italic"$/;"	v
s:sp_none	colors/solarized2.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_back	colors/solarized2.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base03	colors/solarized2.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base02	colors/solarized2.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base01	colors/solarized2.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base00	colors/solarized2.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base0	colors/solarized2.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base1	colors/solarized2.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	colors/solarized2.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	colors/solarized2.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_green	colors/solarized2.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_yellow	colors/solarized2.vim	/^    let s:sp_yellow    = ""$/;"	v
s:sp_orange	colors/solarized2.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	colors/solarized2.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_magenta	colors/solarized2.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_violet	colors/solarized2.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_blue	colors/solarized2.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	colors/solarized2.vim	/^    let s:sp_cyan      = ""$/;"	v
hs_highlight_boolean	colors/solarized2.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	colors/solarized2.vim	/^let hs_highlight_delimiters=1$/;"	v
s:fg_pdef	colors/solarized2.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_ptable	colors/solarized2.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:fg_phead	colors/solarized2.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:SolarizedHiTrail	colors/solarized2.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedHiTrail	colors/solarized2.vim	/^augroup SolarizedHiTrail$/;"	a
s:SolarizedOptions	colors/solarized2.vim	/^function! s:SolarizedOptions()$/;"	f
SolarizedOptions	colors/solarized2.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedMenu	colors/solarized2.vim	/^function! SolarizedMenu()$/;"	f
g:loaded_solarized_menu	colors/solarized2.vim	/^    let g:loaded_solarized_menu = 1$/;"	v
s:terms_italic	colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:terminal_italic	colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terminal_italic	colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:options_list	colors/solarized.vim	/^let s:options_list=[$/;"	v
s:colorscheme_list	colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:defaults_list	colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:lazycat_list	colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:SetOption	colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
s:solarized_termtrans_default	colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:solarized_termtrans_default	colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
colors_name	colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
s:vmode	colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:vmode	colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:vmode	colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:vmode	colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:vmode	colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:bright	colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:yellow	colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:orange	colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:red	colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:magenta	colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:violet	colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:blue	colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:cyan	colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:green	colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:none	colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:none	colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:t_none	colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:n	colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:c	colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:r	colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:s	colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:ou	colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ob	colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:temp03	colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp02	colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp01	colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp00	colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:base03	colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base02	colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:back	colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:base01	colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base00	colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base0	colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base1	colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base2	colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:ou	colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:b	colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:bb	colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:b	colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:bb	colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:u	colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:i	colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:sp_none	colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_back	colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base03	colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base02	colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base01	colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base00	colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base0	colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base1	colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_green	colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_yellow	colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:sp_orange	colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_magenta	colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_violet	colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_blue	colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
hs_highlight_boolean	colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
s:fg_pdef	colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_ptable	colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:fg_phead	colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:SolarizedHiTrail	colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedHiTrail	colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
s:SolarizedOptions	colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
SolarizedOptions	colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedMenu	colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
g:loaded_solarized_menu	colors/solarized.vim	/^    let g:loaded_solarized_menu = 1$/;"	v
colors_name	colors/solarized8_light_flat.vim	/^let colors_name = "solarized8_light_flat"$/;"	v
g:colors_name	colors/grey.vim	/^let g:colors_name="grey"$/;"	v
g:colors_name	colors/maroloccio.vim	/^let g:colors_name="maroloccio"$/;"	v
CSAHi	colors/maroloccio.vim	/^   command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g/;"	c
CSAHi	colors/maroloccio.vim	/^   command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
colors_name	colors/solarized8_dark_flat.vim	/^let colors_name = "solarized8_dark_flat"$/;"	v
colors_name	colors/solarized8_light_high.vim	/^let colors_name = "solarized8_light_high"$/;"	v
g:colors_name	colors/maroloccio3.vim	/^let g:colors_name="maroloccio3"$/;"	v
g:colors_name	colors/maroloccio2.vim	/^let g:colors_name="maroloccio2"$/;"	v
colors_name	colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	colors/solarized8_light_low.vim	/^let colors_name = "solarized8_light_low"$/;"	v
colors_name	colors/solarized8_light.vim	/^let colors_name = "solarized8_light"$/;"	v
colors_name	colors/solarized8_dark.vim	/^let colors_name = "solarized8_dark"$/;"	v
g:colors_name	colors/coots-beauty-256.vim	/^let g:colors_name="coots_beauty_256"$/;"	v
g:colors_name	colors/maroloccionew.vim	/^let g:colors_name="maroloccio"$/;"	v
CSAHi	colors/maroloccionew.vim	/^ command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g")/;"	c
CSAHi	colors/maroloccionew.vim	/^ command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
colors_name	colors/solarized8_dark_high.vim	/^let colors_name = "solarized8_dark_high"$/;"	v
g:colors_name	colors/peaksea.vim	/^let g:colors_name = expand("<sfile>:t:r")$/;"	v
s:terms_italic	colors/solarized3.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	colors/solarized3.vim	/^let s:terms_noitalic=[$/;"	v
s:terminal_italic	colors/solarized3.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terminal_italic	colors/solarized3.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	colors/solarized3.vim	/^            let s:terminal_italic=1$/;"	v
s:options_list	colors/solarized3.vim	/^let s:options_list=[$/;"	v
s:colorscheme_list	colors/solarized3.vim	/^let s:colorscheme_list=[$/;"	v
s:defaults_list	colors/solarized3.vim	/^let s:defaults_list=[$/;"	v
s:lazycat_list	colors/solarized3.vim	/^let s:lazycat_list=[$/;"	v
s:SetOption	colors/solarized3.vim	/^function! s:SetOption(name,default)$/;"	f
s:solarized_termtrans_default	colors/solarized3.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:solarized_termtrans_default	colors/solarized3.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
colors_name	colors/solarized3.vim	/^let colors_name = "solarized"$/;"	v
s:vmode	colors/solarized3.vim	/^    let s:vmode       = "gui"$/;"	v
s:base03	colors/solarized3.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base02	colors/solarized3.vim	/^    let s:base02      = "#073642"$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = "#839496"$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base3	colors/solarized3.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:yellow	colors/solarized3.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:orange	colors/solarized3.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:red	colors/solarized3.vim	/^    let s:red         = "#dc322f"$/;"	v
s:magenta	colors/solarized3.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:violet	colors/solarized3.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:blue	colors/solarized3.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:cyan	colors/solarized3.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:green	colors/solarized3.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:vmode	colors/solarized3.vim	/^    let s:vmode       = "gui"$/;"	v
s:base03	colors/solarized3.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base02	colors/solarized3.vim	/^    let s:base02      = "#262626"$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = "#585858"$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = "#808080"$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base3	colors/solarized3.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:yellow	colors/solarized3.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:orange	colors/solarized3.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:red	colors/solarized3.vim	/^    let s:red         = "#af0000"$/;"	v
s:magenta	colors/solarized3.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:violet	colors/solarized3.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:blue	colors/solarized3.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:cyan	colors/solarized3.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:green	colors/solarized3.vim	/^    let s:green       = "#5f8700"$/;"	v
s:vmode	colors/solarized3.vim	/^    let s:vmode       = "cterm"$/;"	v
s:base03	colors/solarized3.vim	/^    let s:base03      = "234"$/;"	v
s:base02	colors/solarized3.vim	/^    let s:base02      = "235"$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = "239"$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = "240"$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = "247"$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = "245"$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = "187"$/;"	v
s:base3	colors/solarized3.vim	/^    let s:base3       = "230"$/;"	v
s:yellow	colors/solarized3.vim	/^    let s:yellow      = "136"$/;"	v
s:orange	colors/solarized3.vim	/^    let s:orange      = "166"$/;"	v
s:red	colors/solarized3.vim	/^    let s:red         = "124"$/;"	v
s:magenta	colors/solarized3.vim	/^    let s:magenta     = "125"$/;"	v
s:violet	colors/solarized3.vim	/^    let s:violet      = "61"$/;"	v
s:blue	colors/solarized3.vim	/^    let s:blue        = "33"$/;"	v
s:cyan	colors/solarized3.vim	/^    let s:cyan        = "37"$/;"	v
s:green	colors/solarized3.vim	/^    let s:green       = "64"$/;"	v
s:vmode	colors/solarized3.vim	/^    let s:vmode       = "cterm"$/;"	v
s:base03	colors/solarized3.vim	/^    let s:base03      = "234"$/;"	v
s:base02	colors/solarized3.vim	/^    let s:base02      = "235"$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = "239"$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = "240"$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = "247"$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = "245"$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = "187"$/;"	v
s:base3	colors/solarized3.vim	/^    let s:base3       = "230"$/;"	v
s:yellow	colors/solarized3.vim	/^    let s:yellow      = "136"$/;"	v
s:orange	colors/solarized3.vim	/^    let s:orange      = "166"$/;"	v
s:red	colors/solarized3.vim	/^    let s:red         = "124"$/;"	v
s:magenta	colors/solarized3.vim	/^    let s:magenta     = "125"$/;"	v
s:violet	colors/solarized3.vim	/^    let s:violet      = "61"$/;"	v
s:blue	colors/solarized3.vim	/^    let s:blue        = "33"$/;"	v
s:cyan	colors/solarized3.vim	/^    let s:cyan        = "37"$/;"	v
s:green	colors/solarized3.vim	/^    let s:green       = "64"$/;"	v
s:vmode	colors/solarized3.vim	/^    let s:vmode       = "cterm"$/;"	v
s:bright	colors/solarized3.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:base03	colors/solarized3.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base02	colors/solarized3.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base3	colors/solarized3.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:yellow	colors/solarized3.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:orange	colors/solarized3.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:red	colors/solarized3.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:magenta	colors/solarized3.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:violet	colors/solarized3.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:blue	colors/solarized3.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:cyan	colors/solarized3.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:green	colors/solarized3.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:none	colors/solarized3.vim	/^    let s:none            = "NONE"$/;"	v
s:none	colors/solarized3.vim	/^    let s:none            = "NONE"$/;"	v
s:t_none	colors/solarized3.vim	/^    let s:t_none          = "NONE"$/;"	v
s:n	colors/solarized3.vim	/^    let s:n               = "NONE"$/;"	v
s:c	colors/solarized3.vim	/^    let s:c               = ",undercurl"$/;"	v
s:r	colors/solarized3.vim	/^    let s:r               = ",reverse"$/;"	v
s:s	colors/solarized3.vim	/^    let s:s               = ",standout"$/;"	v
s:ou	colors/solarized3.vim	/^    let s:ou              = ""$/;"	v
s:ob	colors/solarized3.vim	/^    let s:ob              = ""$/;"	v
s:back	colors/solarized3.vim	/^    let s:back        = s:base03$/;"	v
s:back	colors/solarized3.vim	/^    let s:back        = "NONE"$/;"	v
s:temp03	colors/solarized3.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp02	colors/solarized3.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp01	colors/solarized3.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp00	colors/solarized3.vim	/^    let s:temp00      = s:base00$/;"	v
s:base03	colors/solarized3.vim	/^    let s:base03      = s:base3$/;"	v
s:base02	colors/solarized3.vim	/^    let s:base02      = s:base2$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = s:base1$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = s:base0$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = s:temp00$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	colors/solarized3.vim	/^    let s:base3       = s:temp03$/;"	v
s:back	colors/solarized3.vim	/^        let s:back    = s:base03$/;"	v
s:base01	colors/solarized3.vim	/^    let s:base01      = s:base00$/;"	v
s:base00	colors/solarized3.vim	/^    let s:base00      = s:base0$/;"	v
s:base0	colors/solarized3.vim	/^    let s:base0       = s:base1$/;"	v
s:base1	colors/solarized3.vim	/^    let s:base1       = s:base2$/;"	v
s:base2	colors/solarized3.vim	/^    let s:base2       = s:base3$/;"	v
s:back	colors/solarized3.vim	/^    let s:back        = s:back$/;"	v
s:back	colors/solarized3.vim	/^    let s:back        = s:base02$/;"	v
s:ou	colors/solarized3.vim	/^    let s:ou          = ",underline"$/;"	v
s:b	colors/solarized3.vim	/^    let s:b           = ""$/;"	v
s:bb	colors/solarized3.vim	/^    let s:bb          = ",bold"$/;"	v
s:b	colors/solarized3.vim	/^    let s:b           = ",bold"$/;"	v
s:bb	colors/solarized3.vim	/^    let s:bb          = ""$/;"	v
s:u	colors/solarized3.vim	/^    let s:u           = ""$/;"	v
s:u	colors/solarized3.vim	/^    let s:u           = ",underline"$/;"	v
s:i	colors/solarized3.vim	/^    let s:i           = ""$/;"	v
s:i	colors/solarized3.vim	/^    let s:i           = ",italic"$/;"	v
s:sp_none	colors/solarized3.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_back	colors/solarized3.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base03	colors/solarized3.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base02	colors/solarized3.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base01	colors/solarized3.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base00	colors/solarized3.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base0	colors/solarized3.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base1	colors/solarized3.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	colors/solarized3.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	colors/solarized3.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_green	colors/solarized3.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_yellow	colors/solarized3.vim	/^    let s:sp_yellow    = ""$/;"	v
s:sp_orange	colors/solarized3.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	colors/solarized3.vim	/^    let s:sp_red       = ""$/;"	