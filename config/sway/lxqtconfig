### Variables ###

# Logo key
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Workspace names
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7

# Locker
set $locker swaylock-fancy

# Terminal emulator
set $term xfce4-terminal

# Application launcher
set $menu wofi 

# File manager
set $filer nautilus

# Browser
set $browser firefox

# For gtk applications settings
set $gnomeschema org.gnome.desktop.interface

### Settings ###

# Font
font pango: SF Pro Text 10

# Borders
default_border pixel 2
# default_floating_border pixel 2
hide_edge_borders none
smart_borders on
smart_gaps on
gaps inner 2

# Default wallpaper (to change it, put image to ~/Pictures/wallpapers/ and name it main-wallpaper.*)
# output * bg "$HOME/Pictures/wallpapers/main-wallpaper.*" fill

# Keyboard layout
input * {
    xkb_layout us,ua
    xkb_options grp:shift_caps_toggle
}

# Touchpad configuration (swaymsg -t get_inputs)
input "1739:30966:Synaptics_TM3096-006" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

### Window rules ###

# Link some programs to workspaces (swaymsg -t get_tree)
assign [class="Opera"] workspace 1
assign [app_id="telegramdesktop"] workspace 7
for_window [class="Opera"] inhibit_idle fullscreen
for_window [class="feh"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="dialog"] floating enable
for_window [window_type="dialog"] floating enable
for_window [app_id="lximage-qt"] floating enable
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="fpakman"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable

### Key bindings ###

# Reload the configuration file
bindsym --to-code $mod+Shift+r reload

# Start a terminal
bindsym --to-code $mod+Return exec $term

# Kill focused window
bindsym --to-code $mod+q kill

# Start your launcher
bindsym --to-code $mod+d exec $menu --show run --allow-images

bindsym --to-code $mod+b exec $term -e 'bmenu'

# Launch wifi choice
bindsym --to-code $mod+n exec $term -e nmtui-connect

# Launch categorized menu
bindsym --to-code $mod+a exec --no-startup-id $menu

# Start browser
bindsym --to-code $mod+w exec $browser

# Start file manager
bindsym --to-code $mod+e exec $filer

# Lock screen
bindsym --to-code $mod+0 exec $locker

# Color picker
bindsym --to-code $mod+p exec swaynag -t mtype -m "$(grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:-)" && notify-send "Color picked"

# Take a screenshot to clipboard (whole screen)
bindsym --to-code Print exec grim - | wl-copy && notify-send "Screenshot of whole screen saved to clipboard"

# Take a screenshot of selected region to clipboard
bindsym --to-code $mod+Print exec grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot of selected region saved to clipboard"
    
# Take a screenshot of focused window to clipboard
bindsym --to-code $mod+Shift+Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy && notify-send "Screenshot of active window saved to clipboard"


# Take a screenshot (whole screen)
bindsym --to-code Ctrl+Print exec grim ~/Pictures/screenshots/screenshot-"$(date +%s)".png && notify-send "Screenshot of whole screen saved to folder"

# Take a screenshot of selected region
bindsym --to-code $mod+Ctrl+Print exec grim -g "$(slurp)" ~/Pictures/screenshots/screenshot-"$(date +%s)".png && notify-send "Screenshot of selected region saved to folder"
    
# Take a screenshot of focused window
bindsym --to-code $mod+Ctrl+Shift+Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" ~/Pictures/screenshot-"$(date +%s)".png && notify-send "Screenshot of active window saved to folder"

# Move your focus around
bindsym --to-code $mod+$left focus left
bindsym --to-code $mod+$down focus down
bindsym --to-code $mod+$up focus up
bindsym --to-code $mod+$right focus right

# Or use $mod+[up|down|left|right]
bindsym --to-code $mod+Left focus left
bindsym --to-code $mod+Down focus down
bindsym --to-code $mod+Up focus up
bindsym --to-code $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym --to-code $mod+Shift+$left move left
bindsym --to-code $mod+Shift+$down move down
bindsym --to-code $mod+Shift+$up move up
bindsym --to-code $mod+Shift+$right move right

# Ditto, with arrow keys
bindsym --to-code $mod+Shift+Left move left
bindsym --to-code $mod+Shift+Down move down
bindsym --to-code $mod+Shift+Up move up
bindsym --to-code $mod+Shift+Right move right

# Switch to workspace
bindsym --to-code $mod+1 workspace $ws1
bindsym --to-code $mod+2 workspace $ws2
bindsym --to-code $mod+3 workspace $ws3
bindsym --to-code $mod+4 workspace $ws4
bindsym --to-code $mod+5 workspace $ws5
bindsym --to-code $mod+6 workspace $ws6
bindsym --to-code $mod+7 workspace $ws7

# Move focused container to workspace
bindsym --to-code $mod+Shift+1 move container to workspace $ws1
bindsym --to-code $mod+Shift+2 move container to workspace $ws2
bindsym --to-code $mod+Shift+3 move container to workspace $ws3
bindsym --to-code $mod+Shift+4 move container to workspace $ws4
bindsym --to-code $mod+Shift+5 move container to workspace $ws5
bindsym --to-code $mod+Shift+6 move container to workspace $ws6
bindsym --to-code $mod+Shift+7 move container to workspace $ws7

# Sreen brightness controls
bindsym --to-code XF86MonBrightnessUp exec brightnessctl -q set +2% # increase screen brightness
bindsym --to-code XF86MonBrightnessDown exec brightnessctl -q set 2%- # decrease screen brightness

#Audio controls
bindsym --to-code $mod+Ctrl+p exec pavucontrol
bindsym --to-code XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +2% #increase sound volume
bindsym --to-code XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -2% #decrease sound volume
bindsym --to-code XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle notify-send "Muted" # mute sound
bindsym --to-code XF86AudioPlay exec playerctl play-pause
bindsym --to-code XF86AudioPause exec playerctl play-pause
bindsym --to-code XF86AudioNext exec playerctl next
bindsym --to-code XF86AudioPrev exec playerctl previous

# Layout stuff:

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym --to-code --to-code $mod+c splith; exec notify-send "Split horizontaly"
bindsym --to-code --to-code $mod+v splitv; exec notify-send "Split verticaly"

# Switch the current container between different layout styles
bindsym --to-code $mod+F3 layout stacking
bindsym --to-code $mod+F2 layout tabbed
bindsym --to-code $mod+F1 layout toggle split

# Make the current focus fullscreen
bindsym --to-code $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym --to-code $mod+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym --to-code $mod+Shift+space focus mode_toggle

# Move focus to the parent container
bindsym --to-code $mod+m focus parent

# Scratchpad:

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym --to-code $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym --to-code $mod+Shift+minus scratchpad show

# Resizing containers:

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

# Sticky window
bindsym --to-code $mod+Shift+s sticky toggle

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Shift+e exec swaynag -t mtype -m \
    'You pressed the exit shortcut. What do you want?' \
    -b 'Poweroff' 'systemctl poweroff' \
    -b 'Reboot' 'systemctl reboot' \
    -b 'Sleep' 'systemctl suspend' \
    -b 'Logout' 'swaymsg exit'

# Shutdown/Logout menu
    set $mode_system System (l) lock, (e) logout, (s) suspend,R (r) reboot, (Shift+s) shutdown
    mode "$mode_system" {
        bindsym l exec $locker, mode "default"
        bindsym e exec swaymsg exit, mode "default"
        bindsym s exec $locker && systemctl suspend, mode "default"
        bindsym r exec systemctl reboot, mode "default"
        bindsym Shift+s exec systemctl poweroff -i, mode "default"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }

    bindsym $mod+Delete mode "$mode_system"


### Status bar ###

# bar {
#    swaybar_command waybar
# }

### Autostart ### (to fix time - timedatectl set-ntp true)

# exec killall /usr/bin/earlyoom
# exec sh -c "/usr/bin/earlyoom -r 0 -m 2,1 --prefer '^Web Content$' --avoid '^(sway|waybar|pacman|packagekitd|gnome-shell|gnome-session-c|gnome-session-b|lightdm|sddm|sddm-helper|gdm|gdm-wayland-ses|gdm-session-wor|gdm-x-session|Xorg|Xwayland|systemd|systemd-logind|dbus-daemon|dbus-broker|cinnamon|cinnamon-sessio|kwin_x11|kwin_wayland|plasmashell|ksmserver|plasma_session|startplasma-way|xfce4-session|mate-session|marco|lxqt-session|openbox)'"
# exec sleep 5
# exec --no-startup-id blueman-applet
# exec --no-startup-id parcellite
# exec --no-startup-id sh -c "pulseaudio --daemonize"
# exec --no-startup-id /usr/bin/nm-applet --indicator
# exec --no-startup-id /usr/bin/redshift
# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec mako
# exec ~/.azotebg
# exec ~/.config/sway/modules/critical_battery_beeper/critical_battery_beeper.py
# exec swayidle -w \
#     timeout 7200 'swaylock-fancy' \
#     timeout 7400 'swaymsg "output * dpms off"' \
#     resume 'swaymsg "output * dpms on"' \
#     before-sleep 'swaylock-fancy'

# exec_always --no-startup-id ff-theme-util
# exec_always --no-startup-id fix_xcursor
# exec_always sh -c "GDK_BACKEND=X11 pamac-tray"
# exec start-pulse-audio-x11
# exec_always --no-startup-id sbxkb
# exec pa-applet

# Gtk applications settings
exec_always {
    gsettings set $gnomeschema gtk-theme 'Yaru-dark'
    gsettings set $gnomeschema icon-theme 'Yaru'
    gsettings set $gnomeschema cursor-theme 'xcursor-breeze'
    gsettings set $gnomeschema font-name 'SF Pro Text Regular 10'
}

include /etc/sway/config.d/*

# Theme colors                                                  #f4692e
#       class	            border	    background	text	    indicator	child_border			
client.background	        n/a	        #ffffff	    n/a	        n/a	        n/a
client.focused	            #99644c	    #773e28	    #ffffff	    #99644c	    #773e28
client.focused_inactive	    #333333	    #5f676a	    #ffffff	    #484e50	    #5f676a
client.unfocused	        #333333	    #222222	    #888888	    #292d2e	    #222222
client.urgent	            #2f343a	    #900000	    #ffffff	    #900000	    #900000
client.placeholder	        #000000	    #0c0c0c	    #ffffff	    #000000	    #0c0c0c
