function e(e,t,r){return e instanceof Object==!1?r:t in e?e[t]:r}function t(e,t=0,r=e.byteLength-t,s=!1){let i="";for(const n of new Uint8Array(e,t,r)){const e=n.toString(16).toUpperCase();1===e.length&&(i+="0"),i+=e,s&&(i+=" ")}return i.trim()}function r(e,t,r,s){return t instanceof ArrayBuffer==!1?(e.error='Wrong parameter: inputBuffer must be "ArrayBuffer"',!1):0===t.byteLength?(e.error="Wrong parameter: inputBuffer has zero length",!1):r<0?(e.error="Wrong parameter: inputOffset less than zero",!1):s<0?(e.error="Wrong parameter: inputLength less than zero",!1):!(t.byteLength-r-s<0)||(e.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1)}function s(e,t){let r=0;if(1===e.length)return e[0];for(let s=e.length-1;s>=0;s--)r+=e[e.length-1-s]*Math.pow(2,t*s);return r}function i(e,t,r=-1){const s=r;let i=e,n=0,a=Math.pow(2,t);for(let r=1;r<8;r++){if(e<a){let e;if(s<0)e=new ArrayBuffer(r),n=r;else{if(s<r)return new ArrayBuffer(0);e=new ArrayBuffer(s),n=s}const a=new Uint8Array(e);for(let e=r-1;e>=0;e--){const r=Math.pow(2,e*t);a[n-e-1]=Math.floor(i/r),i-=a[n-e-1]*r}return e}a*=Math.pow(2,t)}return new ArrayBuffer(0)}function n(...e){let t=0,r=0;for(const r of e)t+=r.byteLength;const s=new ArrayBuffer(t),i=new Uint8Array(s);for(const t of e)i.set(new Uint8Array(t),r),r+=t.byteLength;return s}function a(...e){let t=0,r=0;for(const r of e)t+=r.length;const s=new ArrayBuffer(t),i=new Uint8Array(s);for(const t of e)i.set(t,r),r+=t.length;return i}function o(){const e=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){const t=255===e[0]&&128&e[1],r=0===e[0]&&0==(128&e[1]);(t||r)&&this.warnings.push("Needlessly long format")}const t=new ArrayBuffer(this.valueHex.byteLength),r=new Uint8Array(t);for(let e=0;e<this.valueHex.byteLength;e++)r[e]=0;r[0]=128&e[0];const i=s(r,8),n=new ArrayBuffer(this.valueHex.byteLength),a=new Uint8Array(n);for(let t=0;t<this.valueHex.byteLength;t++)a[t]=e[t];return a[0]&=127,s(a,8)-i}function l(e){const t=e<0?-1*e:e;let r=128;for(let s=1;s<8;s++){if(t<=r){if(e<0){const e=i(r-t,8,s);return new Uint8Array(e)[0]|=128,e}let n=i(t,8,s),a=new Uint8Array(n);if(128&a[0]){const e=n.slice(0),t=new Uint8Array(e);n=new ArrayBuffer(n.byteLength+1),a=new Uint8Array(n);for(let r=0;r<e.byteLength;r++)a[r+1]=t[r];a[0]=0}return n}r*=Math.pow(2,8)}return new ArrayBuffer(0)}function c(e,t){if(e.byteLength!==t.byteLength)return!1;const r=new Uint8Array(e),s=new Uint8Array(t);for(let e=0;e<r.length;e++)if(r[e]!==s[e])return!1;return!0}function h(e,t){const r=e.toString(10);if(t<r.length)return"";const s=t-r.length,i=new Array(s);for(let e=0;e<s;e++)i[e]="0";return i.join("").concat(r)}const u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",m="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=";function f(e,t=!1,r=!1,s=!1){let i=0,n=0,a=0,o="";const l=t?m:u;if(s){let t=0;for(let r=0;r<e.length;r++)if(0!==e.charCodeAt(r)){t=r;break}e=e.slice(t)}for(;i<e.length;){const t=e.charCodeAt(i++);i>=e.length&&(n=1);const s=e.charCodeAt(i++);i>=e.length&&(a=1);const c=e.charCodeAt(i++),h=t>>2,u=(3&t)<<4|s>>4;let m=(15&s)<<2|c>>6,f=63&c;1===n?m=f=64:1===a&&(f=64),o+=r?64===m?`${l.charAt(h)}${l.charAt(u)}`:64===f?`${l.charAt(h)}${l.charAt(u)}${l.charAt(m)}`:`${l.charAt(h)}${l.charAt(u)}${l.charAt(m)}${l.charAt(f)}`:`${l.charAt(h)}${l.charAt(u)}${l.charAt(m)}${l.charAt(f)}`}return o}function g(e,t=!1,r=!1){const s=t?m:u;function i(e){for(let t=0;t<64;t++)if(s.charAt(t)===e)return t;return 64}function n(e){return 64===e?0:e}let a=0,o="";for(;a<e.length;){const t=i(e.charAt(a++)),r=a>=e.length?0:i(e.charAt(a++)),s=a>=e.length?0:i(e.charAt(a++)),l=a>=e.length?0:i(e.charAt(a++)),c=n(t)<<2|n(r)>>4,h=(15&n(r))<<4|n(s)>>2,u=(3&n(s))<<6|n(l);o+=String.fromCharCode(c),64!==s&&(o+=String.fromCharCode(h)),64!==l&&(o+=String.fromCharCode(u))}if(r){let e=-1;for(let t=o.length-1;t>=0;t--)if(0!==o.charCodeAt(t)){e=t;break}o=-1!==e?o.slice(0,e+1):""}return o}function d(e){let t="";const r=new Uint8Array(e);for(const e of r)t+=String.fromCharCode(e);return t}function b(e){const t=e.length,r=new ArrayBuffer(t),s=new Uint8Array(r);for(let r=0;r<t;r++)s[r]=e.charCodeAt(r);return r}const y=Math.log(2);function p(e){const t=Math.log(e)/y,r=Math.floor(t),s=Math.round(t);return r===s?r:s}function v(e,t){for(const r of t)delete e[r]}const k=[new Uint8Array([1])],w="0123456789";class B{constructor(t={}){this.blockLength=e(t,"blockLength",0),this.error=e(t,"error",""),this.warnings=e(t,"warnings",[]),this.valueBeforeDecode="valueBeforeDecode"in t?t.valueBeforeDecode.slice(0):new ArrayBuffer(0)}static blockName(){return"baseBlock"}toJSON(){return{blockName:this.constructor.blockName(),blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:t(this.valueBeforeDecode,0,this.valueBeforeDecode.byteLength)}}}const A=s=>(class extends s{constructor(t={}){super(t),this.isHexOnly=e(t,"isHexOnly",!1),this.valueHex="valueHex"in t?t.valueHex.slice(0):new ArrayBuffer(0)}static blockName(){return"hexBlock"}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;return 0===new Uint8Array(e,t,s).length?(this.warnings.push("Zero buffer length"),t):(this.valueHex=e.slice(t,t+s),this.blockLength=s,t+s)}toBER(e=!1){return!0!==this.isHexOnly?(this.error='Flag "isHexOnly" is not set, abort',new ArrayBuffer(0)):!0===e?new ArrayBuffer(this.valueHex.byteLength):this.valueHex.slice(0)}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}});class S extends(A(B)){constructor(t={}){super(),"idBlock"in t?(this.isHexOnly=e(t.idBlock,"isHexOnly",!1),this.valueHex=e(t.idBlock,"valueHex",new ArrayBuffer(0)),this.tagClass=e(t.idBlock,"tagClass",-1),this.tagNumber=e(t.idBlock,"tagNumber",-1),this.isConstructed=e(t.idBlock,"isConstructed",!1)):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}static blockName(){return"identificationBlock"}toBER(e=!1){let t,r,s=0;switch(this.tagClass){case 1:s|=0;break;case 2:s|=64;break;case 3:s|=128;break;case 4:s|=192;break;default:return this.error="Unknown tag class",new ArrayBuffer(0)}if(this.isConstructed&&(s|=32),this.tagNumber<31&&!this.isHexOnly){if(t=new ArrayBuffer(1),r=new Uint8Array(t),!e){let e=this.tagNumber;s|=e&=31,r[0]=s}return t}if(!1===this.isHexOnly){const n=i(this.tagNumber,7),a=new Uint8Array(n),o=n.byteLength;if(t=new ArrayBuffer(o+1),(r=new Uint8Array(t))[0]=31|s,!e){for(let e=0;e<o-1;e++)r[e+1]=128|a[e];r[o]=a[o-1]}return t}if(t=new ArrayBuffer(this.valueHex.byteLength+1),(r=new Uint8Array(t))[0]=31|s,!1===e){const e=new Uint8Array(this.valueHex);for(let t=0;t<e.length-1;t++)r[t+1]=128|e[t];r[this.valueHex.byteLength]=e[e.length-1]}return t}fromBER(e,t,i){if(!1===r(this,e,t,i))return-1;const n=new Uint8Array(e,t,i);if(0===n.length)return this.error="Zero buffer length",-1;switch(192&n[0]){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=32==(32&n[0]),this.isHexOnly=!1;const a=31&n[0];if(31!==a)this.tagNumber=a,this.blockLength=1;else{let e=1;this.valueHex=new ArrayBuffer(255);let t=255,r=new Uint8Array(this.valueHex);for(;128&n[e];){if(r[e-1]=127&n[e],++e>=n.length)return this.error="End of input reached before message was fully decoded",-1;if(e===t){t+=255;const e=new ArrayBuffer(t),s=new Uint8Array(e);for(let e=0;e<r.length;e++)s[e]=r[e];this.valueHex=new ArrayBuffer(t),r=new Uint8Array(this.valueHex)}}this.blockLength=e+1,r[e-1]=127&n[e];const i=new ArrayBuffer(e),a=new Uint8Array(i);for(let t=0;t<e;t++)a[t]=r[t];this.valueHex=new ArrayBuffer(e),(r=new Uint8Array(this.valueHex)).set(a),this.blockLength<=9?this.tagNumber=s(r,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(1===this.tagClass&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.tagClass=this.tagClass,e.tagNumber=this.tagNumber,e.isConstructed=this.isConstructed,e}}class C extends B{constructor(t={}){super(),"lenBlock"in t?(this.isIndefiniteForm=e(t.lenBlock,"isIndefiniteForm",!1),this.longFormUsed=e(t.lenBlock,"longFormUsed",!1),this.length=e(t.lenBlock,"length",0)):(this.isIndefiniteForm=!1,this.longFormUsed=!1,this.length=0)}static blockName(){return"lengthBlock"}fromBER(e,t,i){if(!1===r(this,e,t,i))return-1;const n=new Uint8Array(e,t,i);if(0===n.length)return this.error="Zero buffer length",-1;if(255===n[0])return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=128===n[0],!0===this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(128&n[0]),!1===this.longFormUsed)return this.length=n[0],this.blockLength=1,t+this.blockLength;const a=127&n[0];if(a>8)return this.error="Too big integer",-1;if(a+1>n.length)return this.error="End of input reached before message was fully decoded",-1;const o=new Uint8Array(a);for(let e=0;e<a;e++)o[e]=n[e+1];return 0===o[a-1]&&this.warnings.push("Needlessly long encoded length"),this.length=s(o,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unneccesary usage of long length form"),this.blockLength=a+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=128),t;if(!0===this.longFormUsed){const s=i(this.length,8);if(s.byteLength>127)return this.error="Too big length",new ArrayBuffer(0);if(t=new ArrayBuffer(s.byteLength+1),!0===e)return t;const n=new Uint8Array(s);(r=new Uint8Array(t))[0]=128|s.byteLength;for(let e=0;e<s.byteLength;e++)r[e+1]=n[e];return t}return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=this.length),t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isIndefiniteForm=this.isIndefiniteForm,e.longFormUsed=this.longFormUsed,e.length=this.length,e}}class x extends B{constructor(e={}){super(e)}static blockName(){return"valueBlock"}fromBER(e,t,r){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}toBER(e=!1){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}}class N extends B{constructor(e={},t=x){super(e),"name"in e&&(this.name=e.name),"optional"in e&&(this.optional=e.optional),"primitiveSchema"in e&&(this.primitiveSchema=e.primitiveSchema),this.idBlock=new S(e),this.lenBlock=new C(e),this.valueBlock=new t(e)}static blockName(){return"BaseBlock"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}toBER(e=!1){let t;const r=this.idBlock.toBER(e),s=this.valueBlock.toBER(!0);let i;if(this.lenBlock.length=s.byteLength,t=n(r,this.lenBlock.toBER(e)),t=n(t,i=!1===e?this.valueBlock.toBER(e):new ArrayBuffer(this.lenBlock.length)),!0===this.lenBlock.isIndefiniteForm){const r=new ArrayBuffer(2);if(!1===e){const e=new Uint8Array(r);e[0]=0,e[1]=0}t=n(t,r)}return t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.idBlock=this.idBlock.toJSON(),e.lenBlock=this.lenBlock.toJSON(),e.valueBlock=this.valueBlock.toJSON(),"name"in this&&(e.name=this.name),"optional"in this&&(e.optional=this.optional),"primitiveSchema"in this&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}}class L extends x{constructor(t={}){super(t),this.valueHex="valueHex"in t?t.valueHex.slice(0):new ArrayBuffer(0),this.isHexOnly=e(t,"isHexOnly",!0)}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;const i=new Uint8Array(e,t,s);if(0===i.length)return this.warnings.push("Zero buffer length"),t;this.valueHex=new ArrayBuffer(i.length);const n=new Uint8Array(this.valueHex);for(let e=0;e<i.length;e++)n[e]=i[e];return this.blockLength=s,t+s}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"PrimitiveValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e.isHexOnly=this.isHexOnly,e}}class E extends N{constructor(e={}){super(e,L),this.idBlock.isConstructed=!1}static blockName(){return"PRIMITIVE"}}class I extends x{constructor(t={}){super(t),this.value=e(t,"value",[]),this.isIndefiniteForm=e(t,"isIndefiniteForm",!1)}fromBER(e,t,s){const i=t,n=s;if(!1===r(this,e,t,s))return-1;if(0===new Uint8Array(e,t,s).length)return this.warnings.push("Zero buffer length"),t;let a=t;for(;o=this.isIndefiniteForm,l=s,(!0===o?1:l)>0;){const t=ve(e,a,s);if(-1===t.offset)return this.error=t.result.error,this.warnings.concat(t.result.warnings),-1;if(a=t.offset,this.blockLength+=t.result.blockLength,s-=t.result.blockLength,this.value.push(t.result),!0===this.isIndefiniteForm&&t.result.constructor.blockName()===O.blockName())break}var o,l;return!0===this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.blockName()===O.blockName()?this.value.pop():this.warnings.push("No EndOfContent block encoded")),this.valueBeforeDecode=e.slice(i,i+n),a}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){t=n(t,this.value[r].toBER(e))}return t}static blockName(){return"ConstructedValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.isIndefiniteForm=this.isIndefiniteForm,e.value=[];for(let t=0;t<this.value.length;t++)e.value.push(this.value[t].toJSON());return e}}class P extends N{constructor(e={}){super(e,I),this.idBlock.isConstructed=!0}static blockName(){return"CONSTRUCTED"}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}}class H extends x{constructor(e={}){super(e)}fromBER(e,t,r){return t}toBER(e=!1){return new ArrayBuffer(0)}static blockName(){return"EndOfContentValueBlock"}}class O extends N{constructor(e={}){super(e,H),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}static blockName(){return"EndOfContent"}}class U extends x{constructor(t={}){if(super(t),this.value=e(t,"value",!1),this.isHexOnly=e(t,"isHexOnly",!1),"valueHex"in t)this.valueHex=t.valueHex.slice(0);else if(this.valueHex=new ArrayBuffer(1),!0===this.value){new Uint8Array(this.valueHex)[0]=255}}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;const i=new Uint8Array(e,t,s);s>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,this.valueHex=new ArrayBuffer(i.length);const n=new Uint8Array(this.valueHex);for(let e=0;e<i.length;e++)n[e]=i[e];return 0!==o.call(this)?this.value=!0:this.value=!1,this.blockLength=s,t+s}toBER(e=!1){return this.valueHex}static blockName(){return"BooleanValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class D extends N{constructor(e={}){super(e,U),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}static blockName(){return"Boolean"}}class V extends P{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}static blockName(){return"Sequence"}}class R extends P{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}static blockName(){return"Set"}}class j extends N{constructor(e={}){super(e,B),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}static blockName(){return"Null"}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+r}toBER(e=!1){const t=new ArrayBuffer(2);if(!0===e)return t;const r=new Uint8Array(t);return r[0]=5,r[1]=0,t}}class _ extends(A(I)){constructor(t={}){super(t),this.isConstructed=e(t,"isConstructed",!1)}fromBER(e,t,r){let s=0;if(!0===this.isConstructed){if(this.isHexOnly=!1,-1===(s=I.prototype.fromBER.call(this,e,t,r)))return s;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===O.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(t!==K.blockName())return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(e,t,r),this.blockLength=r;return s}toBER(e=!1){if(!0===this.isConstructed)return I.prototype.toBER.call(this,e);let t=new ArrayBuffer(this.valueHex.byteLength);return!0===e?t:0===this.valueHex.byteLength?t:t=this.valueHex.slice(0)}static blockName(){return"OctetStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class K extends N{constructor(e={}){super(e,_),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,0===r?(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),t):super.fromBER(e,t,r)}static blockName(){return"OctetString"}isEqual(e){return e instanceof K!=!1&&JSON.stringify(this)===JSON.stringify(e)}}class J extends(A(I)){constructor(t={}){super(t),this.unusedBits=e(t,"unusedBits",0),this.isConstructed=e(t,"isConstructed",!1),this.blockLength=this.valueHex.byteLength}fromBER(e,t,s){if(0===s)return t;let i=-1;if(!0===this.isConstructed){if(-1===(i=I.prototype.fromBER.call(this,e,t,s)))return i;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===O.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(t!==T.blockName())return this.error="BIT STRING may consists of BIT STRINGs only",-1;if(this.unusedBits>0&&this.value[e].valueBlock.unusedBits>0)return this.error='Usign of "unused bits" inside constructive BIT STRING allowed for least one only',-1;if(this.unusedBits=this.value[e].valueBlock.unusedBits,this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1}return i}if(!1===r(this,e,t,s))return-1;const n=new Uint8Array(e,t,s);if(this.unusedBits=n[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;this.valueHex=new ArrayBuffer(n.length-1);const a=new Uint8Array(this.valueHex);for(let e=0;e<s-1;e++)a[e]=n[e+1];return this.blockLength=n.length,t+s}toBER(e=!1){if(!0===this.isConstructed)return I.prototype.toBER.call(this,e);if(!0===e)return new ArrayBuffer(this.valueHex.byteLength+1);if(0===this.valueHex.byteLength)return new ArrayBuffer(0);const t=new Uint8Array(this.valueHex),r=new ArrayBuffer(this.valueHex.byteLength+1),s=new Uint8Array(r);s[0]=this.unusedBits;for(let e=0;e<this.valueHex.byteLength;e++)s[e+1]=t[e];return r}static blockName(){return"BitStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.unusedBits=this.unusedBits,e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class T extends N{constructor(e={}){super(e,J),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}static blockName(){return"BitString"}fromBER(e,t,r){return 0===r?t:(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r))}isEqual(e){return e instanceof T!=!1&&JSON.stringify(this)===JSON.stringify(e)}}class F extends(A(x)){constructor(e={}){super(e),"value"in e&&(this.valueDec=e.value)}set valueHex(e){this._valueHex=e.slice(0),e.byteLength>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,e.byteLength>0&&(this._valueDec=o.call(this)))}get valueHex(){return this._valueHex}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this._valueHex=l(e)}get valueDec(){return this._valueDec}fromDER(e,t,r,s=0){const i=this.fromBER(e,t,r);if(-1===i)return i;const n=new Uint8Array(this._valueHex);if(0===n[0]&&0!=(128&n[1])){const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}else if(0!==s&&this._valueHex.byteLength<s){s-this._valueHex.byteLength>1&&(s=this._valueHex.byteLength+1);const e=new ArrayBuffer(s);new Uint8Array(e).set(n,s-this._valueHex.byteLength),this._valueHex=e.slice(0)}return i}toDER(e=!1){const t=new Uint8Array(this._valueHex);switch(!0){case 0!=(128&t[0]):{const e=new ArrayBuffer(this._valueHex.byteLength+1),r=new Uint8Array(e);r[0]=0,r.set(t,1),this._valueHex=e.slice(0)}break;case 0===t[0]&&0==(128&t[1]):{const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}}return this.toBER(e)}fromBER(e,t,r){const s=super.fromBER(e,t,r);return-1===s?s:(this.blockLength=r,t+r)}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"IntegerValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e}toString(){function e(e,t){const r=new Uint8Array([0]);let s=new Uint8Array(e),i=new Uint8Array(t),n=s.slice(0);const o=n.length-1;let l=i.slice(0);const c=l.length-1;let h=0;let u=0;for(let e=c<o?o:c;e>=0;e--,u++){switch(!0){case u<l.length:h=n[o-u]+l[c-u]+r[0];break;default:h=n[o-u]+r[0]}switch(r[0]=h/10,!0){case u>=n.length:n=a(new Uint8Array([h%10]),n);break;default:n[o-u]=h%10}}return r[0]>0&&(n=a(r,n)),n.slice(0)}function t(e){if(e>=k.length)for(let t=k.length;t<=e;t++){const e=new Uint8Array([0]);let r=k[t-1].slice(0);for(let t=r.length-1;t>=0;t--){const s=new Uint8Array([(r[t]<<1)+e[0]]);e[0]=s[0]/10,r[t]=s[0]%10}e[0]>0&&(r=a(e,r)),k.push(r)}return k[e]}function r(e,t){let r=0,s=new Uint8Array(e),i=new Uint8Array(t),n=s.slice(0);const a=n.length-1;let o=i.slice(0);const l=o.length-1;let c,h=0;for(let e=l;e>=0;e--,h++)switch(c=n[a-h]-o[l-h]-r,!0){case c<0:r=1,n[a-h]=c+10;break;default:r=0,n[a-h]=c}if(r>0)for(let e=a-l+1;e>=0;e--,h++){if(!((c=n[a-h]-r)<0)){r=0,n[a-h]=c;break}r=1,n[a-h]=c+10}return n.slice()}const s=8*this._valueHex.byteLength-1;let i,n=new Uint8Array(8*this._valueHex.byteLength/3),o=0;const l=new Uint8Array(this._valueHex);let c="",h=!1;for(let a=this._valueHex.byteLength-1;a>=0;a--){i=l[a];for(let a=0;a<8;a++){if(1==(1&i))switch(o){case s:n=r(t(o),n),c="-";break;default:n=e(n,t(o))}o++,i>>=1}}for(let e=0;e<n.length;e++)n[e]&&(h=!0),h&&(c+=w.charAt(n[e]));return!1===h&&(c+=w.charAt(0)),c}}class M extends N{constructor(e={}){super(e,F),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}static blockName(){return"Integer"}isEqual(e){return e instanceof M?this.valueBlock.isHexOnly&&e.valueBlock.isHexOnly?c(this.valueBlock.valueHex,e.valueBlock.valueHex):this.valueBlock.isHexOnly===e.valueBlock.isHexOnly&&this.valueBlock.valueDec===e.valueBlock.valueDec:e instanceof ArrayBuffer&&c(this.valueBlock.valueHex,e)}convertToDER(){const e=new M({valueHex:this.valueBlock.valueHex});return e.valueBlock.toDER(),e}convertFromDER(){const e=this.valueBlock.valueHex.byteLength%2?this.valueBlock.valueHex.byteLength+1:this.valueBlock.valueHex.byteLength,t=new M({valueHex:this.valueBlock.valueHex});return t.valueBlock.fromDER(t.valueBlock.valueHex,0,t.valueBlock.valueHex.byteLength,e),t}}class $ extends M{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}static blockName(){return"Enumerated"}}class q extends(A(B)){constructor(t={}){super(t),this.valueDec=e(t,"valueDec",-1),this.isFirstSid=e(t,"isFirstSid",!1)}static blockName(){return"sidBlock"}fromBER(e,t,i){if(0===i)return t;if(!1===r(this,e,t,i))return-1;const n=new Uint8Array(e,t,i);this.valueHex=new ArrayBuffer(i);let a=new Uint8Array(this.valueHex);for(let e=0;e<i&&(a[e]=127&n[e],this.blockLength++,0!=(128&n[e]));e++);const o=new ArrayBuffer(this.blockLength),l=new Uint8Array(o);for(let e=0;e<this.blockLength;e++)l[e]=a[e];return this.valueHex=o.slice(0),a=new Uint8Array(this.valueHex),0!=(128&n[this.blockLength-1])?(this.error="End of input reached before message was fully decoded",-1):(0===a[0]&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=s(a,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e=!1){let t,r;if(this.isHexOnly){if(!0===e)return new ArrayBuffer(this.valueHex.byteLength);const s=new Uint8Array(this.valueHex);t=new ArrayBuffer(this.blockLength),r=new Uint8Array(t);for(let e=0;e<this.blockLength-1;e++)r[e]=128|s[e];return r[this.blockLength-1]=s[this.blockLength-1],t}const s=i(this.valueDec,7);if(0===s.byteLength)return this.error="Error during encoding SID value",new ArrayBuffer(0);if(t=new ArrayBuffer(s.byteLength),!1===e){const e=new Uint8Array(s);r=new Uint8Array(t);for(let t=0;t<s.byteLength-1;t++)r[t]=128|e[t];r[s.byteLength-1]=e[s.byteLength-1]}return t}toString(){let e="";if(!0===this.isHexOnly)e=t(this.valueHex,0,this.valueHex.byteLength);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e.isFirstSid=this.isFirstSid,e}}class W extends x{constructor(t={}){super(t),this.fromString(e(t,"value",""))}fromBER(e,t,r){let s=t;for(;r>0;){const t=new q;if(-1===(s=t.fromBER(e,s,r)))return this.blockLength=0,this.error=t.error,s;0===this.value.length&&(t.isFirstSid=!0),this.blockLength+=t.blockLength,r-=t.blockLength,this.value.push(t)}return s}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){const s=this.value[r].toBER(e);if(0===s.byteLength)return this.error=this.value[r].error,new ArrayBuffer(0);t=n(t,s)}return t}fromString(e){this.value=[];let t=0,r=0,s="",i=!1;do{if(s=-1===(r=e.indexOf(".",t))?e.substr(t):e.substr(t,r-t),t=r+1,i){const e=this.value[0];let t=0;switch(e.valueDec){case 0:break;case 1:t=40;break;case 2:t=80;break;default:return this.value=[],!1}const r=parseInt(s,10);if(isNaN(r))return!0;e.valueDec=r+t,i=!1}else{const e=new q;if(e.valueDec=parseInt(s,10),isNaN(e.valueDec))return!0;0===this.value.length&&(e.isFirstSid=!0,i=!0),this.value.push(e)}}while(-1!==r);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let s=this.value[r].toString();0!==r&&(e=`${e}.`),t?(s=`{${s}}`,this.value[r].isFirstSid?e=`2.{${s} - 80}`:e+=s):e+=s}return e}static blockName(){return"ObjectIdentifierValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.value=this.toString(),e.sidArray=[];for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}}class G extends N{constructor(e={}){super(e,W),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}static blockName(){return"ObjectIdentifier"}}class Q extends(A(B)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"Utf8StringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class Z extends N{constructor(e={}){super(e,Q),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}static blockName(){return"Utf8String"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e));try{this.valueBlock.value=decodeURIComponent(escape(this.valueBlock.value))}catch(e){this.warnings.push(`Error during "decodeURIComponent": ${e}, using raw string`)}}fromString(e){const t=unescape(encodeURIComponent(e)),r=t.length;this.valueBlock.valueHex=new ArrayBuffer(r);const s=new Uint8Array(this.valueBlock.valueHex);for(let e=0;e<r;e++)s[e]=t.charCodeAt(e);this.valueBlock.value=e}}class z extends(A(B)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"BmpStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class Y extends N{constructor(e={}){super(e,z),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}static blockName(){return"BmpString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=2){const t=r[e];r[e]=r[e+1],r[e+1]=t}this.valueBlock.value=String.fromCharCode.apply(null,new Uint16Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(2*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++){const t=i(e.charCodeAt(s),8),n=new Uint8Array(t);if(n.length>2)continue;const a=2-n.length;for(let e=n.length-1;e>=0;e--)r[2*s+e+a]=n[e]}this.valueBlock.value=e}}class X extends(A(B)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"UniversalStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class ee extends N{constructor(e={}){super(e,X),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}static blockName(){return"UniversalString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=4)r[e]=r[e+3],r[e+1]=r[e+2],r[e+2]=0,r[e+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(4*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++){const t=i(e.charCodeAt(s),8),n=new Uint8Array(t);if(n.length>4)continue;const a=4-n.length;for(let e=n.length-1;e>=0;e--)r[4*s+e+a]=n[e]}this.valueBlock.value=e}}class te extends(A(B)){constructor(e={}){super(e),this.value="",this.isHexOnly=!0}static blockName(){return"SimpleStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class re extends N{constructor(e={}){super(e,te),"value"in e&&this.fromString(e.value)}static blockName(){return"SIMPLESTRING"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++)r[s]=e.charCodeAt(s);this.valueBlock.value=e}}class se extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}static blockName(){return"NumericString"}}class ie extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}static blockName(){return"PrintableString"}}class ne extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}static blockName(){return"TeletexString"}}class ae extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}static blockName(){return"VideotexString"}}class oe extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}static blockName(){return"IA5String"}}class le extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}static blockName(){return"GraphicString"}}class ce extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}static blockName(){return"VisibleString"}}class he extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}static blockName(){return"GeneralString"}}class ue extends re{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}static blockName(){return"CharacterString"}}class me extends ce{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){const t=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/gi.exec(e);if(null===t)return void(this.error="Wrong input string for convertion");const r=parseInt(t[1],10);this.year=r>=50?1900+r:2e3+r,this.month=parseInt(t[2],10),this.day=parseInt(t[3],10),this.hour=parseInt(t[4],10),this.minute=parseInt(t[5],10),this.second=parseInt(t[6],10)}toString(){const e=new Array(7);return e[0]=h(this.year<2e3?this.year-1900:this.year-2e3,2),e[1]=h(this.month,2),e[2]=h(this.day,2),e[3]=h(this.hour,2),e[4]=h(this.minute,2),e[5]=h(this.second,2),e[6]="Z",e.join("")}static blockName(){return"UTCTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e}}class fe extends ce{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,this.millisecond=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t,r=!1,s="",i="",n=0,a=0,o=0;if("Z"===e[e.length-1])s=e.substr(0,e.length-1),r=!0;else{const t=new Number(e[e.length-1]);if(isNaN(t.valueOf()))throw new Error("Wrong input string for convertion");s=e}if(r){if(-1!==s.indexOf("+"))throw new Error("Wrong input string for convertion");if(-1!==s.indexOf("-"))throw new Error("Wrong input string for convertion")}else{let e=1,t=s.indexOf("+"),r="";if(-1===t&&(t=s.indexOf("-"),e=-1),-1!==t){if(r=s.substr(t+1),s=s.substr(0,t),2!==r.length&&4!==r.length)throw new Error("Wrong input string for convertion");let i=new Number(r.substr(0,2));if(isNaN(i.valueOf()))throw new Error("Wrong input string for convertion");if(a=e*i,4===r.length){if(i=new Number(r.substr(2,2)),isNaN(i.valueOf()))throw new Error("Wrong input string for convertion");o=e*i}}}let l=s.indexOf(".");if(-1===l&&(l=s.indexOf(",")),-1!==l){const e=new Number(`0${s.substr(l)}`);if(isNaN(e.valueOf()))throw new Error("Wrong input string for convertion");n=e.valueOf(),i=s.substr(0,l)}else i=s;switch(!0){case 8===i.length:if(t=/(\d{4})(\d{2})(\d{2})/gi,-1!==l)throw new Error("Wrong input string for convertion");break;case 10===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*n;this.minute=Math.floor(e),e=60*(e-this.minute),this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 12===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*n;this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 14===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){const e=1e3*n;this.millisecond=Math.floor(e)}break;default:throw new Error("Wrong input string for convertion")}const c=t.exec(i);if(null===c)throw new Error("Wrong input string for convertion");for(let e=1;e<c.length;e++)switch(e){case 1:this.year=parseInt(c[e],10);break;case 2:this.month=parseInt(c[e],10);break;case 3:this.day=parseInt(c[e],10);break;case 4:this.hour=parseInt(c[e],10)+a;break;case 5:this.minute=parseInt(c[e],10)+o;break;case 6:this.second=parseInt(c[e],10);break;default:throw new Error("Wrong input string for convertion")}if(!1===r){const e=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=e.getUTCFullYear(),this.month=e.getUTCMonth(),this.day=e.getUTCDay(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}}toString(){const e=[];return e.push(h(this.year,4)),e.push(h(this.month,2)),e.push(h(this.day,2)),e.push(h(this.hour,2)),e.push(h(this.minute,2)),e.push(h(this.second,2)),0!==this.millisecond&&(e.push("."),e.push(h(this.millisecond,3))),e.push("Z"),e.join("")}static blockName(){return"GeneralizedTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e.millisecond=this.millisecond,e}}class ge extends Z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}static blockName(){return"DATE"}}class de extends Z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}static blockName(){return"TimeOfDay"}}class be extends Z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}static blockName(){return"DateTime"}}class ye extends Z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}static blockName(){return"Duration"}}class pe extends Z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}static blockName(){return"TIME"}}function ve(e,t,s){const i=t;let n=new N({},Object);if(!1===r(new B,e,t,s))return n.error="Wrong input parameters",{offset:-1,result:n};if(0===new Uint8Array(e,t,s).length)return this.error="Zero buffer length",{offset:-1,result:n};let a=n.idBlock.fromBER(e,t,s);if(n.warnings.concat(n.idBlock.warnings),-1===a)return n.error=n.idBlock.error,{offset:-1,result:n};if(t=a,s-=n.idBlock.blockLength,a=n.lenBlock.fromBER(e,t,s),n.warnings.concat(n.lenBlock.warnings),-1===a)return n.error=n.lenBlock.error,{offset:-1,result:n};if(t=a,s-=n.lenBlock.blockLength,!1===n.idBlock.isConstructed&&!0===n.lenBlock.isIndefiniteForm)return n.error="Indefinite length form used for primitive encoding form",{offset:-1,result:n};let o=N;switch(n.idBlock.tagClass){case 1:if(n.idBlock.tagNumber>=37&&!1===n.idBlock.isHexOnly)return n.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:n};switch(n.idBlock.tagNumber){case 0:if(!0===n.idBlock.isConstructed&&n.lenBlock.length>0)return n.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:n};o=O;break;case 1:o=D;break;case 2:o=M;break;case 3:o=T;break;case 4:o=K;break;case 5:o=j;break;case 6:o=G;break;case 10:o=$;break;case 12:o=Z;break;case 14:o=pe;break;case 15:return n.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:n};case 16:o=V;break;case 17:o=R;break;case 18:o=se;break;case 19:o=ie;break;case 20:o=ne;break;case 21:o=ae;break;case 22:o=oe;break;case 23:o=me;break;case 24:o=fe;break;case 25:o=le;break;case 26:o=ce;break;case 27:o=he;break;case 28:o=ee;break;case 29:o=ue;break;case 30:o=Y;break;case 31:o=ge;break;case 32:o=de;break;case 33:o=be;break;case 34:o=ye;break;default:{let r;(r=!0===n.idBlock.isConstructed?new P:new E).idBlock=n.idBlock,r.lenBlock=n.lenBlock,r.warnings=n.warnings,a=(n=r).fromBER(e,t,s)}}break;case 2:case 3:case 4:default:o=!0===n.idBlock.isConstructed?P:E}return a=(n=function(e,t){if(e instanceof t)return e;const r=new t;return r.idBlock=e.idBlock,r.lenBlock=e.lenBlock,r.warnings=e.warnings,r.valueBeforeDecode=e.valueBeforeDecode.slice(0),r}(n,o)).fromBER(e,t,!0===n.lenBlock.isIndefiniteForm?s:n.lenBlock.length),n.valueBeforeDecode=e.slice(i,i+n.blockLength),{offset:a,result:n}}const ke=[new Uint8Array([1])],we="0123456789";class Be{constructor(t={}){this.blockLength=e(t,"blockLength",0),this.error=e(t,"error",""),this.warnings=e(t,"warnings",[]),this.valueBeforeDecode="valueBeforeDecode"in t?t.valueBeforeDecode.slice(0):new ArrayBuffer(0)}static blockName(){return"baseBlock"}toJSON(){return{blockName:this.constructor.blockName(),blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:t(this.valueBeforeDecode,0,this.valueBeforeDecode.byteLength)}}}const Ae=s=>(class extends s{constructor(t={}){super(t),this.isHexOnly=e(t,"isHexOnly",!1),this.valueHex="valueHex"in t?t.valueHex.slice(0):new ArrayBuffer(0)}static blockName(){return"hexBlock"}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;return 0===new Uint8Array(e,t,s).length?(this.warnings.push("Zero buffer length"),t):(this.valueHex=e.slice(t,t+s),this.blockLength=s,t+s)}toBER(e=!1){return!0!==this.isHexOnly?(this.error='Flag "isHexOnly" is not set, abort',new ArrayBuffer(0)):!0===e?new ArrayBuffer(this.valueHex.byteLength):this.valueHex.slice(0)}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}});class Se extends(Ae(Be)){constructor(t={}){super(),"idBlock"in t?(this.isHexOnly=e(t.idBlock,"isHexOnly",!1),this.valueHex=e(t.idBlock,"valueHex",new ArrayBuffer(0)),this.tagClass=e(t.idBlock,"tagClass",-1),this.tagNumber=e(t.idBlock,"tagNumber",-1),this.isConstructed=e(t.idBlock,"isConstructed",!1)):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}static blockName(){return"identificationBlock"}toBER(e=!1){let t,r,s=0;switch(this.tagClass){case 1:s|=0;break;case 2:s|=64;break;case 3:s|=128;break;case 4:s|=192;break;default:return this.error="Unknown tag class",new ArrayBuffer(0)}if(this.isConstructed&&(s|=32),this.tagNumber<31&&!this.isHexOnly){if(t=new ArrayBuffer(1),r=new Uint8Array(t),!e){let e=this.tagNumber;s|=e&=31,r[0]=s}return t}if(!1===this.isHexOnly){const n=i(this.tagNumber,7),a=new Uint8Array(n),o=n.byteLength;if(t=new ArrayBuffer(o+1),(r=new Uint8Array(t))[0]=31|s,!e){for(let e=0;e<o-1;e++)r[e+1]=128|a[e];r[o]=a[o-1]}return t}if(t=new ArrayBuffer(this.valueHex.byteLength+1),(r=new Uint8Array(t))[0]=31|s,!1===e){const e=new Uint8Array(this.valueHex);for(let t=0;t<e.length-1;t++)r[t+1]=128|e[t];r[this.valueHex.byteLength]=e[e.length-1]}return t}fromBER(e,t,i){if(!1===r(this,e,t,i))return-1;const n=new Uint8Array(e,t,i);if(0===n.length)return this.error="Zero buffer length",-1;switch(192&n[0]){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=32==(32&n[0]),this.isHexOnly=!1;const a=31&n[0];if(31!==a)this.tagNumber=a,this.blockLength=1;else{let e=1;this.valueHex=new ArrayBuffer(255);let t=255,r=new Uint8Array(this.valueHex);for(;128&n[e];){if(r[e-1]=127&n[e],++e>=n.length)return this.error="End of input reached before message was fully decoded",-1;if(e===t){t+=255;const e=new ArrayBuffer(t),s=new Uint8Array(e);for(let e=0;e<r.length;e++)s[e]=r[e];this.valueHex=new ArrayBuffer(t),r=new Uint8Array(this.valueHex)}}this.blockLength=e+1,r[e-1]=127&n[e];const i=new ArrayBuffer(e),a=new Uint8Array(i);for(let t=0;t<e;t++)a[t]=r[t];this.valueHex=new ArrayBuffer(e),(r=new Uint8Array(this.valueHex)).set(a),this.blockLength<=9?this.tagNumber=s(r,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(1===this.tagClass&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.tagClass=this.tagClass,e.tagNumber=this.tagNumber,e.isConstructed=this.isConstructed,e}}class Ce extends Be{constructor(t={}){super(),"lenBlock"in t?(this.isIndefiniteForm=e(t.lenBlock,"isIndefiniteForm",!1),this.longFormUsed=e(t.lenBlock,"longFormUsed",!1),this.length=e(t.lenBlock,"length",0)):(this.isIndefiniteForm=!1,this.longFormUsed=!1,this.length=0)}static blockName(){return"lengthBlock"}fromBER(e,t,i){if(!1===r(this,e,t,i))return-1;const n=new Uint8Array(e,t,i);if(0===n.length)return this.error="Zero buffer length",-1;if(255===n[0])return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=128===n[0],!0===this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(128&n[0]),!1===this.longFormUsed)return this.length=n[0],this.blockLength=1,t+this.blockLength;const a=127&n[0];if(a>8)return this.error="Too big integer",-1;if(a+1>n.length)return this.error="End of input reached before message was fully decoded",-1;const o=new Uint8Array(a);for(let e=0;e<a;e++)o[e]=n[e+1];return 0===o[a-1]&&this.warnings.push("Needlessly long encoded length"),this.length=s(o,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unneccesary usage of long length form"),this.blockLength=a+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=128),t;if(!0===this.longFormUsed){const s=i(this.length,8);if(s.byteLength>127)return this.error="Too big length",new ArrayBuffer(0);if(t=new ArrayBuffer(s.byteLength+1),!0===e)return t;const n=new Uint8Array(s);(r=new Uint8Array(t))[0]=128|s.byteLength;for(let e=0;e<s.byteLength;e++)r[e+1]=n[e];return t}return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=this.length),t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isIndefiniteForm=this.isIndefiniteForm,e.longFormUsed=this.longFormUsed,e.length=this.length,e}}class xe extends Be{constructor(e={}){super(e)}static blockName(){return"valueBlock"}fromBER(e,t,r){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}toBER(e=!1){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}}class Ne extends Be{constructor(e={},t=xe){super(e),"name"in e&&(this.name=e.name),"optional"in e&&(this.optional=e.optional),"primitiveSchema"in e&&(this.primitiveSchema=e.primitiveSchema),this.idBlock=new Se(e),this.lenBlock=new Ce(e),this.valueBlock=new t(e)}static blockName(){return"BaseBlock"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}toBER(e=!1){let t;const r=this.idBlock.toBER(e),s=this.valueBlock.toBER(!0);let i;if(this.lenBlock.length=s.byteLength,t=n(r,this.lenBlock.toBER(e)),t=n(t,i=!1===e?this.valueBlock.toBER(e):new ArrayBuffer(this.lenBlock.length)),!0===this.lenBlock.isIndefiniteForm){const r=new ArrayBuffer(2);if(!1===e){const e=new Uint8Array(r);e[0]=0,e[1]=0}t=n(t,r)}return t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.idBlock=this.idBlock.toJSON(),e.lenBlock=this.lenBlock.toJSON(),e.valueBlock=this.valueBlock.toJSON(),"name"in this&&(e.name=this.name),"optional"in this&&(e.optional=this.optional),"primitiveSchema"in this&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}}class Le extends xe{constructor(t={}){super(t),this.valueHex="valueHex"in t?t.valueHex.slice(0):new ArrayBuffer(0),this.isHexOnly=e(t,"isHexOnly",!0)}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;const i=new Uint8Array(e,t,s);if(0===i.length)return this.warnings.push("Zero buffer length"),t;this.valueHex=new ArrayBuffer(i.length);const n=new Uint8Array(this.valueHex);for(let e=0;e<i.length;e++)n[e]=i[e];return this.blockLength=s,t+s}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"PrimitiveValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e.isHexOnly=this.isHexOnly,e}}class Ee extends Ne{constructor(e={}){super(e,Le),this.idBlock.isConstructed=!1}static blockName(){return"PRIMITIVE"}}class Ie extends xe{constructor(t={}){super(t),this.value=e(t,"value",[]),this.isIndefiniteForm=e(t,"isIndefiniteForm",!1)}fromBER(e,t,s){const i=t,n=s;if(!1===r(this,e,t,s))return-1;if(0===new Uint8Array(e,t,s).length)return this.warnings.push("Zero buffer length"),t;let a=t;for(;o=this.isIndefiniteForm,l=s,(!0===o?1:l)>0;){const t=At(e,a,s);if(-1===t.offset)return this.error=t.result.error,this.warnings.concat(t.result.warnings),-1;if(a=t.offset,this.blockLength+=t.result.blockLength,s-=t.result.blockLength,this.value.push(t.result),!0===this.isIndefiniteForm&&t.result.constructor.blockName()===Oe.blockName())break}var o,l;return!0===this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.blockName()===Oe.blockName()?this.value.pop():this.warnings.push("No EndOfContent block encoded")),this.valueBeforeDecode=e.slice(i,i+n),a}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){t=n(t,this.value[r].toBER(e))}return t}static blockName(){return"ConstructedValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.isIndefiniteForm=this.isIndefiniteForm,e.value=[];for(let t=0;t<this.value.length;t++)e.value.push(this.value[t].toJSON());return e}}class Pe extends Ne{constructor(e={}){super(e,Ie),this.idBlock.isConstructed=!0}static blockName(){return"CONSTRUCTED"}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}}class He extends xe{constructor(e={}){super(e)}fromBER(e,t,r){return t}toBER(e=!1){return new ArrayBuffer(0)}static blockName(){return"EndOfContentValueBlock"}}class Oe extends Ne{constructor(e={}){super(e,He),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}static blockName(){return"EndOfContent"}}class Ue extends xe{constructor(t={}){if(super(t),this.value=e(t,"value",!1),this.isHexOnly=e(t,"isHexOnly",!1),"valueHex"in t)this.valueHex=t.valueHex.slice(0);else if(this.valueHex=new ArrayBuffer(1),!0===this.value){new Uint8Array(this.valueHex)[0]=255}}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;const i=new Uint8Array(e,t,s);s>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,this.valueHex=new ArrayBuffer(i.length);const n=new Uint8Array(this.valueHex);for(let e=0;e<i.length;e++)n[e]=i[e];return 0!==o.call(this)?this.value=!0:this.value=!1,this.blockLength=s,t+s}toBER(e=!1){return this.valueHex}static blockName(){return"BooleanValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class De extends Ne{constructor(e={}){super(e,Ue),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}static blockName(){return"Boolean"}}class Ve extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}static blockName(){return"Sequence"}}class Re extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}static blockName(){return"Set"}}class je extends Ne{constructor(e={}){super(e,Be),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}static blockName(){return"Null"}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+r}toBER(e=!1){const t=new ArrayBuffer(2);if(!0===e)return t;const r=new Uint8Array(t);return r[0]=5,r[1]=0,t}}class _e extends(Ae(Ie)){constructor(t={}){super(t),this.isConstructed=e(t,"isConstructed",!1)}fromBER(e,t,r){let s=0;if(!0===this.isConstructed){if(this.isHexOnly=!1,-1===(s=Ie.prototype.fromBER.call(this,e,t,r)))return s;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===Oe.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(t!==Ke.blockName())return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(e,t,r),this.blockLength=r;return s}toBER(e=!1){if(!0===this.isConstructed)return Ie.prototype.toBER.call(this,e);let t=new ArrayBuffer(this.valueHex.byteLength);return!0===e?t:0===this.valueHex.byteLength?t:t=this.valueHex.slice(0)}static blockName(){return"OctetStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class Ke extends Ne{constructor(e={}){super(e,_e),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,0===r?(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),t):super.fromBER(e,t,r)}static blockName(){return"OctetString"}isEqual(e){return e instanceof Ke!=!1&&JSON.stringify(this)===JSON.stringify(e)}}class Je extends(Ae(Ie)){constructor(t={}){super(t),this.unusedBits=e(t,"unusedBits",0),this.isConstructed=e(t,"isConstructed",!1),this.blockLength=this.valueHex.byteLength}fromBER(e,t,s){if(0===s)return t;let i=-1;if(!0===this.isConstructed){if(-1===(i=Ie.prototype.fromBER.call(this,e,t,s)))return i;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===Oe.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(t!==Te.blockName())return this.error="BIT STRING may consists of BIT STRINGs only",-1;if(this.unusedBits>0&&this.value[e].valueBlock.unusedBits>0)return this.error='Usign of "unused bits" inside constructive BIT STRING allowed for least one only',-1;if(this.unusedBits=this.value[e].valueBlock.unusedBits,this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1}return i}if(!1===r(this,e,t,s))return-1;const n=new Uint8Array(e,t,s);if(this.unusedBits=n[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;this.valueHex=new ArrayBuffer(n.length-1);const a=new Uint8Array(this.valueHex);for(let e=0;e<s-1;e++)a[e]=n[e+1];return this.blockLength=n.length,t+s}toBER(e=!1){if(!0===this.isConstructed)return Ie.prototype.toBER.call(this,e);if(!0===e)return new ArrayBuffer(this.valueHex.byteLength+1);if(0===this.valueHex.byteLength)return new ArrayBuffer(0);const t=new Uint8Array(this.valueHex),r=new ArrayBuffer(this.valueHex.byteLength+1),s=new Uint8Array(r);s[0]=this.unusedBits;for(let e=0;e<this.valueHex.byteLength;e++)s[e+1]=t[e];return r}static blockName(){return"BitStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.unusedBits=this.unusedBits,e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class Te extends Ne{constructor(e={}){super(e,Je),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}static blockName(){return"BitString"}fromBER(e,t,r){return 0===r?t:(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r))}isEqual(e){return e instanceof Te!=!1&&JSON.stringify(this)===JSON.stringify(e)}}class Fe extends(Ae(xe)){constructor(e={}){super(e),"value"in e&&(this.valueDec=e.value)}set valueHex(e){this._valueHex=e.slice(0),e.byteLength>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,e.byteLength>0&&(this._valueDec=o.call(this)))}get valueHex(){return this._valueHex}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this._valueHex=l(e)}get valueDec(){return this._valueDec}fromDER(e,t,r,s=0){const i=this.fromBER(e,t,r);if(-1===i)return i;const n=new Uint8Array(this._valueHex);if(0===n[0]&&0!=(128&n[1])){const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}else if(0!==s&&this._valueHex.byteLength<s){s-this._valueHex.byteLength>1&&(s=this._valueHex.byteLength+1);const e=new ArrayBuffer(s);new Uint8Array(e).set(n,s-this._valueHex.byteLength),this._valueHex=e.slice(0)}return i}toDER(e=!1){const t=new Uint8Array(this._valueHex);switch(!0){case 0!=(128&t[0]):{const e=new ArrayBuffer(this._valueHex.byteLength+1),r=new Uint8Array(e);r[0]=0,r.set(t,1),this._valueHex=e.slice(0)}break;case 0===t[0]&&0==(128&t[1]):{const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}}return this.toBER(e)}fromBER(e,t,r){const s=super.fromBER(e,t,r);return-1===s?s:(this.blockLength=r,t+r)}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"IntegerValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e}toString(){function e(e,t){const r=new Uint8Array([0]);let s=new Uint8Array(e),i=new Uint8Array(t),n=s.slice(0);const o=n.length-1;let l=i.slice(0);const c=l.length-1;let h=0;let u=0;for(let e=c<o?o:c;e>=0;e--,u++){switch(!0){case u<l.length:h=n[o-u]+l[c-u]+r[0];break;default:h=n[o-u]+r[0]}switch(r[0]=h/10,!0){case u>=n.length:n=a(new Uint8Array([h%10]),n);break;default:n[o-u]=h%10}}return r[0]>0&&(n=a(r,n)),n.slice(0)}function t(e){if(e>=ke.length)for(let t=ke.length;t<=e;t++){const e=new Uint8Array([0]);let r=ke[t-1].slice(0);for(let t=r.length-1;t>=0;t--){const s=new Uint8Array([(r[t]<<1)+e[0]]);e[0]=s[0]/10,r[t]=s[0]%10}e[0]>0&&(r=a(e,r)),ke.push(r)}return ke[e]}function r(e,t){let r=0,s=new Uint8Array(e),i=new Uint8Array(t),n=s.slice(0);const a=n.length-1;let o=i.slice(0);const l=o.length-1;let c,h=0;for(let e=l;e>=0;e--,h++)switch(c=n[a-h]-o[l-h]-r,!0){case c<0:r=1,n[a-h]=c+10;break;default:r=0,n[a-h]=c}if(r>0)for(let e=a-l+1;e>=0;e--,h++){if(!((c=n[a-h]-r)<0)){r=0,n[a-h]=c;break}r=1,n[a-h]=c+10}return n.slice()}const s=8*this._valueHex.byteLength-1;let i,n=new Uint8Array(8*this._valueHex.byteLength/3),o=0;const l=new Uint8Array(this._valueHex);let c="",h=!1;for(let a=this._valueHex.byteLength-1;a>=0;a--){i=l[a];for(let a=0;a<8;a++){if(1==(1&i))switch(o){case s:n=r(t(o),n),c="-";break;default:n=e(n,t(o))}o++,i>>=1}}for(let e=0;e<n.length;e++)n[e]&&(h=!0),h&&(c+=we.charAt(n[e]));return!1===h&&(c+=we.charAt(0)),c}}class Me extends Ne{constructor(e={}){super(e,Fe),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}static blockName(){return"Integer"}isEqual(e){return e instanceof Me?this.valueBlock.isHexOnly&&e.valueBlock.isHexOnly?c(this.valueBlock.valueHex,e.valueBlock.valueHex):this.valueBlock.isHexOnly===e.valueBlock.isHexOnly&&this.valueBlock.valueDec===e.valueBlock.valueDec:e instanceof ArrayBuffer&&c(this.valueBlock.valueHex,e)}convertToDER(){const e=new Me({valueHex:this.valueBlock.valueHex});return e.valueBlock.toDER(),e}convertFromDER(){const e=this.valueBlock.valueHex.byteLength%2?this.valueBlock.valueHex.byteLength+1:this.valueBlock.valueHex.byteLength,t=new Me({valueHex:this.valueBlock.valueHex});return t.valueBlock.fromDER(t.valueBlock.valueHex,0,t.valueBlock.valueHex.byteLength,e),t}}class $e extends Me{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}static blockName(){return"Enumerated"}}class qe extends(Ae(Be)){constructor(t={}){super(t),this.valueDec=e(t,"valueDec",-1),this.isFirstSid=e(t,"isFirstSid",!1)}static blockName(){return"sidBlock"}fromBER(e,t,i){if(0===i)return t;if(!1===r(this,e,t,i))return-1;const n=new Uint8Array(e,t,i);this.valueHex=new ArrayBuffer(i);let a=new Uint8Array(this.valueHex);for(let e=0;e<i&&(a[e]=127&n[e],this.blockLength++,0!=(128&n[e]));e++);const o=new ArrayBuffer(this.blockLength),l=new Uint8Array(o);for(let e=0;e<this.blockLength;e++)l[e]=a[e];return this.valueHex=o.slice(0),a=new Uint8Array(this.valueHex),0!=(128&n[this.blockLength-1])?(this.error="End of input reached before message was fully decoded",-1):(0===a[0]&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=s(a,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e=!1){let t,r;if(this.isHexOnly){if(!0===e)return new ArrayBuffer(this.valueHex.byteLength);const s=new Uint8Array(this.valueHex);t=new ArrayBuffer(this.blockLength),r=new Uint8Array(t);for(let e=0;e<this.blockLength-1;e++)r[e]=128|s[e];return r[this.blockLength-1]=s[this.blockLength-1],t}const s=i(this.valueDec,7);if(0===s.byteLength)return this.error="Error during encoding SID value",new ArrayBuffer(0);if(t=new ArrayBuffer(s.byteLength),!1===e){const e=new Uint8Array(s);r=new Uint8Array(t);for(let t=0;t<s.byteLength-1;t++)r[t]=128|e[t];r[s.byteLength-1]=e[s.byteLength-1]}return t}toString(){let e="";if(!0===this.isHexOnly)e=t(this.valueHex,0,this.valueHex.byteLength);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e.isFirstSid=this.isFirstSid,e}}class We extends xe{constructor(t={}){super(t),this.fromString(e(t,"value",""))}fromBER(e,t,r){let s=t;for(;r>0;){const t=new qe;if(-1===(s=t.fromBER(e,s,r)))return this.blockLength=0,this.error=t.error,s;0===this.value.length&&(t.isFirstSid=!0),this.blockLength+=t.blockLength,r-=t.blockLength,this.value.push(t)}return s}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){const s=this.value[r].toBER(e);if(0===s.byteLength)return this.error=this.value[r].error,new ArrayBuffer(0);t=n(t,s)}return t}fromString(e){this.value=[];let t=0,r=0,s="",i=!1;do{if(s=-1===(r=e.indexOf(".",t))?e.substr(t):e.substr(t,r-t),t=r+1,i){const e=this.value[0];let t=0;switch(e.valueDec){case 0:break;case 1:t=40;break;case 2:t=80;break;default:return this.value=[],!1}const r=parseInt(s,10);if(isNaN(r))return!0;e.valueDec=r+t,i=!1}else{const e=new qe;if(e.valueDec=parseInt(s,10),isNaN(e.valueDec))return!0;0===this.value.length&&(e.isFirstSid=!0,i=!0),this.value.push(e)}}while(-1!==r);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let s=this.value[r].toString();0!==r&&(e=`${e}.`),t?(s=`{${s}}`,this.value[r].isFirstSid?e=`2.{${s} - 80}`:e+=s):e+=s}return e}static blockName(){return"ObjectIdentifierValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.value=this.toString(),e.sidArray=[];for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}}class Ge extends Ne{constructor(e={}){super(e,We),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}static blockName(){return"ObjectIdentifier"}}class Qe extends(Ae(Be)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"Utf8StringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class Ze extends Ne{constructor(e={}){super(e,Qe),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}static blockName(){return"Utf8String"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e));try{this.valueBlock.value=decodeURIComponent(escape(this.valueBlock.value))}catch(e){this.warnings.push(`Error during "decodeURIComponent": ${e}, using raw string`)}}fromString(e){const t=unescape(encodeURIComponent(e)),r=t.length;this.valueBlock.valueHex=new ArrayBuffer(r);const s=new Uint8Array(this.valueBlock.valueHex);for(let e=0;e<r;e++)s[e]=t.charCodeAt(e);this.valueBlock.value=e}}class ze extends(Ae(Be)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"BmpStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class Ye extends Ne{constructor(e={}){super(e,ze),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}static blockName(){return"BmpString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=2){const t=r[e];r[e]=r[e+1],r[e+1]=t}this.valueBlock.value=String.fromCharCode.apply(null,new Uint16Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(2*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++){const t=i(e.charCodeAt(s),8),n=new Uint8Array(t);if(n.length>2)continue;const a=2-n.length;for(let e=n.length-1;e>=0;e--)r[2*s+e+a]=n[e]}this.valueBlock.value=e}}class Xe extends(Ae(Be)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"UniversalStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class et extends Ne{constructor(e={}){super(e,Xe),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}static blockName(){return"UniversalString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=4)r[e]=r[e+3],r[e+1]=r[e+2],r[e+2]=0,r[e+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(4*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++){const t=i(e.charCodeAt(s),8),n=new Uint8Array(t);if(n.length>4)continue;const a=4-n.length;for(let e=n.length-1;e>=0;e--)r[4*s+e+a]=n[e]}this.valueBlock.value=e}}class tt extends(Ae(Be)){constructor(e={}){super(e),this.value="",this.isHexOnly=!0}static blockName(){return"SimpleStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class rt extends Ne{constructor(e={}){super(e,tt),"value"in e&&this.fromString(e.value)}static blockName(){return"SIMPLESTRING"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++)r[s]=e.charCodeAt(s);this.valueBlock.value=e}}class st extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}static blockName(){return"NumericString"}}class it extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}static blockName(){return"PrintableString"}}class nt extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}static blockName(){return"TeletexString"}}class at extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}static blockName(){return"VideotexString"}}class ot extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}static blockName(){return"IA5String"}}class lt extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}static blockName(){return"GraphicString"}}class ct extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}static blockName(){return"VisibleString"}}class ht extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}static blockName(){return"GeneralString"}}class ut extends rt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}static blockName(){return"CharacterString"}}class mt extends ct{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){const t=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/gi.exec(e);if(null===t)return void(this.error="Wrong input string for convertion");const r=parseInt(t[1],10);this.year=r>=50?1900+r:2e3+r,this.month=parseInt(t[2],10),this.day=parseInt(t[3],10),this.hour=parseInt(t[4],10),this.minute=parseInt(t[5],10),this.second=parseInt(t[6],10)}toString(){const e=new Array(7);return e[0]=h(this.year<2e3?this.year-1900:this.year-2e3,2),e[1]=h(this.month,2),e[2]=h(this.day,2),e[3]=h(this.hour,2),e[4]=h(this.minute,2),e[5]=h(this.second,2),e[6]="Z",e.join("")}static blockName(){return"UTCTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e}}class ft extends ct{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,this.millisecond=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t,r=!1,s="",i="",n=0,a=0,o=0;if("Z"===e[e.length-1])s=e.substr(0,e.length-1),r=!0;else{const t=new Number(e[e.length-1]);if(isNaN(t.valueOf()))throw new Error("Wrong input string for convertion");s=e}if(r){if(-1!==s.indexOf("+"))throw new Error("Wrong input string for convertion");if(-1!==s.indexOf("-"))throw new Error("Wrong input string for convertion")}else{let e=1,t=s.indexOf("+"),r="";if(-1===t&&(t=s.indexOf("-"),e=-1),-1!==t){if(r=s.substr(t+1),s=s.substr(0,t),2!==r.length&&4!==r.length)throw new Error("Wrong input string for convertion");let i=new Number(r.substr(0,2));if(isNaN(i.valueOf()))throw new Error("Wrong input string for convertion");if(a=e*i,4===r.length){if(i=new Number(r.substr(2,2)),isNaN(i.valueOf()))throw new Error("Wrong input string for convertion");o=e*i}}}let l=s.indexOf(".");if(-1===l&&(l=s.indexOf(",")),-1!==l){const e=new Number(`0${s.substr(l)}`);if(isNaN(e.valueOf()))throw new Error("Wrong input string for convertion");n=e.valueOf(),i=s.substr(0,l)}else i=s;switch(!0){case 8===i.length:if(t=/(\d{4})(\d{2})(\d{2})/gi,-1!==l)throw new Error("Wrong input string for convertion");break;case 10===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*n;this.minute=Math.floor(e),e=60*(e-this.minute),this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 12===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*n;this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 14===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){const e=1e3*n;this.millisecond=Math.floor(e)}break;default:throw new Error("Wrong input string for convertion")}const c=t.exec(i);if(null===c)throw new Error("Wrong input string for convertion");for(let e=1;e<c.length;e++)switch(e){case 1:this.year=parseInt(c[e],10);break;case 2:this.month=parseInt(c[e],10);break;case 3:this.day=parseInt(c[e],10);break;case 4:this.hour=parseInt(c[e],10)+a;break;case 5:this.minute=parseInt(c[e],10)+o;break;case 6:this.second=parseInt(c[e],10);break;default:throw new Error("Wrong input string for convertion")}if(!1===r){const e=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=e.getUTCFullYear(),this.month=e.getUTCMonth(),this.day=e.getUTCDay(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}}toString(){const e=[];return e.push(h(this.year,4)),e.push(h(this.month,2)),e.push(h(this.day,2)),e.push(h(this.hour,2)),e.push(h(this.minute,2)),e.push(h(this.second,2)),0!==this.millisecond&&(e.push("."),e.push(h(this.millisecond,3))),e.push("Z"),e.join("")}static blockName(){return"GeneralizedTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e.millisecond=this.millisecond,e}}class gt extends Ze{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}static blockName(){return"DATE"}}class dt extends Ze{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}static blockName(){return"TimeOfDay"}}class bt extends Ze{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}static blockName(){return"DateTime"}}class yt extends Ze{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}static blockName(){return"Duration"}}class pt extends Ze{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}static blockName(){return"TIME"}}class vt{constructor(t={}){this.value=e(t,"value",[]),this.optional=e(t,"optional",!1)}}class kt{constructor(t={}){this.name=e(t,"name",""),this.optional=e(t,"optional",!1)}}class wt{constructor(t={}){this.name=e(t,"name",""),this.optional=e(t,"optional",!1),this.value=e(t,"value",new kt),this.local=e(t,"local",!1)}}class Bt{constructor(t={}){this.data=e(t,"data",new ArrayBuffer(0))}fromBER(e,t,r){return this.data=e.slice(t,r),t+r}toBER(e=!1){return this.data}}function At(e,t,s){const i=t;let n=new Ne({},Object);if(!1===r(new Be,e,t,s))return n.error="Wrong input parameters",{offset:-1,result:n};if(0===new Uint8Array(e,t,s).length)return this.error="Zero buffer length",{offset:-1,result:n};let a=n.idBlock.fromBER(e,t,s);if(n.warnings.concat(n.idBlock.warnings),-1===a)return n.error=n.idBlock.error,{offset:-1,result:n};if(t=a,s-=n.idBlock.blockLength,a=n.lenBlock.fromBER(e,t,s),n.warnings.concat(n.lenBlock.warnings),-1===a)return n.error=n.lenBlock.error,{offset:-1,result:n};if(t=a,s-=n.lenBlock.blockLength,!1===n.idBlock.isConstructed&&!0===n.lenBlock.isIndefiniteForm)return n.error="Indefinite length form used for primitive encoding form",{offset:-1,result:n};let o=Ne;switch(n.idBlock.tagClass){case 1:if(n.idBlock.tagNumber>=37&&!1===n.idBlock.isHexOnly)return n.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:n};switch(n.idBlock.tagNumber){case 0:if(!0===n.idBlock.isConstructed&&n.lenBlock.length>0)return n.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:n};o=Oe;break;case 1:o=De;break;case 2:o=Me;break;case 3:o=Te;break;case 4:o=Ke;break;case 5:o=je;break;case 6:o=Ge;break;case 10:o=$e;break;case 12:o=Ze;break;case 14:o=pt;break;case 15:return n.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:n};case 16:o=Ve;break;case 17:o=Re;break;case 18:o=st;break;case 19:o=it;break;case 20:o=nt;break;case 21:o=at;break;case 22:o=ot;break;case 23:o=mt;break;case 24:o=ft;break;case 25:o=lt;break;case 26:o=ct;break;case 27:o=ht;break;case 28:o=et;break;case 29:o=ut;break;case 30:o=Ye;break;case 31:o=gt;break;case 32:o=dt;break;case 33:o=bt;break;case 34:o=yt;break;default:{let r;(r=!0===n.idBlock.isConstructed?new Pe:new Ee).idBlock=n.idBlock,r.lenBlock=n.lenBlock,r.warnings=n.warnings,a=(n=r).fromBER(e,t,s)}}break;case 2:case 3:case 4:default:o=!0===n.idBlock.isConstructed?Pe:Ee}return a=(n=function(e,t){if(e instanceof t)return e;const r=new t;return r.idBlock=e.idBlock,r.lenBlock=e.lenBlock,r.warnings=e.warnings,r.valueBeforeDecode=e.valueBeforeDecode.slice(0),r}(n,o)).fromBER(e,t,!0===n.lenBlock.isIndefiniteForm?s:n.lenBlock.length),n.valueBeforeDecode=e.slice(i,i+n.blockLength),{offset:a,result:n}}function St(e){if(0===e.byteLength){const e=new Ne({},Object);return e.error="Input buffer has zero length",{offset:-1,result:e}}return At(e,0,e.byteLength)}function Ct(e,t,r){if(r instanceof vt){for(let s=0;s<r.value.length;s++){if(!0===Ct(e,t,r.value[s]).verified)return{verified:!0,result:e}}{const e={verified:!1,result:{error:"Wrong values for Choice type"}};return r.hasOwnProperty("name")&&(e.name=r.name),e}}if(r instanceof kt)return r.hasOwnProperty("name")&&(e[r.name]=t),{verified:!0,result:e};if(e instanceof Object==!1)return{verified:!1,result:{error:"Wrong root object"}};if(t instanceof Object==!1)return{verified:!1,result:{error:"Wrong ASN.1 data"}};if(r instanceof Object==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("idBlock"in r==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("fromBER"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("toBER"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const s=r.idBlock.toBER(!1);if(0===s.byteLength)return{verified:!1,result:{error:"Error encoding idBlock for ASN.1 schema"}};if(-1===r.idBlock.fromBER(s,0,s.byteLength))return{verified:!1,result:{error:"Error decoding idBlock for ASN.1 schema"}};if(!1===r.idBlock.hasOwnProperty("tagClass"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagClass!==t.idBlock.tagClass)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty("tagNumber"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagNumber!==t.idBlock.tagNumber)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty("isConstructed"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isConstructed!==t.idBlock.isConstructed)return{verified:!1,result:e};if("isHexOnly"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isHexOnly!==t.idBlock.isHexOnly)return{verified:!1,result:e};if(!0===r.idBlock.isHexOnly){if("valueHex"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const s=new Uint8Array(r.idBlock.valueHex),i=new Uint8Array(t.idBlock.valueHex);if(s.length!==i.length)return{verified:!1,result:e};for(let t=0;t<s.length;t++)if(s[t]!==i[1])return{verified:!1,result:e}}if(r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(e[r.name]=t)),!0===r.idBlock.isConstructed){let s=0,i={verified:!1},n=r.valueBlock.value.length;if(n>0&&r.valueBlock.value[0]instanceof wt&&(n=t.valueBlock.value.length),0===n)return{verified:!0,result:e};if(0===t.valueBlock.value.length&&0!==r.valueBlock.value.length){let t=!0;for(let e=0;e<r.valueBlock.value.length;e++)t=t&&(r.valueBlock.value[e].optional||!1);return!0===t?{verified:!0,result:e}:(r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),e.error="Inconsistent object length",{verified:!1,result:e})}for(let a=0;a<n;a++)if(a-s>=t.valueBlock.value.length){if(!1===r.valueBlock.value[a].optional){const t={verified:!1,result:e};return e.error="Inconsistent length between ASN.1 data and schema",r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}}else if(r.valueBlock.value[0]instanceof wt){if(!1===(i=Ct(e,t.valueBlock.value[a],r.valueBlock.value[0].value)).verified){if(!0!==r.valueBlock.value[0].optional)return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),i;s++}if("name"in r.valueBlock.value[0]&&r.valueBlock.value[0].name.length>0){let s={};void 0===(s="local"in r.valueBlock.value[0]&&!0===r.valueBlock.value[0].local?t:e)[r.valueBlock.value[0].name]&&(s[r.valueBlock.value[0].name]=[]),s[r.valueBlock.value[0].name].push(t.valueBlock.value[a])}}else if(!1===(i=Ct(e,t.valueBlock.value[a-s],r.valueBlock.value[a])).verified){if(!0!==r.valueBlock.value[a].optional)return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),i;s++}if(!1===i.verified){const t={verified:!1,result:e};return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return{verified:!0,result:e}}if("primitiveSchema"in r&&"valueHex"in t.valueBlock){const s=St(t.valueBlock.valueHex);if(-1===s.offset){const t={verified:!1,result:s.result};return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return Ct(e,s.result,r.primitiveSchema)}return{verified:!0,result:e}}class xt{constructor(t={}){this.algorithmId=e(t,"algorithmId",xt.defaultValues("algorithmId")),"algorithmParams"in t&&(this.algorithmParams=e(t,"algorithmParams",xt.defaultValues("algorithmParams"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"algorithmId":return"";case"algorithmParams":return new kt;default:throw new Error(`Invalid member name for AlgorithmIdentifier class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"algorithmId":return""===t;case"algorithmParams":return t instanceof kt;default:throw new Error(`Invalid member name for AlgorithmIdentifier class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",optional:r.optional||!1,value:[new Ge({name:r.algorithmIdentifier||""}),new kt({name:r.algorithmParams||"",optional:!0})]})}fromSchema(e){v(e,["algorithm","params"]);const t=Ct(e,e,xt.schema({names:{algorithmIdentifier:"algorithm",algorithmParams:"params"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AlgorithmIdentifier");this.algorithmId=t.result.algorithm.valueBlock.toString(),"params"in t.result&&(this.algorithmParams=t.result.params)}toSchema(){const e=[];return e.push(new Ge({value:this.algorithmId})),"algorithmParams"in this&&this.algorithmParams instanceof kt==!1&&e.push(this.algorithmParams),new Ve({value:e})}toJSON(){const e={algorithmId:this.algorithmId};return"algorithmParams"in this&&this.algorithmParams instanceof kt==!1&&(e.algorithmParams=this.algorithmParams.toJSON()),e}isEqual(e){return e instanceof xt!=!1&&(this.algorithmId===e.algorithmId&&("algorithmParams"in this?"algorithmParams"in e&&JSON.stringify(this.algorithmParams)===JSON.stringify(e.algorithmParams):!("algorithmParams"in e)))}}class Nt{constructor(t={}){this.x=e(t,"x",Nt.defaultValues("x")),this.y=e(t,"y",Nt.defaultValues("y")),this.namedCurve=e(t,"namedCurve",Nt.defaultValues("namedCurve")),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"x":case"y":return new ArrayBuffer(0);case"namedCurve":return"";default:throw new Error(`Invalid member name for ECCPublicKey class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"x":case"y":return c(t,Nt.defaultValues(e));case"namedCurve":return""===t;default:throw new Error(`Invalid member name for ECCPublicKey class: ${e}`)}}static schema(e={}){return new Bt}fromSchema(e){if(e instanceof ArrayBuffer==!1)throw new Error("Object's schema was not verified against input data for ECPublicKey");if(4!==new Uint8Array(e)[0])throw new Error("Object's schema was not verified against input data for ECPublicKey");let t;switch(this.namedCurve){case"1.2.840.10045.3.1.7":t=32;break;case"1.3.132.0.34":t=48;break;case"1.3.132.0.35":t=66;break;default:throw new Error(`Incorrect curve OID: ${this.namedCurve}`)}if(e.byteLength!==2*t+1)throw new Error("Object's schema was not verified against input data for ECPublicKey");this.x=e.slice(1,t+1),this.y=e.slice(1+t,2*t+1)}toSchema(){return new Bt({data:n(new Uint8Array([4]).buffer,this.x,this.y)})}toJSON(){let e="";switch(this.namedCurve){case"1.2.840.10045.3.1.7":e="P-256";break;case"1.3.132.0.34":e="P-384";break;case"1.3.132.0.35":e="P-521"}return{crv:e,x:f(d(this.x),!0,!0,!1),y:f(d(this.y),!0,!0,!1)}}fromJSON(e){let t=0;if(!("crv"in e))throw new Error('Absent mandatory parameter "crv"');switch(e.crv.toUpperCase()){case"P-256":this.namedCurve="1.2.840.10045.3.1.7",t=32;break;case"P-384":this.namedCurve="1.3.132.0.34",t=48;break;case"P-521":this.namedCurve="1.3.132.0.35",t=66}if(!("x"in e))throw new Error('Absent mandatory parameter "x"');{const r=b(g(e.x,!0));if(r.byteLength<t){this.x=new ArrayBuffer(t);const e=new Uint8Array(this.x),s=new Uint8Array(r);e.set(s,1)}else this.x=r.slice(0,t)}if(!("y"in e))throw new Error('Absent mandatory parameter "y"');{const r=b(g(e.y,!0));if(r.byteLength<t){this.y=new ArrayBuffer(t);const e=new Uint8Array(this.y),s=new Uint8Array(r);e.set(s,1)}else this.y=r.slice(0,t)}}}class Lt{constructor(t={}){this.modulus=e(t,"modulus",Lt.defaultValues("modulus")),this.publicExponent=e(t,"publicExponent",Lt.defaultValues("publicExponent")),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"modulus":case"publicExponent":return new Me;default:throw new Error(`Invalid member name for RSAPublicKey class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Me({name:r.modulus||""}),new Me({name:r.publicExponent||""})]})}fromSchema(e){v(e,["modulus","publicExponent"]);const t=Ct(e,e,Lt.schema({names:{modulus:"modulus",publicExponent:"publicExponent"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSAPublicKey");this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent}toSchema(){return new Ve({value:[this.modulus.convertToDER(),this.publicExponent]})}toJSON(){return{n:f(d(this.modulus.valueBlock.valueHex),!0,!0,!0),e:f(d(this.publicExponent.valueBlock.valueHex),!0,!0,!0)}}fromJSON(e){if(!("n"in e))throw new Error('Absent mandatory parameter "n"');{const t=b(g(e.n,!0));this.modulus=new Me({valueHex:t.slice(0,Math.pow(2,p(t.byteLength)))})}if(!("e"in e))throw new Error('Absent mandatory parameter "e"');this.publicExponent=new Me({valueHex:b(g(e.e,!0)).slice(0,3)})}}class Et{constructor(t={}){this.algorithm=e(t,"algorithm",Et.defaultValues("algorithm")),this.subjectPublicKey=e(t,"subjectPublicKey",Et.defaultValues("subjectPublicKey")),"parsedKey"in t&&(this.parsedKey=e(t,"parsedKey",Et.defaultValues("parsedKey"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"algorithm":return new xt;case"subjectPublicKey":return new Te;default:throw new Error(`Invalid member name for PublicKeyInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[xt.schema(r.algorithm||{}),new Te({name:r.subjectPublicKey||""})]})}fromSchema(e){v(e,["algorithm","subjectPublicKey"]);const t=Ct(e,e,Et.schema({names:{algorithm:{names:{blockName:"algorithm"}},subjectPublicKey:"subjectPublicKey"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PublicKeyInfo");switch(this.algorithm=new xt({schema:t.result.algorithm}),this.subjectPublicKey=t.result.subjectPublicKey,this.algorithm.algorithmId){case"1.2.840.10045.2.1":if("algorithmParams"in this.algorithm&&this.algorithm.algorithmParams instanceof Ge)try{this.parsedKey=new Nt({namedCurve:this.algorithm.algorithmParams.valueBlock.toString(),schema:this.subjectPublicKey.valueBlock.valueHex})}catch(e){}break;case"1.2.840.113549.1.1.1":{const e=St(this.subjectPublicKey.valueBlock.valueHex);if(-1!==e.offset)try{this.parsedKey=new Lt({schema:e.result})}catch(e){}}}}toSchema(){return new Ve({value:[this.algorithm.toSchema(),this.subjectPublicKey]})}toJSON(){if("parsedKey"in this==!1)return{algorithm:this.algorithm.toJSON(),subjectPublicKey:this.subjectPublicKey.toJSON()};const e={};switch(this.algorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();for(const r of Object.keys(t))e[r]=t[r];return e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new Nt({json:e}),this.algorithm=new xt({algorithmId:"1.2.840.10045.2.1",algorithmParams:new Ge({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new Lt({json:e}),this.algorithm=new xt({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new je});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.subjectPublicKey=new Te({valueHex:this.parsedKey.toSchema().toBER(!1)})}}importKey(e){let t=Promise.resolve();const r=this;if(void 0===e)return Promise.reject("Need to provide publicKey input parameter");const s=Ft();return void 0===s?Promise.reject("Unable to create WebCrypto object"):t=(t=t.then(()=>s.exportKey("spki",e))).then(e=>{const t=St(e);try{r.fromSchema(t.result)}catch(e){return Promise.reject("Error during initializing object from schema")}},e=>Promise.reject(`Error during exporting public key: ${e}`))}}class It{constructor(t={}){this.type=e(t,"type",It.defaultValues("type")),this.values=e(t,"values",It.defaultValues("values")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return"";case"values":return[];default:throw new Error(`Invalid member name for Attribute class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"type":return""===t;case"values":return 0===t.length;default:throw new Error(`Invalid member name for Attribute class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.type||""}),new Re({name:r.setName||"",value:[new wt({name:r.values||"",value:new kt})]})]})}fromSchema(e){v(e,["type","values"]);const t=Ct(e,e,It.schema({names:{type:"type",values:"values"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Attribute");this.type=t.result.type.valueBlock.toString(),this.values=t.result.values}toSchema(){return new Ve({value:[new Ge({value:this.type}),new Re({value:this.values})]})}toJSON(){return{type:this.type,values:Array.from(this.values,e=>e.toJSON())}}}class Pt{constructor(t={}){this.version=e(t,"version",Pt.defaultValues("version")),this.privateKey=e(t,"privateKey",Pt.defaultValues("privateKey")),"namedCurve"in t&&(this.namedCurve=e(t,"namedCurve",Pt.defaultValues("namedCurve"))),"publicKey"in t&&(this.publicKey=e(t,"publicKey",Pt.defaultValues("publicKey"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"version":return 1;case"privateKey":return new Ke;case"namedCurve":return"";case"publicKey":return new Nt;default:throw new Error(`Invalid member name for ECCPrivateKey class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"version":return t===Pt.defaultValues(e);case"privateKey":return t.isEqual(Pt.defaultValues(e));case"namedCurve":return""===t;case"publicKey":return Nt.compareWithDefault("namedCurve",t.namedCurve)&&Nt.compareWithDefault("x",t.x)&&Nt.compareWithDefault("y",t.y);default:throw new Error(`Invalid member name for ECCPrivateKey class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Me({name:r.version||""}),new Ke({name:r.privateKey||""}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Ge({name:r.namedCurve||""})]}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new Te({name:r.publicKey||""})]})]})}fromSchema(e){v(e,["version","privateKey","namedCurve","publicKey"]);const t=Ct(e,e,Pt.schema({names:{version:"version",privateKey:"privateKey",namedCurve:"namedCurve",publicKey:"publicKey"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ECPrivateKey");if(this.version=t.result.version.valueBlock.valueDec,this.privateKey=t.result.privateKey,"namedCurve"in t.result&&(this.namedCurve=t.result.namedCurve.valueBlock.toString()),"publicKey"in t.result){const e={schema:t.result.publicKey.valueBlock.valueHex};"namedCurve"in this&&(e.namedCurve=this.namedCurve),this.publicKey=new Nt(e)}}toSchema(){const e=[new Me({value:this.version}),this.privateKey];return"namedCurve"in this&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:0},value:[new Ge({value:this.namedCurve})]})),"publicKey"in this&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:1},value:[new Te({valueHex:this.publicKey.toSchema().toBER(!1)})]})),new Ve({value:e})}toJSON(){if("namedCurve"in this==!1||Pt.compareWithDefault("namedCurve",this.namedCurve))throw new Error('Not enough information for making JSON: absent "namedCurve" value');let e="";switch(this.namedCurve){case"1.2.840.10045.3.1.7":e="P-256";break;case"1.3.132.0.34":e="P-384";break;case"1.3.132.0.35":e="P-521"}const t={crv:e,d:f(d(this.privateKey.valueBlock.valueHex),!0,!0,!1)};if("publicKey"in this){const e=this.publicKey.toJSON();t.x=e.x,t.y=e.y}return t}fromJSON(e){let t=0;if(!("crv"in e))throw new Error('Absent mandatory parameter "crv"');switch(e.crv.toUpperCase()){case"P-256":this.namedCurve="1.2.840.10045.3.1.7",t=32;break;case"P-384":this.namedCurve="1.3.132.0.34",t=48;break;case"P-521":this.namedCurve="1.3.132.0.35",t=66}if(!("d"in e))throw new Error('Absent mandatory parameter "d"');{const r=b(g(e.d,!0));if(r.byteLength<t){const e=new ArrayBuffer(t),s=new Uint8Array(e),i=new Uint8Array(r);s.set(i,1),this.privateKey=new Ke({valueHex:e})}else this.privateKey=new Ke({valueHex:r.slice(0,t)})}"x"in e&&"y"in e&&(this.publicKey=new Nt({json:e}))}}class Ht{constructor(t={}){this.prime=e(t,"prime",Ht.defaultValues("prime")),this.exponent=e(t,"exponent",Ht.defaultValues("exponent")),this.coefficient=e(t,"coefficient",Ht.defaultValues("coefficient")),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"prime":case"exponent":case"coefficient":return new Me;default:throw new Error(`Invalid member name for OtherPrimeInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Me({name:r.prime||""}),new Me({name:r.exponent||""}),new Me({name:r.coefficient||""})]})}fromSchema(e){v(e,["prime","exponent","coefficient"]);const t=Ct(e,e,Ht.schema({names:{prime:"prime",exponent:"exponent",coefficient:"coefficient"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for OtherPrimeInfo");this.prime=t.result.prime.convertFromDER(),this.exponent=t.result.exponent.convertFromDER(),this.coefficient=t.result.coefficient.convertFromDER()}toSchema(){return new Ve({value:[this.prime.convertToDER(),this.exponent.convertToDER(),this.coefficient.convertToDER()]})}toJSON(){return{r:f(d(this.prime.valueBlock.valueHex),!0,!0),d:f(d(this.exponent.valueBlock.valueHex),!0,!0),t:f(d(this.coefficient.valueBlock.valueHex),!0,!0)}}fromJSON(e){if(!("r"in e))throw new Error('Absent mandatory parameter "r"');if(this.prime=new Me({valueHex:b(g(e.r,!0))}),!("d"in e))throw new Error('Absent mandatory parameter "d"');if(this.exponent=new Me({valueHex:b(g(e.d,!0))}),!("t"in e))throw new Error('Absent mandatory parameter "t"');this.coefficient=new Me({valueHex:b(g(e.t,!0))})}}class Ot{constructor(t={}){this.version=e(t,"version",Ot.defaultValues("version")),this.modulus=e(t,"modulus",Ot.defaultValues("modulus")),this.publicExponent=e(t,"publicExponent",Ot.defaultValues("publicExponent")),this.privateExponent=e(t,"privateExponent",Ot.defaultValues("privateExponent")),this.prime1=e(t,"prime1",Ot.defaultValues("prime1")),this.prime2=e(t,"prime2",Ot.defaultValues("prime2")),this.exponent1=e(t,"exponent1",Ot.defaultValues("exponent1")),this.exponent2=e(t,"exponent2",Ot.defaultValues("exponent2")),this.coefficient=e(t,"coefficient",Ot.defaultValues("coefficient")),"otherPrimeInfos"in t&&(this.otherPrimeInfos=e(t,"otherPrimeInfos",Ot.defaultValues("otherPrimeInfos"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"version":return 0;case"modulus":case"publicExponent":case"privateExponent":case"prime1":case"prime2":case"exponent1":case"exponent2":case"coefficient":return new Me;case"otherPrimeInfos":return[];default:throw new Error(`Invalid member name for RSAPrivateKey class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Me({name:r.version||""}),new Me({name:r.modulus||""}),new Me({name:r.publicExponent||""}),new Me({name:r.privateExponent||""}),new Me({name:r.prime1||""}),new Me({name:r.prime2||""}),new Me({name:r.exponent1||""}),new Me({name:r.exponent2||""}),new Me({name:r.coefficient||""}),new Ve({optional:!0,value:[new wt({name:r.otherPrimeInfosName||"",value:Ht.schema(r.otherPrimeInfo||{})})]})]})}fromSchema(e){v(e,["version","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","otherPrimeInfos"]);const t=Ct(e,e,Ot.schema({names:{version:"version",modulus:"modulus",publicExponent:"publicExponent",privateExponent:"privateExponent",prime1:"prime1",prime2:"prime2",exponent1:"exponent1",exponent2:"exponent2",coefficient:"coefficient",otherPrimeInfo:{names:{blockName:"otherPrimeInfos"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSAPrivateKey");this.version=t.result.version.valueBlock.valueDec,this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent,this.privateExponent=t.result.privateExponent.convertFromDER(256),this.prime1=t.result.prime1.convertFromDER(128),this.prime2=t.result.prime2.convertFromDER(128),this.exponent1=t.result.exponent1.convertFromDER(128),this.exponent2=t.result.exponent2.convertFromDER(128),this.coefficient=t.result.coefficient.convertFromDER(128),"otherPrimeInfos"in t.result&&(this.otherPrimeInfos=Array.from(t.result.otherPrimeInfos,e=>new Ht({schema:e})))}toSchema(){const e=[];return e.push(new Me({value:this.version})),e.push(this.modulus.convertToDER()),e.push(this.publicExponent),e.push(this.privateExponent.convertToDER()),e.push(this.prime1.convertToDER()),e.push(this.prime2.convertToDER()),e.push(this.exponent1.convertToDER()),e.push(this.exponent2.convertToDER()),e.push(this.coefficient.convertToDER()),"otherPrimeInfos"in this&&e.push(new Ve({value:Array.from(this.otherPrimeInfos,e=>e.toSchema())})),new Ve({value:e})}toJSON(){const e={n:f(d(this.modulus.valueBlock.valueHex),!0,!0,!0),e:f(d(this.publicExponent.valueBlock.valueHex),!0,!0,!0),d:f(d(this.privateExponent.valueBlock.valueHex),!0,!0,!0),p:f(d(this.prime1.valueBlock.valueHex),!0,!0,!0),q:f(d(this.prime2.valueBlock.valueHex),!0,!0,!0),dp:f(d(this.exponent1.valueBlock.valueHex),!0,!0,!0),dq:f(d(this.exponent2.valueBlock.valueHex),!0,!0,!0),qi:f(d(this.coefficient.valueBlock.valueHex),!0,!0,!0)};return"otherPrimeInfos"in this&&(e.oth=Array.from(this.otherPrimeInfos,e=>e.toJSON())),e}fromJSON(e){if(!("n"in e))throw new Error('Absent mandatory parameter "n"');if(this.modulus=new Me({valueHex:b(g(e.n,!0,!0))}),!("e"in e))throw new Error('Absent mandatory parameter "e"');if(this.publicExponent=new Me({valueHex:b(g(e.e,!0,!0))}),!("d"in e))throw new Error('Absent mandatory parameter "d"');if(this.privateExponent=new Me({valueHex:b(g(e.d,!0,!0))}),!("p"in e))throw new Error('Absent mandatory parameter "p"');if(this.prime1=new Me({valueHex:b(g(e.p,!0,!0))}),!("q"in e))throw new Error('Absent mandatory parameter "q"');if(this.prime2=new Me({valueHex:b(g(e.q,!0,!0))}),!("dp"in e))throw new Error('Absent mandatory parameter "dp"');if(this.exponent1=new Me({valueHex:b(g(e.dp,!0,!0))}),!("dq"in e))throw new Error('Absent mandatory parameter "dq"');if(this.exponent2=new Me({valueHex:b(g(e.dq,!0,!0))}),!("qi"in e))throw new Error('Absent mandatory parameter "qi"');this.coefficient=new Me({valueHex:b(g(e.qi,!0,!0))}),"oth"in e&&(this.otherPrimeInfos=Array.from(e.oth,e=>new Ht({json:e})))}}class Ut{constructor(t={}){this.version=e(t,"version",Ut.defaultValues("version")),this.privateKeyAlgorithm=e(t,"privateKeyAlgorithm",Ut.defaultValues("privateKeyAlgorithm")),this.privateKey=e(t,"privateKey",Ut.defaultValues("privateKey")),"attributes"in t&&(this.attributes=e(t,"attributes",Ut.defaultValues("attributes"))),"parsedKey"in t&&(this.parsedKey=e(t,"parsedKey",Ut.defaultValues("parsedKey"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"version":return 0;case"privateKeyAlgorithm":return new xt;case"privateKey":return new Ke;case"attributes":return[];case"parsedKey":return{};default:throw new Error(`Invalid member name for PrivateKeyInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Me({name:r.version||""}),xt.schema(r.privateKeyAlgorithm||{}),new Ke({name:r.privateKey||""}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new wt({name:r.attributes||"",value:It.schema()})]})]})}fromSchema(e){v(e,["version","privateKeyAlgorithm","privateKey","attributes"]);const t=Ct(e,e,Ut.schema({names:{version:"version",privateKeyAlgorithm:{names:{blockName:"privateKeyAlgorithm"}},privateKey:"privateKey",attributes:"attributes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PrivateKeyInfo");switch(this.version=t.result.version.valueBlock.valueDec,this.privateKeyAlgorithm=new xt({schema:t.result.privateKeyAlgorithm}),this.privateKey=t.result.privateKey,"attributes"in t.result&&(this.attributes=Array.from(t.result.attributes,e=>new It({schema:e}))),this.privateKeyAlgorithm.algorithmId){case"1.2.840.113549.1.1.1":{const e=St(this.privateKey.valueBlock.valueHex);-1!==e.offset&&(this.parsedKey=new Ot({schema:e.result}))}break;case"1.2.840.10045.2.1":if("algorithmParams"in this.privateKeyAlgorithm&&this.privateKeyAlgorithm.algorithmParams instanceof Ge){const e=St(this.privateKey.valueBlock.valueHex);-1!==e.offset&&(this.parsedKey=new Pt({namedCurve:this.privateKeyAlgorithm.algorithmParams.valueBlock.toString(),schema:e.result}))}}}toSchema(){const e=[new Me({value:this.version}),this.privateKeyAlgorithm.toSchema(),this.privateKey];return"attributes"in this&&e.push(new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.attributes,e=>e.toSchema())})),new Ve({value:e})}toJSON(){if("parsedKey"in this==!1){const e={version:this.version,privateKeyAlgorithm:this.privateKeyAlgorithm.toJSON(),privateKey:this.privateKey.toJSON()};return"attributes"in this&&(e.attributes=Array.from(this.attributes,e=>e.toJSON())),e}const e={};switch(this.privateKeyAlgorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();for(const r of Object.keys(t))e[r]=t[r];return e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new Pt({json:e}),this.privateKeyAlgorithm=new xt({algorithmId:"1.2.840.10045.2.1",algorithmParams:new Ge({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new Ot({json:e}),this.privateKeyAlgorithm=new xt({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new je});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.privateKey=new Ke({valueHex:this.parsedKey.toSchema().toBER(!1)})}}}class Dt{constructor(t={}){if(this.contentType=e(t,"contentType",Dt.defaultValues("contentType")),this.contentEncryptionAlgorithm=e(t,"contentEncryptionAlgorithm",Dt.defaultValues("contentEncryptionAlgorithm")),"encryptedContent"in t&&(this.encryptedContent=t.encryptedContent,1===this.encryptedContent.idBlock.tagClass&&4===this.encryptedContent.idBlock.tagNumber&&!1===this.encryptedContent.idBlock.isConstructed)){const e=new Ke({idBlock:{isConstructed:!0},isConstructed:!0});let t=0,r=this.encryptedContent.valueBlock.valueHex.byteLength;for(;r>0;){const s=new Uint8Array(this.encryptedContent.valueBlock.valueHex,t,t+1024>this.encryptedContent.valueBlock.valueHex.byteLength?this.encryptedContent.valueBlock.valueHex.byteLength-t:1024),i=new ArrayBuffer(s.length),n=new Uint8Array(i);for(let e=0;e<n.length;e++)n[e]=s[e];e.valueBlock.value.push(new Ke({valueHex:i})),r-=s.length,t+=s.length}this.encryptedContent=e}"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"contentType":return"";case"contentEncryptionAlgorithm":return new xt;case"encryptedContent":return new Ke;default:throw new Error(`Invalid member name for EncryptedContentInfo class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"contentType":return""===t;case"contentEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"encryptedContent":return t.isEqual(Dt.defaultValues(e));default:throw new Error(`Invalid member name for EncryptedContentInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.contentType||""}),xt.schema(r.contentEncryptionAlgorithm||{}),new vt({value:[new Pe({name:r.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0},value:[new wt({value:new Ke})]}),new Ee({name:r.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0}})]})]})}fromSchema(e){v(e,["contentType","contentEncryptionAlgorithm","encryptedContent"]);const t=Ct(e,e,Dt.schema({names:{contentType:"contentType",contentEncryptionAlgorithm:{names:{blockName:"contentEncryptionAlgorithm"}},encryptedContent:"encryptedContent"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for EncryptedContentInfo");this.contentType=t.result.contentType.valueBlock.toString(),this.contentEncryptionAlgorithm=new xt({schema:t.result.contentEncryptionAlgorithm}),"encryptedContent"in t.result&&(this.encryptedContent=t.result.encryptedContent,this.encryptedContent.idBlock.tagClass=1,this.encryptedContent.idBlock.tagNumber=4)}toSchema(){const e={isIndefiniteForm:!1},t=[];if(t.push(new Ge({value:this.contentType})),t.push(this.contentEncryptionAlgorithm.toSchema()),"encryptedContent"in this){e.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed;const r=this.encryptedContent;r.idBlock.tagClass=3,r.idBlock.tagNumber=0,r.lenBlock.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed,t.push(r)}return new Ve({lenBlock:e,value:t})}toJSON(){const e={contentType:this.contentType,contentEncryptionAlgorithm:this.contentEncryptionAlgorithm.toJSON()};return"encryptedContent"in this&&(e.encryptedContent=this.encryptedContent.toJSON()),e}}class Vt{constructor(t={}){this.hashAlgorithm=e(t,"hashAlgorithm",Vt.defaultValues("hashAlgorithm")),this.maskGenAlgorithm=e(t,"maskGenAlgorithm",Vt.defaultValues("maskGenAlgorithm")),this.saltLength=e(t,"saltLength",Vt.defaultValues("saltLength")),this.trailerField=e(t,"trailerField",Vt.defaultValues("trailerField")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"hashAlgorithm":return new xt({algorithmId:"1.3.14.3.2.26",algorithmParams:new je});case"maskGenAlgorithm":return new xt({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:new xt({algorithmId:"1.3.14.3.2.26",algorithmParams:new je}).toSchema()});case"saltLength":return 20;case"trailerField":return 1;default:throw new Error(`Invalid member name for RSASSAPSSParams class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Pe({idBlock:{tagClass:3,tagNumber:0},optional:!0,value:[xt.schema(r.hashAlgorithm||{})]}),new Pe({idBlock:{tagClass:3,tagNumber:1},optional:!0,value:[xt.schema(r.maskGenAlgorithm||{})]}),new Pe({idBlock:{tagClass:3,tagNumber:2},optional:!0,value:[new Me({name:r.saltLength||""})]}),new Pe({idBlock:{tagClass:3,tagNumber:3},optional:!0,value:[new Me({name:r.trailerField||""})]})]})}fromSchema(e){v(e,["hashAlgorithm","maskGenAlgorithm","saltLength","trailerField"]);const t=Ct(e,e,Vt.schema({names:{hashAlgorithm:{names:{blockName:"hashAlgorithm"}},maskGenAlgorithm:{names:{blockName:"maskGenAlgorithm"}},saltLength:"saltLength",trailerField:"trailerField"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSASSAPSSParams");"hashAlgorithm"in t.result&&(this.hashAlgorithm=new xt({schema:t.result.hashAlgorithm})),"maskGenAlgorithm"in t.result&&(this.maskGenAlgorithm=new xt({schema:t.result.maskGenAlgorithm})),"saltLength"in t.result&&(this.saltLength=t.result.saltLength.valueBlock.valueDec),"trailerField"in t.result&&(this.trailerField=t.result.trailerField.valueBlock.valueDec)}toSchema(){const e=[];return this.hashAlgorithm.isEqual(Vt.defaultValues("hashAlgorithm"))||e.push(new Pe({idBlock:{tagClass:3,tagNumber:0},value:[this.hashAlgorithm.toSchema()]})),this.maskGenAlgorithm.isEqual(Vt.defaultValues("maskGenAlgorithm"))||e.push(new Pe({idBlock:{tagClass:3,tagNumber:1},value:[this.maskGenAlgorithm.toSchema()]})),this.saltLength!==Vt.defaultValues("saltLength")&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:2},value:[new Me({value:this.saltLength})]})),this.trailerField!==Vt.defaultValues("trailerField")&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:3},value:[new Me({value:this.trailerField})]})),new Ve({value:e})}toJSON(){const e={};return this.hashAlgorithm.isEqual(Vt.defaultValues("hashAlgorithm"))||(e.hashAlgorithm=this.hashAlgorithm.toJSON()),this.maskGenAlgorithm.isEqual(Vt.defaultValues("maskGenAlgorithm"))||(e.maskGenAlgorithm=this.maskGenAlgorithm.toJSON()),this.saltLength!==Vt.defaultValues("saltLength")&&(e.saltLength=this.saltLength),this.trailerField!==Vt.defaultValues("trailerField")&&(e.trailerField=this.trailerField),e}}class Rt{constructor(t={}){this.salt=e(t,"salt",Rt.defaultValues("salt")),this.iterationCount=e(t,"iterationCount",Rt.defaultValues("iterationCount")),"keyLength"in t&&(this.keyLength=e(t,"keyLength",Rt.defaultValues("keyLength"))),"prf"in t&&(this.prf=e(t,"prf",Rt.defaultValues("prf"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"salt":return{};case"iterationCount":return-1;case"keyLength":return 0;case"prf":return new xt({algorithmId:"1.3.14.3.2.26",algorithmParams:new je});default:throw new Error(`Invalid member name for PBKDF2Params class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new vt({value:[new Ke({name:r.saltPrimitive||""}),xt.schema(r.saltConstructed||{})]}),new Me({name:r.iterationCount||""}),new Me({name:r.keyLength||"",optional:!0}),xt.schema(r.prf||{names:{optional:!0}})]})}fromSchema(e){v(e,["salt","iterationCount","keyLength","prf"]);const t=Ct(e,e,Rt.schema({names:{saltPrimitive:"salt",saltConstructed:{names:{blockName:"salt"}},iterationCount:"iterationCount",keyLength:"keyLength",prf:{names:{blockName:"prf",optional:!0}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PBKDF2Params");this.salt=t.result.salt,this.iterationCount=t.result.iterationCount.valueBlock.valueDec,"keyLength"in t.result&&(this.keyLength=t.result.keyLength.valueBlock.valueDec),"prf"in t.result&&(this.prf=new xt({schema:t.result.prf}))}toSchema(){const e=[];return e.push(this.salt),e.push(new Me({value:this.iterationCount})),"keyLength"in this&&Rt.defaultValues("keyLength")!==this.keyLength&&e.push(new Me({value:this.keyLength})),"prf"in this&&!1===Rt.defaultValues("prf").isEqual(this.prf)&&e.push(this.prf.toSchema()),new Ve({value:e})}toJSON(){const e={salt:this.salt.toJSON(),iterationCount:this.iterationCount};return"keyLength"in this&&Rt.defaultValues("keyLength")!==this.keyLength&&(e.keyLength=this.keyLength),"prf"in this&&!1===Rt.defaultValues("prf").isEqual(this.prf)&&(e.prf=this.prf.toJSON()),e}}class jt{constructor(t={}){this.keyDerivationFunc=e(t,"keyDerivationFunc",jt.defaultValues("keyDerivationFunc")),this.encryptionScheme=e(t,"encryptionScheme",jt.defaultValues("encryptionScheme")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"keyDerivationFunc":case"encryptionScheme":return new xt;default:throw new Error(`Invalid member name for PBES2Params class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[xt.schema(r.keyDerivationFunc||{}),xt.schema(r.encryptionScheme||{})]})}fromSchema(e){v(e,["keyDerivationFunc","encryptionScheme"]);const t=Ct(e,e,jt.schema({names:{keyDerivationFunc:{names:{blockName:"keyDerivationFunc"}},encryptionScheme:{names:{blockName:"encryptionScheme"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PBES2Params");this.keyDerivationFunc=new xt({schema:t.result.keyDerivationFunc}),this.encryptionScheme=new xt({schema:t.result.encryptionScheme})}toSchema(){return new Ve({value:[this.keyDerivationFunc.toSchema(),this.encryptionScheme.toSchema()]})}toJSON(){return{keyDerivationFunc:this.keyDerivationFunc.toJSON(),encryptionScheme:this.encryptionScheme.toJSON()}}}function _t(e,t,r,s,i,n){let a,o;const l=[];switch(t.toUpperCase()){case"SHA-1":a=20,o=64;break;case"SHA-256":a=32,o=64;break;case"SHA-384":a=48,o=128;break;case"SHA-512":a=64,o=128;break;default:throw new Error("Unsupported hashing algorithm")}const c=new Uint8Array(s),h=new ArrayBuffer(2*s.byteLength+2),u=new Uint8Array(h);for(let e=0;e<c.length;e++)u[2*e]=0,u[2*e+1]=c[e];u[u.length-2]=0,u[u.length-1]=0,s=h.slice(0);const m=new ArrayBuffer(o),f=new Uint8Array(m);for(let e=0;e<m.byteLength;e++)f[e]=3;const g=i.byteLength,d=o*Math.ceil(g/o),b=new ArrayBuffer(d),y=new Uint8Array(b),p=new Uint8Array(i);for(let e=0;e<d;e++)y[e]=p[e%g];const v=s.byteLength,k=o*Math.ceil(v/o),w=new ArrayBuffer(k),B=new Uint8Array(w),A=new Uint8Array(s);for(let e=0;e<k;e++)B[e]=A[e%v];const S=b.byteLength+w.byteLength;let C=new ArrayBuffer(S),x=new Uint8Array(C);x.set(y),x.set(B,y.length);const N=Math.ceil((r>>3)/a);let L=Promise.resolve(C);for(let r=0;r<=N;r++){L=L.then(e=>{const t=new ArrayBuffer(m.byteLength+e.byteLength),r=new Uint8Array(t);return r.set(f),r.set(x,f.length),t});for(let r=0;r<n;r++)L=L.then(r=>e.digest({name:t},new Uint8Array(r)));L=L.then(e=>{const t=new ArrayBuffer(o),r=new Uint8Array(t);for(let s=0;s<t.byteLength;s++)r[s]=e[s%e.length];const s=Math.ceil(g/o)+Math.ceil(v/o),i=[];let n=0,a=o;for(let e=0;e<s;e++){const e=Array.from(new Uint8Array(C.slice(n,n+a)));(n+=o)+o>C.byteLength&&(a=C.byteLength-n);let s=511;for(let i=t.byteLength-1;i>=0;i--)s>>=8,s+=r[i]+e[i],e[i]=255&s;i.push(...e)}return C=new ArrayBuffer(i.length),(x=new Uint8Array(C)).set(i),l.push(...new Uint8Array(e)),C})}return L=L.then(()=>{const e=new ArrayBuffer(r>>3);return new Uint8Array(e).set(new Uint8Array(l).slice(0,r>>3)),e})}class Kt{constructor(t={}){this.crypto=e(t,"crypto",{}),this.subtle=e(t,"subtle",{}),this.name=e(t,"name","")}importKey(e,t,r,s,i){let n={};switch(t instanceof Uint8Array&&(t=t.buffer),e.toLowerCase()){case"raw":return this.subtle.importKey("raw",t,r,s,i);case"spki":{const e=St(t);if(-1===e.offset)return Promise.reject("Incorrect keyData");const a=new Et;try{a.fromSchema(e.result)}catch(e){return Promise.reject("Incorrect keyData")}switch(r.name.toUpperCase()){case"RSA-PSS":switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="PS1";break;case"SHA-256":n.alg="PS256";break;case"SHA-384":n.alg="PS384";break;case"SHA-512":n.alg="PS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(i=["verify"],n.kty="RSA",n.ext=s,n.key_ops=i,"1.2.840.113549.1.1.1"!==a.algorithm.algorithmId)return Promise.reject(`Incorrect public key algorithm: ${a.algorithm.algorithmId}`);if("alg"in n==!1)switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RS1";break;case"SHA-256":n.alg="RS256";break;case"SHA-384":n.alg="RS384";break;case"SHA-512":n.alg="RS512";break;default:return Promise.reject(`Incorrect public key algorithm: ${a.algorithm.algorithmId}`)}const e=a.toJSON();for(const t of Object.keys(e))n[t]=e[t]}break;case"ECDSA":i=["verify"];case"ECDH":{if(n={kty:"EC",ext:s,key_ops:i},"1.2.840.10045.2.1"!==a.algorithm.algorithmId)return Promise.reject(`Incorrect public key algorithm: ${a.algorithm.algorithmId}`);const e=a.toJSON();for(const t of Object.keys(e))n[t]=e[t]}break;case"RSA-OAEP":{if(n.kty="RSA",n.ext=s,n.key_ops=i,"safari"===this.name.toLowerCase())n.alg="RSA-OAEP";else switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RSA-OAEP";break;case"SHA-256":n.alg="RSA-OAEP-256";break;case"SHA-384":n.alg="RSA-OAEP-384";break;case"SHA-512":n.alg="RSA-OAEP-512";break;default:return Promise.reject(`Incorrect public key algorithm: ${a.algorithm.algorithmId}`)}const e=a.toJSON();for(const t of Object.keys(e))n[t]=e[t]}break;default:return Promise.reject(`Incorrect algorithm name: ${r.name.toUpperCase()}`)}}break;case"pkcs8":{const e=new Ut,a=St(t);if(-1===a.offset)return Promise.reject("Incorrect keyData");try{e.fromSchema(a.result)}catch(e){return Promise.reject("Incorrect keyData")}if("parsedKey"in e==!1)return Promise.reject("Incorrect keyData");switch(r.name.toUpperCase()){case"RSA-PSS":switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="PS1";break;case"SHA-256":n.alg="PS256";break;case"SHA-384":n.alg="PS384";break;case"SHA-512":n.alg="PS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(i=["sign"],n.kty="RSA",n.ext=s,n.key_ops=i,"1.2.840.113549.1.1.1"!==e.privateKeyAlgorithm.algorithmId)return Promise.reject(`Incorrect private key algorithm: ${e.privateKeyAlgorithm.algorithmId}`);if("alg"in n==!1)switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RS1";break;case"SHA-256":n.alg="RS256";break;case"SHA-384":n.alg="RS384";break;case"SHA-512":n.alg="RS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const t=e.toJSON();for(const e of Object.keys(t))n[e]=t[e]}break;case"ECDSA":i=["sign"];case"ECDH":{if(n={kty:"EC",ext:s,key_ops:i},"1.2.840.10045.2.1"!==e.privateKeyAlgorithm.algorithmId)return Promise.reject(`Incorrect algorithm: ${e.privateKeyAlgorithm.algorithmId}`);const t=e.toJSON();for(const e of Object.keys(t))n[e]=t[e]}break;case"RSA-OAEP":{if(n.kty="RSA",n.ext=s,n.key_ops=i,"safari"===this.name.toLowerCase())n.alg="RSA-OAEP";else switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RSA-OAEP";break;case"SHA-256":n.alg="RSA-OAEP-256";break;case"SHA-384":n.alg="RSA-OAEP-384";break;case"SHA-512":n.alg="RSA-OAEP-512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const t=e.toJSON();for(const e of Object.keys(t))n[e]=t[e]}break;default:return Promise.reject(`Incorrect algorithm name: ${r.name.toUpperCase()}`)}}break;case"jwk":n=t;break;default:return Promise.reject(`Incorrect format: ${e}`)}return"safari"===this.name.toLowerCase()?Promise.resolve().then(()=>this.subtle.importKey("jwk",b(JSON.stringify(n)),r,s,i)).then(e=>e,()=>this.subtle.importKey("jwk",n,r,s,i)):this.subtle.importKey("jwk",n,r,s,i)}exportKey(e,t){let r=this.subtle.exportKey("jwk",t);switch("safari"===this.name.toLowerCase()&&(r=r.then(e=>e instanceof ArrayBuffer?JSON.parse(d(e)):e)),e.toLowerCase()){case"raw":return this.subtle.exportKey("raw",t);case"spki":r=r.then(e=>{const t=new Et;try{t.fromJSON(e)}catch(e){return Promise.reject("Incorrect key data")}return t.toSchema().toBER(!1)});break;case"pkcs8":r=r.then(e=>{const t=new Ut;try{t.fromJSON(e)}catch(e){return Promise.reject("Incorrect key data")}return t.toSchema().toBER(!1)});break;case"jwk":break;default:return Promise.reject(`Incorrect format: ${e}`)}return r}convert(e,t,r,s,i,n){switch(e.toLowerCase()){case"raw":switch(t.toLowerCase()){case"raw":return Promise.resolve(r);case"spki":return Promise.resolve().then(()=>this.importKey("raw",r,s,i,n)).then(e=>this.exportKey("spki",e));case"pkcs8":return Promise.resolve().then(()=>this.importKey("raw",r,s,i,n)).then(e=>this.exportKey("pkcs8",e));case"jwk":return Promise.resolve().then(()=>this.importKey("raw",r,s,i,n)).then(e=>this.exportKey("jwk",e));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"spki":switch(t.toLowerCase()){case"raw":return Promise.resolve().then(()=>this.importKey("spki",r,s,i,n)).then(e=>this.exportKey("raw",e));case"spki":return Promise.resolve(r);case"pkcs8":return Promise.reject("Impossible to convert between SPKI/PKCS8");case"jwk":return Promise.resolve().then(()=>this.importKey("spki",r,s,i,n)).then(e=>this.exportKey("jwk",e));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"pkcs8":switch(t.toLowerCase()){case"raw":return Promise.resolve().then(()=>this.importKey("pkcs8",r,s,i,n)).then(e=>this.exportKey("raw",e));case"spki":return Promise.reject("Impossible to convert between SPKI/PKCS8");case"pkcs8":return Promise.resolve(r);case"jwk":return Promise.resolve().then(()=>this.importKey("pkcs8",r,s,i,n)).then(e=>this.exportKey("jwk",e));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"jwk":switch(t.toLowerCase()){case"raw":return Promise.resolve().then(()=>this.importKey("jwk",r,s,i,n)).then(e=>this.exportKey("raw",e));case"spki":return Promise.resolve().then(()=>this.importKey("jwk",r,s,i,n)).then(e=>this.exportKey("spki",e));case"pkcs8":return Promise.resolve().then(()=>this.importKey("jwk",r,s,i,n)).then(e=>this.exportKey("pkcs8",e));case"jwk":return Promise.resolve(r);default:return Promise.reject(`Incorrect outputFormat: ${t}`)}default:return Promise.reject(`Incorrect inputFormat: ${e}`)}}encrypt(...e){return this.subtle.encrypt(...e)}decrypt(...e){return this.subtle.decrypt(...e)}sign(...e){return this.subtle.sign(...e)}verify(...e){return this.subtle.verify(...e)}digest(...e){return this.subtle.digest(...e)}generateKey(...e){return this.subtle.generateKey(...e)}deriveKey(...e){return this.subtle.deriveKey(...e)}deriveBits(...e){return this.subtle.deriveBits(...e)}wrapKey(...e){return this.subtle.wrapKey(...e)}unwrapKey(...e){return this.subtle.unwrapKey(...e)}getRandomValues(e){if("getRandomValues"in this.crypto==!1)throw new Error("No support for getRandomValues");return this.crypto.getRandomValues(e)}getAlgorithmByOID(e){switch(e){case"1.2.840.113549.1.1.1":case"1.2.840.113549.1.1.5":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-1"}};case"1.2.840.113549.1.1.11":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"1.2.840.113549.1.1.12":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-384"}};case"1.2.840.113549.1.1.13":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}};case"1.2.840.113549.1.1.10":return{name:"RSA-PSS"};case"1.2.840.113549.1.1.7":return{name:"RSA-OAEP"};case"1.2.840.10045.2.1":case"1.2.840.10045.4.1":return{name:"ECDSA",hash:{name:"SHA-1"}};case"1.2.840.10045.4.3.2":return{name:"ECDSA",hash:{name:"SHA-256"}};case"1.2.840.10045.4.3.3":return{name:"ECDSA",hash:{name:"SHA-384"}};case"1.2.840.10045.4.3.4":return{name:"ECDSA",hash:{name:"SHA-512"}};case"1.3.133.16.840.63.0.2":return{name:"ECDH",kdf:"SHA-1"};case"1.3.132.1.11.1":return{name:"ECDH",kdf:"SHA-256"};case"1.3.132.1.11.2":return{name:"ECDH",kdf:"SHA-384"};case"1.3.132.1.11.3":return{name:"ECDH",kdf:"SHA-512"};case"2.16.840.1.101.3.4.1.2":return{name:"AES-CBC",length:128};case"2.16.840.1.101.3.4.1.22":return{name:"AES-CBC",length:192};case"2.16.840.1.101.3.4.1.42":return{name:"AES-CBC",length:256};case"2.16.840.1.101.3.4.1.6":return{name:"AES-GCM",length:128};case"2.16.840.1.101.3.4.1.26":return{name:"AES-GCM",length:192};case"2.16.840.1.101.3.4.1.46":return{name:"AES-GCM",length:256};case"2.16.840.1.101.3.4.1.4":return{name:"AES-CFB",length:128};case"2.16.840.1.101.3.4.1.24":return{name:"AES-CFB",length:192};case"2.16.840.1.101.3.4.1.44":return{name:"AES-CFB",length:256};case"2.16.840.1.101.3.4.1.5":return{name:"AES-KW",length:128};case"2.16.840.1.101.3.4.1.25":return{name:"AES-KW",length:192};case"2.16.840.1.101.3.4.1.45":return{name:"AES-KW",length:256};case"1.2.840.113549.2.7":return{name:"HMAC",hash:{name:"SHA-1"}};case"1.2.840.113549.2.9":return{name:"HMAC",hash:{name:"SHA-256"}};case"1.2.840.113549.2.10":return{name:"HMAC",hash:{name:"SHA-384"}};case"1.2.840.113549.2.11":return{name:"HMAC",hash:{name:"SHA-512"}};case"1.2.840.113549.1.9.16.3.5":return{name:"DH"};case"1.3.14.3.2.26":return{name:"SHA-1"};case"2.16.840.1.101.3.4.2.1":return{name:"SHA-256"};case"2.16.840.1.101.3.4.2.2":return{name:"SHA-384"};case"2.16.840.1.101.3.4.2.3":return{name:"SHA-512"};case"1.2.840.113549.1.5.12":return{name:"PBKDF2"};case"1.2.840.10045.3.1.7":return{name:"P-256"};case"1.3.132.0.34":return{name:"P-384"};case"1.3.132.0.35":return{name:"P-521"}}return{}}getOIDByAlgorithm(e){let t="";switch(e.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.113549.1.1.5";break;case"SHA-256":t="1.2.840.113549.1.1.11";break;case"SHA-384":t="1.2.840.113549.1.1.12";break;case"SHA-512":t="1.2.840.113549.1.1.13"}break;case"RSA-PSS":t="1.2.840.113549.1.1.10";break;case"RSA-OAEP":t="1.2.840.113549.1.1.7";break;case"ECDSA":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.10045.4.1";break;case"SHA-256":t="1.2.840.10045.4.3.2";break;case"SHA-384":t="1.2.840.10045.4.3.3";break;case"SHA-512":t="1.2.840.10045.4.3.4"}break;case"ECDH":switch(e.kdf.toUpperCase()){case"SHA-1":t="1.3.133.16.840.63.0.2";break;case"SHA-256":t="1.3.132.1.11.1";break;case"SHA-384":t="1.3.132.1.11.2";break;case"SHA-512":t="1.3.132.1.11.3"}break;case"AES-CTR":break;case"AES-CBC":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.2";break;case 192:t="2.16.840.1.101.3.4.1.22";break;case 256:t="2.16.840.1.101.3.4.1.42"}break;case"AES-CMAC":break;case"AES-GCM":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.6";break;case 192:t="2.16.840.1.101.3.4.1.26";break;case 256:t="2.16.840.1.101.3.4.1.46"}break;case"AES-CFB":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.4";break;case 192:t="2.16.840.1.101.3.4.1.24";break;case 256:t="2.16.840.1.101.3.4.1.44"}break;case"AES-KW":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.5";break;case 192:t="2.16.840.1.101.3.4.1.25";break;case 256:t="2.16.840.1.101.3.4.1.45"}break;case"HMAC":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.113549.2.7";break;case"SHA-256":t="1.2.840.113549.2.9";break;case"SHA-384":t="1.2.840.113549.2.10";break;case"SHA-512":t="1.2.840.113549.2.11"}break;case"DH":t="1.2.840.113549.1.9.16.3.5";break;case"SHA-1":t="1.3.14.3.2.26";break;case"SHA-256":t="2.16.840.1.101.3.4.2.1";break;case"SHA-384":t="2.16.840.1.101.3.4.2.2";break;case"SHA-512":t="2.16.840.1.101.3.4.2.3";break;case"CONCAT":case"HKDF":break;case"PBKDF2":t="1.2.840.113549.1.5.12";break;case"P-256":t="1.2.840.10045.3.1.7";break;case"P-384":t="1.3.132.0.34";break;case"P-521":t="1.3.132.0.35"}return t}getAlgorithmParameters(e,t){let r={algorithm:{},usages:[]};switch(e.toUpperCase()){case"RSASSA-PKCS1-V1_5":switch(t.toLowerCase()){case"generatekey":r={algorithm:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["sign","verify"]};break;case"verify":case"sign":case"importkey":r={algorithm:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},usages:["verify"]};break;case"exportkey":default:return{algorithm:{name:"RSASSA-PKCS1-v1_5"},usages:[]}}break;case"RSA-PSS":switch(t.toLowerCase()){case"sign":case"verify":r={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"},saltLength:20},usages:["sign","verify"]};break;case"generatekey":r={algorithm:{name:"RSA-PSS",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-1"}},usages:["sign","verify"]};break;case"importkey":r={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"}},usages:["verify"]};break;case"exportkey":default:return{algorithm:{name:"RSA-PSS"},usages:[]}}break;case"RSA-OAEP":switch(t.toLowerCase()){case"encrypt":case"decrypt":r={algorithm:{name:"RSA-OAEP"},usages:["encrypt","decrypt"]};break;case"generatekey":r={algorithm:{name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"importkey":r={algorithm:{name:"RSA-OAEP",hash:{name:"SHA-256"}},usages:["encrypt"]};break;case"exportkey":default:return{algorithm:{name:"RSA-OAEP"},usages:[]}}break;case"ECDSA":switch(t.toLowerCase()){case"generatekey":r={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["sign","verify"]};break;case"importkey":r={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["verify"]};break;case"verify":case"sign":r={algorithm:{name:"ECDSA",hash:{name:"SHA-256"}},usages:["sign"]};break;default:return{algorithm:{name:"ECDSA"},usages:[]}}break;case"ECDH":switch(t.toLowerCase()){case"exportkey":case"importkey":case"generatekey":r={algorithm:{name:"ECDH",namedCurve:"P-256"},usages:["deriveKey","deriveBits"]};break;case"derivekey":case"derivebits":r={algorithm:{name:"ECDH",namedCurve:"P-256",public:[]},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"ECDH"},usages:[]}}break;case"AES-CTR":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-CTR",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-CTR",counter:new Uint8Array(16),length:10},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CTR"},usages:[]}}break;case"AES-CBC":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-CBC",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-CBC",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CBC"},usages:[]}}break;case"AES-GCM":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-GCM",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-GCM",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-GCM"},usages:[]}}break;case"AES-KW":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":case"wrapkey":case"unwrapkey":r={algorithm:{name:"AES-KW",length:256},usages:["wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-KW"},usages:[]}}break;case"HMAC":switch(t.toLowerCase()){case"sign":case"verify":r={algorithm:{name:"HMAC"},usages:["sign","verify"]};break;case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"HMAC",length:32,hash:{name:"SHA-256"}},usages:["sign","verify"]};break;default:return{algorithm:{name:"HMAC"},usages:[]}}break;case"HKDF":switch(t.toLowerCase()){case"derivekey":r={algorithm:{name:"HKDF",hash:"SHA-256",salt:new Uint8Array([]),info:new Uint8Array([])},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"HKDF"},usages:[]}}break;case"PBKDF2":switch(t.toLowerCase()){case"derivekey":r={algorithm:{name:"PBKDF2",hash:{name:"SHA-256"},salt:new Uint8Array([]),iterations:1e4},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"PBKDF2"},usages:[]}}}return r}getHashAlgorithm(e){let t="";switch(e.algorithmId){case"1.2.840.10045.4.1":case"1.2.840.113549.1.1.5":t="SHA-1";break;case"1.2.840.10045.4.3.2":case"1.2.840.113549.1.1.11":t="SHA-256";break;case"1.2.840.10045.4.3.3":case"1.2.840.113549.1.1.12":t="SHA-384";break;case"1.2.840.10045.4.3.4":case"1.2.840.113549.1.1.13":t="SHA-512";break;case"1.2.840.113549.1.1.10":try{const r=new Vt({schema:e.algorithmParams});if("hashAlgorithm"in r){const e=this.getAlgorithmByOID(r.hashAlgorithm.algorithmId);if("name"in e==!1)return"";t=e.name}else t="SHA-1"}catch(e){}}return t}encryptEncryptedContentInfo(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("contentEncryptionAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "contentEncryptionAlgorithm"');if("hmacHashAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "hmacHashAlgorithm"');if("iterationCount"in e==!1)return Promise.reject('Absent mandatory parameter "iterationCount"');if("contentToEncrypt"in e==!1)return Promise.reject('Absent mandatory parameter "contentToEncrypt"');if("contentType"in e==!1)return Promise.reject('Absent mandatory parameter "contentType"');const t=this.getOIDByAlgorithm(e.contentEncryptionAlgorithm);if(""===t)return Promise.reject('Wrong "contentEncryptionAlgorithm" value');const r=this.getOIDByAlgorithm({name:"PBKDF2"});if(""===r)return Promise.reject("Can not find OID for PBKDF2");const s=this.getOIDByAlgorithm({name:"HMAC",hash:{name:e.hmacHashAlgorithm}});if(""===s)return Promise.reject(`Incorrect value for "hmacHashAlgorithm": ${e.hmacHashAlgorithm}`);let i=Promise.resolve();const n=new ArrayBuffer(16),a=new Uint8Array(n);this.getRandomValues(a);const o=new ArrayBuffer(64),l=new Uint8Array(o);this.getRandomValues(l);const c=new Uint8Array(e.contentToEncrypt),h=new Rt({salt:new Ke({valueHex:o}),iterationCount:e.iterationCount,prf:new xt({algorithmId:s,algorithmParams:new je})});return i=(i=(i=(i=i.then(()=>{const t=new Uint8Array(e.password);return this.importKey("raw",t,"PBKDF2",!1,["deriveKey"])},e=>Promise.reject(e))).then(t=>this.deriveKey({name:"PBKDF2",hash:{name:e.hmacHashAlgorithm},salt:l,iterations:e.iterationCount},t,e.contentEncryptionAlgorithm,!1,["encrypt"]),e=>Promise.reject(e))).then(t=>this.encrypt({name:e.contentEncryptionAlgorithm.name,iv:a},t,c),e=>Promise.reject(e))).then(s=>{const i=new jt({keyDerivationFunc:new xt({algorithmId:r,algorithmParams:h.toSchema()}),encryptionScheme:new xt({algorithmId:t,algorithmParams:new Ke({valueHex:n})})});return new Dt({contentType:e.contentType,contentEncryptionAlgorithm:new xt({algorithmId:"1.2.840.113549.1.5.13",algorithmParams:i.toSchema()}),encryptedContent:new Ke({valueHex:s})})},e=>Promise.reject(e))}decryptEncryptedContentInfo(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("encryptedContentInfo"in e==!1)return Promise.reject('Absent mandatory parameter "encryptedContentInfo"');if("1.2.840.113549.1.5.13"!==e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId)return Promise.reject(`Unknown "contentEncryptionAlgorithm": ${e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId}`);let t,r,s=Promise.resolve();try{t=new jt({schema:e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams})}catch(e){return Promise.reject('Incorrectly encoded "pbes2Parameters"')}try{r=new Rt({schema:t.keyDerivationFunc.algorithmParams})}catch(e){return Promise.reject('Incorrectly encoded "pbkdf2Params"')}const i=this.getAlgorithmByOID(t.encryptionScheme.algorithmId);if("name"in i==!1)return Promise.reject(`Incorrect OID for "contentEncryptionAlgorithm": ${t.encryptionScheme.algorithmId}`);const a=t.encryptionScheme.algorithmParams.valueBlock.valueHex,o=new Uint8Array(a),l=r.salt.valueBlock.valueHex,c=new Uint8Array(l),h=r.iterationCount;let u="SHA-1";if("prf"in r){const e=this.getAlgorithmByOID(r.prf.algorithmId);if("name"in e==!1)return Promise.reject("Incorrect OID for HMAC hash algorithm");u=e.hash.name}return s=(s=(s=s.then(()=>this.importKey("raw",e.password,"PBKDF2",!1,["deriveKey"]),e=>Promise.reject(e))).then(e=>this.deriveKey({name:"PBKDF2",hash:{name:u},salt:c,iterations:h},e,i,!1,["decrypt"]),e=>Promise.reject(e))).then(t=>{let r=new ArrayBuffer(0);if(!1===e.encryptedContentInfo.encryptedContent.idBlock.isConstructed)r=e.encryptedContentInfo.encryptedContent.valueBlock.valueHex;else for(const t of e.encryptedContentInfo.encryptedContent.valueBlock.value)r=n(r,t.valueBlock.valueHex);return this.decrypt({name:i.name,iv:o},t,r)},e=>Promise.reject(e))}stampDataWithPassword(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("hashAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "hashAlgorithm"');if("salt"in e==!1)return Promise.reject('Absent mandatory parameter "iterationCount"');if("iterationCount"in e==!1)return Promise.reject('Absent mandatory parameter "salt"');if("contentToStamp"in e==!1)return Promise.reject('Absent mandatory parameter "contentToStamp"');let t;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:return Promise.reject(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}let r=Promise.resolve();const s={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}};return r=(r=(r=r.then(()=>_t(this,e.hashAlgorithm,t,e.password,e.salt,e.iterationCount))).then(e=>this.importKey("raw",new Uint8Array(e),s,!1,["sign"]))).then(t=>this.sign(s,t,new Uint8Array(e.contentToStamp)),e=>Promise.reject(e))}verifyDataStampedWithPassword(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("hashAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "hashAlgorithm"');if("salt"in e==!1)return Promise.reject('Absent mandatory parameter "iterationCount"');if("iterationCount"in e==!1)return Promise.reject('Absent mandatory parameter "salt"');if("contentToVerify"in e==!1)return Promise.reject('Absent mandatory parameter "contentToVerify"');if("signatureToVerify"in e==!1)return Promise.reject('Absent mandatory parameter "signatureToVerify"');let t;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:return Promise.reject(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}let r=Promise.resolve();const s={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}};return r=(r=(r=r.then(()=>_t(this,e.hashAlgorithm,t,e.password,e.salt,e.iterationCount))).then(e=>this.importKey("raw",new Uint8Array(e),s,!1,["verify"]))).then(t=>this.verify(s,t,new Uint8Array(e.signatureToVerify),new Uint8Array(e.contentToVerify)),e=>Promise.reject(e))}getSignatureParameters(e,t="SHA-1"){if(""===this.getOIDByAlgorithm({name:t}))return Promise.reject(`Unsupported hash algorithm: ${t}`);const r=new xt,s=this.getAlgorithmParameters(e.algorithm.name,"sign");switch(s.algorithm.hash.name=t,e.algorithm.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":case"ECDSA":r.algorithmId=this.getOIDByAlgorithm(s.algorithm);break;case"RSA-PSS":{switch(t.toUpperCase()){case"SHA-256":s.algorithm.saltLength=32;break;case"SHA-384":s.algorithm.saltLength=48;break;case"SHA-512":s.algorithm.saltLength=64}const e={};if("SHA-1"!==t.toUpperCase()){const r=this.getOIDByAlgorithm({name:t});if(""===r)return Promise.reject(`Unsupported hash algorithm: ${t}`);e.hashAlgorithm=new xt({algorithmId:r,algorithmParams:new je}),e.maskGenAlgorithm=new xt({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:e.hashAlgorithm.toSchema()})}20!==s.algorithm.saltLength&&(e.saltLength=s.algorithm.saltLength);const i=new Vt(e);r.algorithmId="1.2.840.113549.1.1.10",r.algorithmParams=i.toSchema()}break;default:return Promise.reject(`Unsupported signature algorithm: ${e.algorithm.name}`)}return Promise.resolve().then(()=>({signatureAlgorithm:r,parameters:s}))}signWithPrivateKey(e,t,r){return this.sign(r.algorithm,t,new Uint8Array(e)).then(e=>("ECDSA"===r.algorithm.name&&(e=function(e){if(e.byteLength%2!=0)return new ArrayBuffer(0);const t=e.byteLength/2,r=new ArrayBuffer(t);new Uint8Array(r).set(new Uint8Array(e,0,t));const s=new Me({valueHex:r}),i=new ArrayBuffer(t);new Uint8Array(i).set(new Uint8Array(e,t,t));const n=new Me({valueHex:i});return new Ve({value:[s.convertToDER(),n.convertToDER()]}).toBER(!1)}(e)),e),e=>Promise.reject(`Signing error: ${e}`))}fillPublicKeyParameters(e,t){const r={},s=this.getHashAlgorithm(t);if(""===s)return Promise.reject(`Unsupported signature algorithm: ${t.algorithmId}`);let i;i="1.2.840.113549.1.1.10"===t.algorithmId?t.algorithmId:e.algorithm.algorithmId;const n=this.getAlgorithmByOID(i);if("name"in n==="")return Promise.reject(`Unsupported public key algorithm: ${t.algorithmId}`);if(r.algorithm=this.getAlgorithmParameters(n.name,"importkey"),"hash"in r.algorithm.algorithm&&(r.algorithm.algorithm.hash.name=s),"ECDSA"===n.name){let t=!1;if("algorithmParams"in e.algorithm==!0&&"idBlock"in e.algorithm.algorithmParams&&1===e.algorithm.algorithmParams.idBlock.tagClass&&6===e.algorithm.algorithmParams.idBlock.tagNumber&&(t=!0),!1===t)return Promise.reject("Incorrect type for ECDSA public key parameters");const s=this.getAlgorithmByOID(e.algorithm.algorithmParams.valueBlock.toString());if("name"in s==!1)return Promise.reject(`Unsupported named curve algorithm: ${e.algorithm.algorithmParams.valueBlock.toString()}`);r.algorithm.algorithm.namedCurve=s.name}return r}getPublicKey(e,t,r=null){null===r&&(r=this.fillPublicKeyParameters(e,t));const s=e.toSchema().toBER(!1),i=new Uint8Array(s);return this.importKey("spki",i,r.algorithm.algorithm,!0,r.algorithm.usages)}verifyWithPublicKey(e,t,r,s,i=null){let a=Promise.resolve();if(null===i){if(""===(i=this.getHashAlgorithm(s)))return Promise.reject(`Unsupported signature algorithm: ${s.algorithmId}`);a=a.then(()=>this.getPublicKey(r,s))}else{const e={};let t;t="1.2.840.113549.1.1.10"===s.algorithmId?s.algorithmId:r.algorithm.algorithmId;const n=this.getAlgorithmByOID(t);if("name"in n==="")return Promise.reject(`Unsupported public key algorithm: ${s.algorithmId}`);if(e.algorithm=this.getAlgorithmParameters(n.name,"importkey"),"hash"in e.algorithm.algorithm&&(e.algorithm.algorithm.hash.name=i),"ECDSA"===n.name){let t=!1;if("algorithmParams"in r.algorithm==!0&&"idBlock"in r.algorithm.algorithmParams&&1===r.algorithm.algorithmParams.idBlock.tagClass&&6===r.algorithm.algorithmParams.idBlock.tagNumber&&(t=!0),!1===t)return Promise.reject("Incorrect type for ECDSA public key parameters");const s=this.getAlgorithmByOID(r.algorithm.algorithmParams.valueBlock.toString());if("name"in s==!1)return Promise.reject(`Unsupported named curve algorithm: ${r.algorithm.algorithmParams.valueBlock.toString()}`);e.algorithm.algorithm.namedCurve=s.name}a=a.then(()=>this.getPublicKey(r,null,e))}return a=a.then(r=>{const a=this.getAlgorithmParameters(r.algorithm.name,"verify");"hash"in a.algorithm&&(a.algorithm.hash.name=i);let o=t.valueBlock.valueHex;if("ECDSA"===r.algorithm.name){o=function(e){if(e instanceof Ve==!1)return new ArrayBuffer(0);if(2!==e.valueBlock.value.length)return new ArrayBuffer(0);if(e.valueBlock.value[0]instanceof Me==!1)return new ArrayBuffer(0);if(e.valueBlock.value[1]instanceof Me==!1)return new ArrayBuffer(0);const t=e.valueBlock.value[0].convertFromDER(),r=e.valueBlock.value[1].convertFromDER();switch(!0){case t.valueBlock.valueHex.byteLength<r.valueBlock.valueHex.byteLength:{if(r.valueBlock.valueHex.byteLength-t.valueBlock.valueHex.byteLength!=1)throw new Error("Incorrect DER integer decoding");const e=r.valueBlock.valueHex.byteLength,s=new Uint8Array(t.valueBlock.valueHex),i=new ArrayBuffer(e),a=new Uint8Array(i);return a.set(s,1),a[0]=0,n(i,r.valueBlock.valueHex)}case t.valueBlock.valueHex.byteLength>r.valueBlock.valueHex.byteLength:{if(t.valueBlock.valueHex.byteLength-r.valueBlock.valueHex.byteLength!=1)throw new Error("Incorrect DER integer decoding");const e=t.valueBlock.valueHex.byteLength,s=new Uint8Array(r.valueBlock.valueHex),i=new ArrayBuffer(e),a=new Uint8Array(i);return a.set(s,1),a[0]=0,n(t.valueBlock.valueHex,i)}default:if(t.valueBlock.valueHex.byteLength%2){const e=t.valueBlock.valueHex.byteLength+1,s=new Uint8Array(t.valueBlock.valueHex),i=new ArrayBuffer(e),a=new Uint8Array(i);a.set(s,1),a[0]=0;const o=new Uint8Array(r.valueBlock.valueHex),l=new ArrayBuffer(e),c=new Uint8Array(l);return c.set(o,1),c[0]=0,n(i,l)}}return n(t.valueBlock.valueHex,r.valueBlock.valueHex)}(St(o).result)}if("RSA-PSS"===r.algorithm.name){let e;try{e=new Vt({schema:s.algorithmParams})}catch(e){return Promise.reject(e)}a.algorithm.saltLength="saltLength"in e?e.saltLength:20;let t="SHA-1";if("hashAlgorithm"in e){const r=this.getAlgorithmByOID(e.hashAlgorithm.algorithmId);if("name"in r==!1)return Promise.reject(`Unrecognized hash algorithm: ${e.hashAlgorithm.algorithmId}`);t=r.name}a.algorithm.hash.name=t}return this.verify(a.algorithm,r,new Uint8Array(o),new Uint8Array(e))})}}let Jt={name:"none",crypto:null,subtle:null};function Tt(){if("undefined"!=typeof process&&"pid"in process&&"undefined"!=typeof global&&"undefined"==typeof window){let e;try{e=global[process.pid].pkijs.engine}catch(e){throw new Error('Please call "setEngine" before call to "getEngine"')}return e}return Jt}function Ft(){const e=Tt();if(null!==e.subtle)return e.subtle}function Mt(e){let t=!1,r="";const s=e.trim();for(let e=0;e<s.length;e++)32===s.charCodeAt(e)?!1===t&&(t=!0):(t&&(r+=" ",t=!1),r+=s[e]);return r.toLowerCase()}!function(){if("undefined"!=typeof self&&"crypto"in self){let e="webcrypto";const t=self.crypto;let r;if("webkitSubtle"in self.crypto){try{r=self.crypto.webkitSubtle}catch(e){r=self.crypto.subtle}e="safari"}"subtle"in self.crypto&&(r=self.crypto.subtle),Jt=void 0===r?{name:e,crypto:t,subtle:null}:{name:e,crypto:t,subtle:new Kt({name:e,crypto:self.crypto,subtle:r})}}!function(e,t,r){if("undefined"!=typeof process&&"pid"in process&&"undefined"!=typeof global&&"undefined"==typeof window){if(void 0===global[process.pid])global[process.pid]={};else if("object"!=typeof global[process.pid])throw new Error(`Name global.${process.pid} already exists and it is not an object`);if(void 0===global[process.pid].pkijs)global[process.pid].pkijs={};else if("object"!=typeof global[process.pid].pkijs)throw new Error(`Name global.${process.pid}.pkijs already exists and it is not an object`);global[process.pid].pkijs.engine={name:e,crypto:t,subtle:r}}else Jt={name:e,crypto:t,subtle:r}}(Jt.name,Jt.crypto,Jt.subtle)}();class $t{constructor(t={}){this.type=e(t,"type",$t.defaultValues("type")),this.value=e(t,"value",$t.defaultValues("value")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return"";case"value":return{};default:throw new Error(`Invalid member name for AttributeTypeAndValue class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.type||""}),new kt({name:r.value||""})]})}static blockName(){return"AttributeTypeAndValue"}fromSchema(e){v(e,["type","typeValue"]);const t=Ct(e,e,$t.schema({names:{type:"type",value:"typeValue"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AttributeTypeAndValue");this.type=t.result.type.valueBlock.toString(),this.value=t.result.typeValue}toSchema(){return new Ve({value:[new Ge({value:this.type}),this.value]})}toJSON(){const e={type:this.type};return 0!==Object.keys(this.value).length?e.value=this.value.toJSON():e.value=this.value,e}isEqual(e){const t=[Ze.blockName(),Ye.blockName(),et.blockName(),st.blockName(),it.blockName(),nt.blockName(),at.blockName(),ot.blockName(),lt.blockName(),ct.blockName(),ht.blockName(),ut.blockName()];if(e.constructor.blockName()===$t.blockName()){if(this.type!==e.type)return!1;let r=!1;const s=this.value.constructor.blockName();if(s===e.value.constructor.blockName())for(const e of t)if(s===e){r=!0;break}if(r){const t=Mt(this.value.valueBlock.value),r=Mt(e.value.valueBlock.value);if(0!==t.localeCompare(r))return!1}else if(!1===c(this.value.valueBeforeDecode,e.value.valueBeforeDecode))return!1;return!0}return e instanceof ArrayBuffer&&c(this.value.valueBeforeDecode,e)}}class qt{constructor(t={}){this.typesAndValues=e(t,"typesAndValues",qt.defaultValues("typesAndValues")),this.valueBeforeDecode=e(t,"valueBeforeDecode",qt.defaultValues("valueBeforeDecode")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"typesAndValues":return[];case"valueBeforeDecode":return new ArrayBuffer(0);default:throw new Error(`Invalid member name for RelativeDistinguishedNames class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"typesAndValues":return 0===t.length;case"valueBeforeDecode":return 0===t.byteLength;default:throw new Error(`Invalid member name for RelativeDistinguishedNames class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.repeatedSequence||"",value:new Re({value:[new wt({name:r.repeatedSet||"",value:$t.schema(r.typeAndValue||{})})]})})]})}fromSchema(e){v(e,["RDN","typesAndValues"]);const t=Ct(e,e,qt.schema({names:{blockName:"RDN",repeatedSet:"typesAndValues"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RelativeDistinguishedNames");"typesAndValues"in t.result&&(this.typesAndValues=Array.from(t.result.typesAndValues,e=>new $t({schema:e}))),this.valueBeforeDecode=t.result.RDN.valueBeforeDecode}toSchema(){if(0===this.valueBeforeDecode.byteLength)return new Ve({value:[new Re({value:Array.from(this.typesAndValues,e=>e.toSchema())})]});return St(this.valueBeforeDecode).result}toJSON(){return{typesAndValues:Array.from(this.typesAndValues,e=>e.toJSON())}}isEqual(e){if(e instanceof qt){if(this.typesAndValues.length!==e.typesAndValues.length)return!1;for(const[t,r]of this.typesAndValues.entries())if(!1===r.isEqual(e.typesAndValues[t]))return!1;return!0}return e instanceof ArrayBuffer&&c(this.valueBeforeDecode,e)}}function Wt(t={},r=!1){const s=e(t,"names",{});return new Ve({optional:r,value:[new Pe({optional:!0,idBlock:{tagClass:2,tagNumber:1},name:s.country_name||"",value:[new vt({value:[new st,new it]})]}),new Pe({optional:!0,idBlock:{tagClass:2,tagNumber:2},name:s.administration_domain_name||"",value:[new vt({value:[new st,new it]})]}),new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:0},name:s.network_address||"",isHexOnly:!0}),new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:1},name:s.terminal_identifier||"",isHexOnly:!0}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:2},name:s.private_domain_name||"",value:[new vt({value:[new st,new it]})]}),new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:3},name:s.organization_name||"",isHexOnly:!0}),new Ee({optional:!0,name:s.numeric_user_identifier||"",idBlock:{tagClass:3,tagNumber:4},isHexOnly:!0}),new Pe({optional:!0,name:s.personal_name||"",idBlock:{tagClass:3,tagNumber:5},value:[new Ee({idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:1},isHexOnly:!0}),new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:2},isHexOnly:!0}),new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:3},isHexOnly:!0})]}),new Pe({optional:!0,name:s.organizational_unit_names||"",idBlock:{tagClass:3,tagNumber:6},value:[new wt({value:new it})]})]})}function Gt(e=!1){return new Ve({optional:e,value:[new it,new it]})}function Qt(e=!1){return new Re({optional:e,value:[new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new kt]})]})}class Zt{constructor(t={}){this.type=e(t,"type",Zt.defaultValues("type")),this.value=e(t,"value",Zt.defaultValues("value")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return 9;case"value":return{};default:throw new Error(`Invalid member name for GeneralName class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"type":return t===Zt.defaultValues(e);case"value":return 0===Object.keys(t).length;default:throw new Error(`Invalid member name for GeneralName class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new vt({value:[new Pe({idBlock:{tagClass:3,tagNumber:0},name:r.blockName||"",value:[new Ge,new Pe({idBlock:{tagClass:3,tagNumber:0},value:[new kt]})]}),new Ee({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:1}}),new Ee({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:2}}),new Pe({idBlock:{tagClass:3,tagNumber:3},name:r.blockName||"",value:[Wt(r.builtInStandardAttributes||{},!1),Gt(!0),Qt(!0)]}),new Pe({idBlock:{tagClass:3,tagNumber:4},name:r.blockName||"",value:[qt.schema(r.directoryName||{})]}),new Pe({idBlock:{tagClass:3,tagNumber:5},name:r.blockName||"",value:[new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new vt({value:[new nt,new it,new et,new Ze,new Ye]})]}),new Pe({idBlock:{tagClass:3,tagNumber:1},value:[new vt({value:[new nt,new it,new et,new Ze,new Ye]})]})]}),new Ee({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:6}}),new Ee({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:7}}),new Ee({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:8}})]})}fromSchema(e){v(e,["blockName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID"]);const t=Ct(e,e,Zt.schema({names:{blockName:"blockName",otherName:"otherName",rfc822Name:"rfc822Name",dNSName:"dNSName",x400Address:"x400Address",directoryName:{names:{blockName:"directoryName"}},ediPartyName:"ediPartyName",uniformResourceIdentifier:"uniformResourceIdentifier",iPAddress:"iPAddress",registeredID:"registeredID"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralName");switch(this.type=t.result.blockName.idBlock.tagNumber,this.type){case 0:this.value=t.result.blockName;break;case 1:case 2:case 6:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=22;const r=e.toBER(!1);this.value=St(r).result.valueBlock.value}break;case 3:this.value=t.result.blockName;break;case 4:this.value=new qt({schema:t.result.directoryName});break;case 5:this.value=t.result.ediPartyName;break;case 7:this.value=new Ke({valueHex:t.result.blockName.valueBlock.valueHex});break;case 8:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=6;const r=e.toBER(!1);this.value=St(r).result.valueBlock.toString()}}}toSchema(){switch(this.type){case 0:case 3:case 5:return new Pe({idBlock:{tagClass:3,tagNumber:this.type},value:[this.value]});case 1:case 2:case 6:{const e=new ot({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 4:return new Pe({idBlock:{tagClass:3,tagNumber:4},value:[this.value.toSchema()]});case 7:{const e=this.value;return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 8:{const e=new Ge({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}default:return Zt.schema()}}toJSON(){const e={type:this.type,value:""};if("string"==typeof this.value)e.value=this.value;else try{e.value=this.value.toJSON()}catch(e){}return e}}class zt{constructor(t={}){this.accessMethod=e(t,"accessMethod",zt.defaultValues("accessMethod")),this.accessLocation=e(t,"accessLocation",zt.defaultValues("accessLocation")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"accessMethod":return"";case"accessLocation":return new Zt;default:throw new Error(`Invalid member name for AccessDescription class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.accessMethod||""}),Zt.schema(r.accessLocation||{})]})}fromSchema(e){v(e,["accessMethod","accessLocation"]);const t=Ct(e,e,zt.schema({names:{accessMethod:"accessMethod",accessLocation:{names:{blockName:"accessLocation"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AccessDescription");this.accessMethod=t.result.accessMethod.valueBlock.toString(),this.accessLocation=new Zt({schema:t.result.accessLocation})}toSchema(){return new Ve({value:[new Ge({value:this.accessMethod}),this.accessLocation.toSchema()]})}toJSON(){return{accessMethod:this.accessMethod,accessLocation:this.accessLocation.toJSON()}}}class Yt{constructor(t={}){this.altNames=e(t,"altNames",Yt.defaultValues("altNames")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"altNames":return[];default:throw new Error(`Invalid member name for AltName class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.altNames||"",value:Zt.schema()})]})}fromSchema(e){v(e,["altNames"]);const t=Ct(e,e,Yt.schema({names:{altNames:"altNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AltName");"altNames"in t.result&&(this.altNames=Array.from(t.result.altNames,e=>new Zt({schema:e})))}toSchema(){return new Ve({value:Array.from(this.altNames,e=>e.toSchema())})}toJSON(){return{altNames:Array.from(this.altNames,e=>e.toJSON())}}}class Xt{constructor(t={}){this.type=e(t,"type",Xt.defaultValues("type")),this.value=e(t,"value",Xt.defaultValues("value")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return 0;case"value":return new Date(0,0,0);default:throw new Error(`Invalid member name for Time class: ${e}`)}}static schema(t={},r=!1){const s=e(t,"names",{});return new vt({optional:r,value:[new mt({name:s.utcTimeName||""}),new ft({name:s.generalTimeName||""})]})}fromSchema(e){v(e,["utcTimeName","generalTimeName"]);const t=Ct(e,e,Xt.schema({names:{utcTimeName:"utcTimeName",generalTimeName:"generalTimeName"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Time");"utcTimeName"in t.result&&(this.type=0,this.value=t.result.utcTimeName.toDate()),"generalTimeName"in t.result&&(this.type=1,this.value=t.result.generalTimeName.toDate())}toSchema(){let e={};return 0===this.type&&(e=new mt({valueDate:this.value})),1===this.type&&(e=new ft({valueDate:this.value})),e}toJSON(){return{type:this.type,value:this.value}}}class er{constructor(t={}){this.attributes=e(t,"attributes",er.defaultValues("attributes")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"attributes":return[];default:throw new Error(`Invalid member name for SubjectDirectoryAttributes class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.attributes||"",value:It.schema()})]})}fromSchema(e){v(e,["attributes"]);const t=Ct(e,e,er.schema({names:{attributes:"attributes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for SubjectDirectoryAttributes");this.attributes=Array.from(t.result.attributes,e=>new It({schema:e}))}toSchema(){return new Ve({value:Array.from(this.attributes,e=>e.toSchema())})}toJSON(){return{attributes:Array.from(this.attributes,e=>e.toJSON())}}}class tr{constructor(t={}){"notBefore"in t&&(this.notBefore=e(t,"notBefore",tr.defaultValues("notBefore"))),"notAfter"in t&&(this.notAfter=e(t,"notAfter",tr.defaultValues("notAfter"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"notBefore":case"notAfter":return new Date;default:throw new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ee({name:r.notBefore||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new Ee({name:r.notAfter||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){v(e,["notBefore","notAfter"]);const t=Ct(e,e,tr.schema({names:{notBefore:"notBefore",notAfter:"notAfter"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PrivateKeyUsagePeriod");if("notBefore"in t.result){const e=new ft;e.fromBuffer(t.result.notBefore.valueBlock.valueHex),this.notBefore=e.toDate()}if("notAfter"in t.result){const e=new ft({valueHex:t.result.notAfter.valueBlock.valueHex});e.fromBuffer(t.result.notAfter.valueBlock.valueHex),this.notAfter=e.toDate()}}toSchema(){const e=[];return"notBefore"in this&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:0},valueHex:new ft({valueDate:this.notBefore}).valueBlock.valueHex})),"notAfter"in this&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:1},valueHex:new ft({valueDate:this.notAfter}).valueBlock.valueHex})),new Ve({value:e})}toJSON(){const e={};return"notBefore"in this&&(e.notBefore=this.notBefore),"notAfter"in this&&(e.notAfter=this.notAfter),e}}class rr{constructor(t={}){this.cA=e(t,"cA",!1),"pathLenConstraint"in t&&(this.pathLenConstraint=e(t,"pathLenConstraint",0)),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"cA":return!1;default:throw new Error(`Invalid member name for BasicConstraints class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new De({optional:!0,name:r.cA||""}),new Me({optional:!0,name:r.pathLenConstraint||""})]})}fromSchema(e){v(e,["cA","pathLenConstraint"]);const t=Ct(e,e,rr.schema({names:{cA:"cA",pathLenConstraint:"pathLenConstraint"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for BasicConstraints");"cA"in t.result&&(this.cA=t.result.cA.valueBlock.value),"pathLenConstraint"in t.result&&(t.result.pathLenConstraint.valueBlock.isHexOnly?this.pathLenConstraint=t.result.pathLenConstraint:this.pathLenConstraint=t.result.pathLenConstraint.valueBlock.valueDec)}toSchema(){const e=[];return this.cA!==rr.defaultValues("cA")&&e.push(new De({value:this.cA})),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof Me?e.push(this.pathLenConstraint):e.push(new Me({value:this.pathLenConstraint}))),new Ve({value:e})}toJSON(){const e={};return this.cA!==rr.defaultValues("cA")&&(e.cA=this.cA),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof Me?e.pathLenConstraint=this.pathLenConstraint.toJSON():e.pathLenConstraint=this.pathLenConstraint),e}}class sr{constructor(t={}){"distributionPoint"in t&&(this.distributionPoint=e(t,"distributionPoint",sr.defaultValues("distributionPoint"))),this.onlyContainsUserCerts=e(t,"onlyContainsUserCerts",sr.defaultValues("onlyContainsUserCerts")),this.onlyContainsCACerts=e(t,"onlyContainsCACerts",sr.defaultValues("onlyContainsCACerts")),"onlySomeReasons"in t&&(this.onlySomeReasons=e(t,"onlySomeReasons",sr.defaultValues("onlySomeReasons"))),this.indirectCRL=e(t,"indirectCRL",sr.defaultValues("indirectCRL")),this.onlyContainsAttributeCerts=e(t,"onlyContainsAttributeCerts",sr.defaultValues("onlyContainsAttributeCerts")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"distributionPoint":return[];case"onlyContainsUserCerts":case"onlyContainsCACerts":return!1;case"onlySomeReasons":return 0;case"indirectCRL":case"onlyContainsAttributeCerts":return!1;default:throw new Error(`Invalid member name for IssuingDistributionPoint class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new vt({value:[new Pe({name:r.distributionPoint||"",idBlock:{tagClass:3,tagNumber:0},value:[new wt({name:r.distributionPointNames||"",value:Zt.schema()})]}),new Pe({name:r.distributionPoint||"",idBlock:{tagClass:3,tagNumber:1},value:qt.schema().valueBlock.value})]})]}),new Ee({name:r.onlyContainsUserCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new Ee({name:r.onlyContainsCACerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new Ee({name:r.onlySomeReasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:3}}),new Ee({name:r.indirectCRL||"",optional:!0,idBlock:{tagClass:3,tagNumber:4}}),new Ee({name:r.onlyContainsAttributeCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:5}})]})}fromSchema(e){v(e,["distributionPoint","distributionPointNames","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts"]);const t=Ct(e,e,sr.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",onlyContainsUserCerts:"onlyContainsUserCerts",onlyContainsCACerts:"onlyContainsCACerts",onlySomeReasons:"onlySomeReasons",indirectCRL:"indirectCRL",onlyContainsAttributeCerts:"onlyContainsAttributeCerts"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for IssuingDistributionPoint");if("distributionPoint"in t.result)switch(!0){case 0===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=Array.from(t.result.distributionPointNames,e=>new Zt({schema:e}));break;case 1===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=new qt({schema:new Ve({value:t.result.distributionPoint.valueBlock.value})});break;default:throw new Error("Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}")}if("onlyContainsUserCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsUserCerts.valueBlock.valueHex);this.onlyContainsUserCerts=0!==e[0]}if("onlyContainsCACerts"in t.result){const e=new Uint8Array(t.result.onlyContainsCACerts.valueBlock.valueHex);this.onlyContainsCACerts=0!==e[0]}if("onlySomeReasons"in t.result){const e=new Uint8Array(t.result.onlySomeReasons.valueBlock.valueHex);this.onlySomeReasons=e[0]}if("indirectCRL"in t.result){const e=new Uint8Array(t.result.indirectCRL.valueBlock.valueHex);this.indirectCRL=0!==e[0]}if("onlyContainsAttributeCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsAttributeCerts.valueBlock.valueHex);this.onlyContainsAttributeCerts=0!==e[0]}}toSchema(){const e=[];if("distributionPoint"in this){let t;this.distributionPoint instanceof Array?t=new Pe({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,e=>e.toSchema())}):((t=this.distributionPoint.toSchema()).idBlock.tagClass=3,t.idBlock.tagNumber=1),e.push(new Pe({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if(this.onlyContainsUserCerts!==sr.defaultValues("onlyContainsUserCerts")&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:1},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsCACerts!==sr.defaultValues("onlyContainsCACerts")&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:2},valueHex:new Uint8Array([255]).buffer})),"onlySomeReasons"in this){const t=new ArrayBuffer(1);new Uint8Array(t)[0]=this.onlySomeReasons,e.push(new Ee({idBlock:{tagClass:3,tagNumber:3},valueHex:t}))}return this.indirectCRL!==sr.defaultValues("indirectCRL")&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:4},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsAttributeCerts!==sr.defaultValues("onlyContainsAttributeCerts")&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:5},valueHex:new Uint8Array([255]).buffer})),new Ve({value:e})}toJSON(){const e={};return"distributionPoint"in this&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,e=>e.toJSON()):e.distributionPoint=this.distributionPoint.toJSON()),this.onlyContainsUserCerts!==sr.defaultValues("onlyContainsUserCerts")&&(e.onlyContainsUserCerts=this.onlyContainsUserCerts),this.onlyContainsCACerts!==sr.defaultValues("onlyContainsCACerts")&&(e.onlyContainsCACerts=this.onlyContainsCACerts),"onlySomeReasons"in this&&(e.onlySomeReasons=this.onlySomeReasons),this.indirectCRL!==sr.defaultValues("indirectCRL")&&(e.indirectCRL=this.indirectCRL),this.onlyContainsAttributeCerts!==sr.defaultValues("onlyContainsAttributeCerts")&&(e.onlyContainsAttributeCerts=this.onlyContainsAttributeCerts),e}}class ir{constructor(t={}){this.names=e(t,"names",ir.defaultValues("names")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"names":return[];default:throw new Error(`Invalid member name for GeneralNames class: ${e}`)}}static schema(t={},r=!1){const s=e(t,"names",{});return new Ve({optional:r,name:s.blockName||"",value:[new wt({name:s.generalNames||"",value:Zt.schema()})]})}fromSchema(e){v(e,["names","generalNames"]);const t=Ct(e,e,ir.schema({names:{blockName:"names",generalNames:"generalNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralNames");this.names=Array.from(t.result.generalNames,e=>new Zt({schema:e}))}toSchema(){return new Ve({value:Array.from(this.names,e=>e.toSchema())})}toJSON(){return{names:Array.from(this.names,e=>e.toJSON())}}}class nr{constructor(t={}){this.base=e(t,"base",nr.defaultValues("base")),this.minimum=e(t,"minimum",nr.defaultValues("minimum")),"maximum"in t&&(this.maximum=e(t,"maximum",nr.defaultValues("maximum"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"base":return new Zt;case"minimum":case"maximum":return 0;default:throw new Error(`Invalid member name for GeneralSubtree class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[Zt.schema(r.base||{}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Me({name:r.minimum||""})]}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new Me({name:r.maximum||""})]})]})}fromSchema(e){v(e,["base","minimum","maximum"]);const t=Ct(e,e,nr.schema({names:{base:{names:{blockName:"base"}},minimum:"minimum",maximum:"maximum"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralSubtree");this.base=new Zt({schema:t.result.base}),"minimum"in t.result&&(t.result.minimum.valueBlock.isHexOnly?this.minimum=t.result.minimum:this.minimum=t.result.minimum.valueBlock.valueDec),"maximum"in t.result&&(t.result.maximum.valueBlock.isHexOnly?this.maximum=t.result.maximum:this.maximum=t.result.maximum.valueBlock.valueDec)}toSchema(){const e=[];if(e.push(this.base.toSchema()),0!==this.minimum){let t=0;t=this.minimum instanceof Me?this.minimum:new Me({value:this.minimum}),e.push(new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if("maximum"in this){let t=0;t=this.maximum instanceof Me?this.maximum:new Me({value:this.maximum}),e.push(new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[t]}))}return new Ve({value:e})}toJSON(){const e={base:this.base.toJSON()};return 0!==this.minimum&&("number"==typeof this.minimum?e.minimum=this.minimum:e.minimum=this.minimum.toJSON()),"maximum"in this&&("number"==typeof this.maximum?e.maximum=this.maximum:e.maximum=this.maximum.toJSON()),e}}class ar{constructor(t={}){"permittedSubtrees"in t&&(this.permittedSubtrees=e(t,"permittedSubtrees",ar.defaultValues("permittedSubtrees"))),"excludedSubtrees"in t&&(this.excludedSubtrees=e(t,"excludedSubtrees",ar.defaultValues("excludedSubtrees"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"permittedSubtrees":case"excludedSubtrees":return[];default:throw new Error(`Invalid member name for NameConstraints class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new wt({name:r.permittedSubtrees||"",value:nr.schema()})]}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new wt({name:r.excludedSubtrees||"",value:nr.schema()})]})]})}fromSchema(e){v(e,["permittedSubtrees","excludedSubtrees"]);const t=Ct(e,e,ar.schema({names:{permittedSubtrees:"permittedSubtrees",excludedSubtrees:"excludedSubtrees"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for NameConstraints");"permittedSubtrees"in t.result&&(this.permittedSubtrees=Array.from(t.result.permittedSubtrees,e=>new nr({schema:e}))),"excludedSubtrees"in t.result&&(this.excludedSubtrees=Array.from(t.result.excludedSubtrees,e=>new nr({schema:e})))}toSchema(){const e=[];return"permittedSubtrees"in this&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.permittedSubtrees,e=>e.toSchema())})),"excludedSubtrees"in this&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.excludedSubtrees,e=>e.toSchema())})),new Ve({value:e})}toJSON(){const e={};return"permittedSubtrees"in this&&(e.permittedSubtrees=Array.from(this.permittedSubtrees,e=>e.toJSON())),"excludedSubtrees"in this&&(e.excludedSubtrees=Array.from(this.excludedSubtrees,e=>e.toJSON())),e}}class or{constructor(t={}){"distributionPoint"in t&&(this.distributionPoint=e(t,"distributionPoint",or.defaultValues("distributionPoint"))),"reasons"in t&&(this.reasons=e(t,"reasons",or.defaultValues("reasons"))),"cRLIssuer"in t&&(this.cRLIssuer=e(t,"cRLIssuer",or.defaultValues("cRLIssuer"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"distributionPoint":return[];case"reasons":return new Te;case"cRLIssuer":return[];default:throw new Error(`Invalid member name for DistributionPoint class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new vt({value:[new Pe({name:r.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new wt({name:r.distributionPointNames||"",value:Zt.schema()})]}),new Pe({name:r.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:1},value:qt.schema().valueBlock.value})]})]}),new Ee({name:r.reasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new Pe({name:r.cRLIssuer||"",optional:!0,idBlock:{tagClass:3,tagNumber:2},value:[new wt({name:r.cRLIssuerNames||"",value:Zt.schema()})]})]})}fromSchema(e){v(e,["distributionPoint","distributionPointNames","reasons","cRLIssuer","cRLIssuerNames"]);const t=Ct(e,e,or.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",reasons:"reasons",cRLIssuer:"cRLIssuer",cRLIssuerNames:"cRLIssuerNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for DistributionPoint");"distributionPoint"in t.result&&(0===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=Array.from(t.result.distributionPointNames,e=>new Zt({schema:e}))),1===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=new qt({schema:new Ve({value:t.result.distributionPoint.valueBlock.value})}))),"reasons"in t.result&&(this.reasons=new Te({valueHex:t.result.reasons.valueBlock.valueHex})),"cRLIssuer"in t.result&&(this.cRLIssuer=Array.from(t.result.cRLIssuerNames,e=>new Zt({schema:e})))}toSchema(){const e=[];if("distributionPoint"in this){let t;t=this.distributionPoint instanceof Array?new Pe({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,e=>e.toSchema())}):new Pe({idBlock:{tagClass:3,tagNumber:1},value:[this.distributionPoint.toSchema()]}),e.push(new Pe({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}return"reasons"in this&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:1},valueHex:this.reasons.valueBlock.valueHex})),"cRLIssuer"in this&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:2},value:Array.from(this.cRLIssuer,e=>e.toSchema())})),new Ve({value:e})}toJSON(){const e={};return"distributionPoint"in this&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,e=>e.toJSON()):e.distributionPoint=this.distributionPoint.toJSON()),"reasons"in this&&(e.reasons=this.reasons.toJSON()),"cRLIssuer"in this&&(e.cRLIssuer=Array.from(this.cRLIssuer,e=>e.toJSON())),e}}class lr{constructor(t={}){this.distributionPoints=e(t,"distributionPoints",lr.defaultValues("distributionPoints")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"distributionPoints":return[];default:throw new Error(`Invalid member name for CRLDistributionPoints class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.distributionPoints||"",value:or.schema()})]})}fromSchema(e){v(e,["distributionPoints"]);const t=Ct(e,e,lr.schema({names:{distributionPoints:"distributionPoints"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CRLDistributionPoints");this.distributionPoints=Array.from(t.result.distributionPoints,e=>new or({schema:e}))}toSchema(){return new Ve({value:Array.from(this.distributionPoints,e=>e.toSchema())})}toJSON(){return{distributionPoints:Array.from(this.distributionPoints,e=>e.toJSON())}}}class cr{constructor(t={}){this.policyQualifierId=e(t,"policyQualifierId",cr.defaultValues("policyQualifierId")),this.qualifier=e(t,"qualifier",cr.defaultValues("qualifier")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"policyQualifierId":return"";case"qualifier":return new kt;default:throw new Error(`Invalid member name for PolicyQualifierInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.policyQualifierId||""}),new kt({name:r.qualifier||""})]})}fromSchema(e){v(e,["policyQualifierId","qualifier"]);const t=Ct(e,e,cr.schema({names:{policyQualifierId:"policyQualifierId",qualifier:"qualifier"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyQualifierInfo");this.policyQualifierId=t.result.policyQualifierId.valueBlock.toString(),this.qualifier=t.result.qualifier}toSchema(){return new Ve({value:[new Ge({value:this.policyQualifierId}),this.qualifier]})}toJSON(){return{policyQualifierId:this.policyQualifierId,qualifier:this.qualifier.toJSON()}}}class hr{constructor(t={}){this.policyIdentifier=e(t,"policyIdentifier",hr.defaultValues("policyIdentifier")),"policyQualifiers"in t&&(this.policyQualifiers=e(t,"policyQualifiers",hr.defaultValues("policyQualifiers"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"policyIdentifier":return"";case"policyQualifiers":return[];default:throw new Error(`Invalid member name for PolicyInformation class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.policyIdentifier||""}),new Ve({optional:!0,value:[new wt({name:r.policyQualifiers||"",value:cr.schema()})]})]})}fromSchema(e){v(e,["policyIdentifier","policyQualifiers"]);const t=Ct(e,e,hr.schema({names:{policyIdentifier:"policyIdentifier",policyQualifiers:"policyQualifiers"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyInformation");this.policyIdentifier=t.result.policyIdentifier.valueBlock.toString(),"policyQualifiers"in t.result&&(this.policyQualifiers=Array.from(t.result.policyQualifiers,e=>new cr({schema:e})))}toSchema(){const e=[];return e.push(new Ge({value:this.policyIdentifier})),"policyQualifiers"in this&&e.push(new Ve({value:Array.from(this.policyQualifiers,e=>e.toSchema())})),new Ve({value:e})}toJSON(){const e={policyIdentifier:this.policyIdentifier};return"policyQualifiers"in this&&(e.policyQualifiers=Array.from(this.policyQualifiers,e=>e.toJSON())),e}}class ur{constructor(t={}){this.certificatePolicies=e(t,"certificatePolicies",ur.defaultValues("certificatePolicies")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"certificatePolicies":return[];default:throw new Error(`Invalid member name for CertificatePolicies class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.certificatePolicies||"",value:hr.schema()})]})}fromSchema(e){v(e,["certificatePolicies"]);const t=Ct(e,e,ur.schema({names:{certificatePolicies:"certificatePolicies"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CertificatePolicies");this.certificatePolicies=Array.from(t.result.certificatePolicies,e=>new hr({schema:e}))}toSchema(){return new Ve({value:Array.from(this.certificatePolicies,e=>e.toSchema())})}toJSON(){return{certificatePolicies:Array.from(this.certificatePolicies,e=>e.toJSON())}}}class mr{constructor(t={}){this.issuerDomainPolicy=e(t,"issuerDomainPolicy",mr.defaultValues("issuerDomainPolicy")),this.subjectDomainPolicy=e(t,"subjectDomainPolicy",mr.defaultValues("subjectDomainPolicy")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"issuerDomainPolicy":case"subjectDomainPolicy":return"";default:throw new Error(`Invalid member name for PolicyMapping class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.issuerDomainPolicy||""}),new Ge({name:r.subjectDomainPolicy||""})]})}fromSchema(e){v(e,["issuerDomainPolicy","subjectDomainPolicy"]);const t=Ct(e,e,mr.schema({names:{issuerDomainPolicy:"issuerDomainPolicy",subjectDomainPolicy:"subjectDomainPolicy"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyMapping");this.issuerDomainPolicy=t.result.issuerDomainPolicy.valueBlock.toString(),this.subjectDomainPolicy=t.result.subjectDomainPolicy.valueBlock.toString()}toSchema(){return new Ve({value:[new Ge({value:this.issuerDomainPolicy}),new Ge({value:this.subjectDomainPolicy})]})}toJSON(){return{issuerDomainPolicy:this.issuerDomainPolicy,subjectDomainPolicy:this.subjectDomainPolicy}}}class fr{constructor(t={}){this.mappings=e(t,"mappings",fr.defaultValues("mappings")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"mappings":return[];default:throw new Error(`Invalid member name for PolicyMappings class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.mappings||"",value:mr.schema()})]})}fromSchema(e){v(e,["mappings"]);const t=Ct(e,e,fr.schema({names:{mappings:"mappings"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyMappings");this.mappings=Array.from(t.result.mappings,e=>new mr({schema:e}))}toSchema(){return new Ve({value:Array.from(this.mappings,e=>e.toSchema())})}toJSON(){return{mappings:Array.from(this.mappings,e=>e.toJSON())}}}class gr{constructor(t={}){"keyIdentifier"in t&&(this.keyIdentifier=e(t,"keyIdentifier",gr.defaultValues("keyIdentifier"))),"authorityCertIssuer"in t&&(this.authorityCertIssuer=e(t,"authorityCertIssuer",gr.defaultValues("authorityCertIssuer"))),"authorityCertSerialNumber"in t&&(this.authorityCertSerialNumber=e(t,"authorityCertSerialNumber",gr.defaultValues("authorityCertSerialNumber"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"keyIdentifier":return new Ke;case"authorityCertIssuer":return[];case"authorityCertSerialNumber":return new Me;default:throw new Error(`Invalid member name for AuthorityKeyIdentifier class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ee({name:r.keyIdentifier||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new wt({name:r.authorityCertIssuer||"",value:Zt.schema()})]}),new Ee({name:r.authorityCertSerialNumber||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}})]})}fromSchema(e){v(e,["keyIdentifier","authorityCertIssuer","authorityCertSerialNumber"]);const t=Ct(e,e,gr.schema({names:{keyIdentifier:"keyIdentifier",authorityCertIssuer:"authorityCertIssuer",authorityCertSerialNumber:"authorityCertSerialNumber"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AuthorityKeyIdentifier");"keyIdentifier"in t.result&&(this.keyIdentifier=new Ke({valueHex:t.result.keyIdentifier.valueBlock.valueHex})),"authorityCertIssuer"in t.result&&(this.authorityCertIssuer=Array.from(t.result.authorityCertIssuer,e=>new Zt({schema:e}))),"authorityCertSerialNumber"in t.result&&(this.authorityCertSerialNumber=new Me({valueHex:t.result.authorityCertSerialNumber.valueBlock.valueHex}))}toSchema(){const e=[];return"keyIdentifier"in this&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:0},valueHex:this.keyIdentifier.valueBlock.valueHex})),"authorityCertIssuer"in this&&e.push(new Pe({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.authorityCertIssuer,e=>e.toSchema())})),"authorityCertSerialNumber"in this&&e.push(new Ee({idBlock:{tagClass:3,tagNumber:2},valueHex:this.authorityCertSerialNumber.valueBlock.valueHex})),new Ve({value:e})}toJSON(){const e={};return"keyIdentifier"in this&&(e.keyIdentifier=this.keyIdentifier.toJSON()),"authorityCertIssuer"in this&&(e.authorityCertIssuer=Array.from(this.authorityCertIssuer,e=>e.toJSON())),"authorityCertSerialNumber"in this&&(e.authorityCertSerialNumber=this.authorityCertSerialNumber.toJSON()),e}}class dr{constructor(t={}){"requireExplicitPolicy"in t&&(this.requireExplicitPolicy=e(t,"requireExplicitPolicy",dr.defaultValues("requireExplicitPolicy"))),"inhibitPolicyMapping"in t&&(this.inhibitPolicyMapping=e(t,"inhibitPolicyMapping",dr.defaultValues("inhibitPolicyMapping"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"requireExplicitPolicy":case"inhibitPolicyMapping":return 0;default:throw new Error(`Invalid member name for PolicyConstraints class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ee({name:r.requireExplicitPolicy||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new Ee({name:r.inhibitPolicyMapping||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){v(e,["requireExplicitPolicy","inhibitPolicyMapping"]);const t=Ct(e,e,dr.schema({names:{requireExplicitPolicy:"requireExplicitPolicy",inhibitPolicyMapping:"inhibitPolicyMapping"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyConstraints");if("requireExplicitPolicy"in t.result){const e=t.result.requireExplicitPolicy;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const r=St(e.toBER(!1));this.requireExplicitPolicy=r.result.valueBlock.valueDec}if("inhibitPolicyMapping"in t.result){const e=t.result.inhibitPolicyMapping;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const r=St(e.toBER(!1));this.inhibitPolicyMapping=r.result.valueBlock.valueDec}}toSchema(){const e=[];if("requireExplicitPolicy"in this){const t=new Me({value:this.requireExplicitPolicy});t.idBlock.tagClass=3,t.idBlock.tagNumber=0,e.push(t)}if("inhibitPolicyMapping"in this){const t=new Me({value:this.inhibitPolicyMapping});t.idBlock.tagClass=3,t.idBlock.tagNumber=1,e.push(t)}return new Ve({value:e})}toJSON(){const e={};return"requireExplicitPolicy"in this&&(e.requireExplicitPolicy=this.requireExplicitPolicy),"inhibitPolicyMapping"in this&&(e.inhibitPolicyMapping=this.inhibitPolicyMapping),e}}class br{constructor(t={}){this.keyPurposes=e(t,"keyPurposes",br.defaultValues("keyPurposes")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"keyPurposes":return[];default:throw new Error(`Invalid member name for ExtKeyUsage class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.keyPurposes||"",value:new Ge})]})}fromSchema(e){v(e,["keyPurposes"]);const t=Ct(e,e,br.schema({names:{keyPurposes:"keyPurposes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ExtKeyUsage");this.keyPurposes=Array.from(t.result.keyPurposes,e=>e.valueBlock.toString())}toSchema(){return new Ve({value:Array.from(this.keyPurposes,e=>new Ge({value:e}))})}toJSON(){return{keyPurposes:Array.from(this.keyPurposes)}}}class yr{constructor(t={}){this.accessDescriptions=e(t,"accessDescriptions",yr.defaultValues("accessDescriptions")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"accessDescriptions":return[];default:throw new Error(`Invalid member name for InfoAccess class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.accessDescriptions||"",value:zt.schema()})]})}fromSchema(e){v(e,["accessDescriptions"]);const t=Ct(e,e,yr.schema({names:{accessDescriptions:"accessDescriptions"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for InfoAccess");this.accessDescriptions=Array.from(t.result.accessDescriptions,e=>new zt({schema:e}))}toSchema(){return new Ve({value:Array.from(this.accessDescriptions,e=>e.toSchema())})}toJSON(){return{accessDescriptions:Array.from(this.accessDescriptions,e=>e.toJSON())}}}class pr{constructor(e={}){this.clear();for(const t of Object.keys(e))switch(t){case"length":this.length=e.length;break;case"stub":for(let t=0;t<this._view.length;t++)this._view[t]=e.stub;break;case"view":this.fromUint8Array(e.view);break;case"buffer":this.fromArrayBuffer(e.buffer);break;case"string":this.fromString(e.string);break;case"hexstring":this.fromHexString(e.hexstring)}}set buffer(e){this._buffer=e.slice(0),this._view=new Uint8Array(this._buffer)}get buffer(){return this._buffer}set view(e){this._buffer=new ArrayBuffer(e.length),this._view=new Uint8Array(this._buffer),this._view.set(e)}get view(){return this._view}get length(){return this._buffer.byteLength}set length(e){this._buffer=new ArrayBuffer(e),this._view=new Uint8Array(this._buffer)}clear(){this._buffer=new ArrayBuffer(0),this._view=new Uint8Array(this._buffer)}fromArrayBuffer(e){this.buffer=e}fromUint8Array(e){this._buffer=new ArrayBuffer(e.length),this._view=new Uint8Array(this._buffer),this._view.set(e)}fromString(e){const t=e.length;this.length=t;for(let r=0;r<t;r++)this.view[r]=e.charCodeAt(r)}toString(e=0,t=this.view.length-e){let r="";(e>=this.view.length||e<0)&&(e=0),(t>=this.view.length||t<0)&&(t=this.view.length-e);for(let s=e;s<e+t;s++)r+=String.fromCharCode(this.view[s]);return r}fromHexString(e){const t=e.length;this.buffer=new ArrayBuffer(t>>1),this.view=new Uint8Array(this.buffer);const r=new Map;r.set("0",0),r.set("1",1),r.set("2",2),r.set("3",3),r.set("4",4),r.set("5",5),r.set("6",6),r.set("7",7),r.set("8",8),r.set("9",9),r.set("A",10),r.set("a",10),r.set("B",11),r.set("b",11),r.set("C",12),r.set("c",12),r.set("D",13),r.set("d",13),r.set("E",14),r.set("e",14),r.set("F",15),r.set("f",15);let s=0,i=0;for(let n=0;n<t;n++)n%2?(i|=r.get(e.charAt(n)),this.view[s]=i,s++):i=r.get(e.charAt(n))<<4}toHexString(e=0,t=this.view.length-e){let r="";(e>=this.view.length||e<0)&&(e=0),(t>=this.view.length||t<0)&&(t=this.view.length-e);for(let s=e;s<e+t;s++){const e=this.view[s].toString(16).toUpperCase();r=r+(1==e.length?"0":"")+e}return r}copy(e=0,t=this._buffer.byteLength-e){if(0===e&&0===this._buffer.byteLength)return new pr;if(e<0||e>this._buffer.byteLength-1)throw new Error(`Wrong start position: ${e}`);const r=new pr;return r._buffer=this._buffer.slice(e,e+t),r._view=new Uint8Array(r._buffer),r}slice(e=0,t=this._buffer.byteLength){if(0===e&&0===this._buffer.byteLength)return new pr;if(e<0||e>this._buffer.byteLength-1)throw new Error(`Wrong start position: ${e}`);const r=new pr;return r._buffer=this._buffer.slice(e,t),r._view=new Uint8Array(r._buffer),r}realloc(e){const t=new ArrayBuffer(e),r=new Uint8Array(t);e>this._view.length?r.set(this._view):r.set(new Uint8Array(this._buffer,0,e)),this._buffer=t.slice(0),this._view=new Uint8Array(this._buffer)}append(e){const t=this._buffer.byteLength,r=e._buffer.byteLength,s=e._view.slice();this.realloc(t+r),this._view.set(s,t)}insert(e,t=0,r=this._buffer.byteLength-t){return!(t>this._buffer.byteLength-1)&&(r>this._buffer.byteLength-t&&(r=this._buffer.byteLength-t),r>e._buffer.byteLength&&(r=e._buffer.byteLength),r==e._buffer.byteLength?this._view.set(e._view,t):this._view.set(e._view.slice(0,r),t),!0)}isEqual(e){if(this._buffer.byteLength!=e._buffer.byteLength)return!1;for(let t=0;t<e._buffer.byteLength;t++)if(this.view[t]!=e.view[t])return!1;return!0}isEqualView(e){if(e.length!=this.view.length)return!1;for(let t=0;t<e.length;t++)if(this.view[t]!=e[t])return!1;return!0}findPattern(e,t=null,r=null,s=!1){null==t&&(t=s?this.buffer.byteLength:0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),s?(null==r&&(r=t),r>t&&(r=t)):(null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t));const i=e.buffer.byteLength;if(i>r)return-1;const n=[];for(let t=0;t<i;t++)n.push(e.view[t]);for(let e=0;e<=r-i;e++){let r=!0;const a=s?t-i-e:t+e;for(let e=0;e<i;e++)if(this.view[e+a]!=n[e]){r=!1;break}if(r)return s?t-i-e:t+i+e}return-1}findFirstIn(e,t=null,r=null,s=!1){null==t&&(t=s?this.buffer.byteLength:0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),s?(null==r&&(r=t),r>t&&(r=t)):(null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t));const i={id:-1,position:s?0:t+r,length:0};for(let n=0;n<e.length;n++){const a=this.findPattern(e[n],t,r,s);if(-1!=a){let t=!1;const r=e[n].length;s?a-r>=i.position-i.length&&(t=!0):a-r<=i.position-i.length&&(t=!0),t&&(i.position=a,i.id=n,i.length=r)}}return i}findAllIn(e,t=0,r=this.buffer.byteLength-t){const s=[];if(null==t&&(t=0),t>this.buffer.byteLength-1)return s;null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t);let i={id:-1,position:t};for(;;){const t=i.position;if(-1==(i=this.findFirstIn(e,i.position,r)).id)break;r-=i.position-t,s.push({id:i.id,position:i.position})}return s}findAllPatternIn(e,t=0,r=this.buffer.byteLength-t){null==t&&(t=0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t);const s=[],i=e.buffer.byteLength;if(i>r)return-1;const n=Array.from(e.view);for(let e=0;e<=r-i;e++){let r=!0;const a=t+e;for(let e=0;e<i;e++)if(this.view[e+a]!=n[e]){r=!1;break}r&&(s.push(t+i+e),e+=i-1)}return s}findFirstNotIn(e,t=null,r=null,s=!1){null==t&&(t=s?this.buffer.byteLength:0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),s?(null==r&&(r=t),r>t&&(r=t)):(null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t));const i={left:{id:-1,position:t},right:{id:-1,position:0},value:new pr};let n=r;for(;n>0;){if(i.right=this.findFirstIn(e,s?t-r+n:t+r-n,n,s),-1==i.right.id){r=n,s?t-=r:t=i.left.position,i.value=new pr,i.value._buffer=this._buffer.slice(t,t+r),i.value._view=new Uint8Array(i.value._buffer);break}if(i.right.position!=(s?i.left.position-e[i.right.id].buffer.byteLength:i.left.position+e[i.right.id].buffer.byteLength)){s?(t=i.right.position+e[i.right.id].buffer.byteLength,r=i.left.position-i.right.position-e[i.right.id].buffer.byteLength):(t=i.left.position,r=i.right.position-i.left.position-e[i.right.id].buffer.byteLength),i.value=new pr,i.value._buffer=this._buffer.slice(t,t+r),i.value._view=new Uint8Array(i.value._buffer);break}i.left=i.right,n-=e[i.right.id]._buffer.byteLength}if(s){const e=i.right;i.right=i.left,i.left=e}return i}findAllNotIn(e,t=null,r=null){const s=[];if(null==t&&(t=0),t>this.buffer.byteLength-1)return s;null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t);let i={left:{id:-1,position:t},right:{id:-1,position:t},value:new pr};do{const t=i.right.position;r-=(i=this.findFirstNotIn(e,i.right.position,r)).right.position-t,s.push({left:{id:i.left.id,position:i.left.position},right:{id:i.right.id,position:i.right.position},value:i.value})}while(-1!=i.right.id);return s}findFirstSequence(e,t=null,r=null,s=!1){null==t&&(t=s?this.buffer.byteLength:0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),s?(null==r&&(r=t),r>t&&(r=t)):(null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t));const i=this.skipNotPatterns(e,t,r,s);if(-1==i)return{position:-1,value:new pr};const n=this.skipPatterns(e,i,r-(s?t-i:i-t),s);s?(t=n,r=i-n):(t=i,r=n-i);const a=new pr;return a._buffer=this._buffer.slice(t,t+r),a._view=new Uint8Array(a._buffer),{position:n,value:a}}findAllSequences(e,t=null,r=null){const s=[];if(null==t&&(t=0),t>this.buffer.byteLength-1)return s;null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t);let i={position:t,value:new pr};do{const t=i.position;-1!=(i=this.findFirstSequence(e,i.position,r)).position&&(r-=i.position-t,s.push({position:i.position,value:i.value}))}while(-1!=i.position);return s}findPairedPatterns(e,t,r=null,s=null){const i=[];if(e.isEqual(t))return i;if(null==r&&(r=0),r>this.buffer.byteLength-1)return i;null==s&&(s=this.buffer.byteLength-r),s>this.buffer.byteLength-r&&(s=this.buffer.byteLength-r);let n=0;const a=this.findAllPatternIn(e,r,s);if(0==a.length)return i;const o=this.findAllPatternIn(t,r,s);if(0==o.length)return i;for(;n<a.length&&0!=o.length;)if(a[0]!=o[0]){if(a[n]>o[0])break;for(;a[n]<o[0]&&!(++n>=a.length););i.push({left:a[n-1],right:o[0]}),a.splice(n-1,1),o.splice(0,1),n=0}else i.push({left:a[0],right:o[0]}),a.splice(0,1),o.splice(0,1);return i.sort((e,t)=>e.left-t.left),i}findPairedArrays(e,t,r=null,s=null){const i=[];if(null==r&&(r=0),r>this.buffer.byteLength-1)return i;null==s&&(s=this.buffer.byteLength-r),s>this.buffer.byteLength-r&&(s=this.buffer.byteLength-r);let n=0;const a=this.findAllIn(e,r,s);if(0==a.length)return i;const o=this.findAllIn(t,r,s);if(0==o.length)return i;for(;n<a.length&&0!=o.length;)if(a[0].position!=o[0].position){if(a[n].position>o[0].position)break;for(;a[n].position<o[0].position&&!(++n>=a.length););i.push({left:a[n-1],right:o[0]}),a.splice(n-1,1),o.splice(0,1),n=0}else i.push({left:a[0],right:o[0]}),a.splice(0,1),o.splice(0,1);return i.sort((e,t)=>e.left.position-t.left.position),i}replacePattern(e,t,r=null,s=null,i=null){let n,a;const o={status:-1,searchPatternPositions:[],replacePatternPositions:[]};if(null==r&&(r=0),r>this.buffer.byteLength-1)return!1;if(null==s&&(s=this.buffer.byteLength-r),s>this.buffer.byteLength-r&&(s=this.buffer.byteLength-r),null==i){if(0==(n=this.findAllIn([e],r,s)).length)return o}else n=i;o.searchPatternPositions.push(...Array.from(n,e=>e.position));const l=e.buffer.byteLength-t.buffer.byteLength,c=new ArrayBuffer(this.view.length-n.length*l),h=new Uint8Array(c);for(h.set(new Uint8Array(this.buffer,0,r)),a=0;a<n.length;a++){const s=0==a?r:n[a-1].position;h.set(new Uint8Array(this.buffer,s,n[a].position-e.buffer.byteLength-s),s-a*l),h.set(t.view,n[a].position-e.buffer.byteLength-a*l),o.replacePatternPositions.push(n[a].position-e.buffer.byteLength-a*l)}return a--,h.set(new Uint8Array(this.buffer,n[a].position,this.buffer.byteLength-n[a].position),n[a].position-e.buffer.byteLength+t.buffer.byteLength-a*l),this.buffer=c,this.view=new Uint8Array(this.buffer),o.status=1,o}skipPatterns(e,t=null,r=null,s=!1){null==t&&(t=s?this.buffer.byteLength:0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),s?(null==r&&(r=t),r>t&&(r=t)):(null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t));let i=t;for(let n=0;n<e.length;n++){const a=e[n].buffer.byteLength,o=s?i-a:i;let l=!0;for(let t=0;t<a;t++)if(this.view[t+o]!=e[n].view[t]){l=!1;break}if(l)if(n=-1,s){if((i-=a)<=0)return i}else if((i+=a)>=t+r)return i}return i}skipNotPatterns(e,t=null,r=null,s=!1){null==t&&(t=s?this.buffer.byteLength:0),t>this.buffer.byteLength&&(t=this.buffer.byteLength),s?(null==r&&(r=t),r>t&&(r=t)):(null==r&&(r=this.buffer.byteLength-t),r>this.buffer.byteLength-t&&(r=this.buffer.byteLength-t));let i=-1;for(let n=0;n<r;n++){for(let r=0;r<e.length;r++){const a=e[r].buffer.byteLength,o=s?t-n-a:t+n;let l=!0;for(let t=0;t<a;t++)if(this.view[t+o]!=e[r].view[t]){l=!1;break}if(l){i=s?t-n:t+n;break}}if(-1!=i)break}return i}}class vr{constructor(e={}){this.stream=new pr,this._length=0,this.backward=!1,this._start=0,this.appendBlock=0,this.prevLength=0,this.prevStart=0;for(const t of Object.keys(e))switch(t){case"stream":this.stream=e.stream;break;case"backward":this.backward=e.backward,this._start=this.stream.buffer.byteLength;break;case"length":this._length=e.length;break;case"start":this._start=e.start;break;case"appendBlock":this.appendBlock=e.appendBlock;break;case"view":this.stream=new pr({view:e.view});break;case"buffer":this.stream=new pr({buffer:e.buffer});break;case"string":this.stream=new pr({string:e.string});break;case"hexstring":this.stream=new pr({hexstring:e.hexstring})}}set stream(e){this._stream=e,this.prevLength=this._length,this._length=e._buffer.byteLength,this.prevStart=this._start,this._start=0}get stream(){return this._stream}set length(e){this.prevLength=this._length,this._length=e}get length(){return this.appendBlock?this.start:this._length}set start(e){e>this.stream.buffer.byteLength||(this.prevStart=this._start,this.prevLength=this._length,this._length-=this.backward?this._start-e:e-this._start,this._start=e)}get start(){return this._start}get buffer(){return this._stream._buffer.slice(0,this._length)}resetPosition(){this._start=this.prevStart,this._length=this.prevLength}findPattern(e,t=null){(null==t||t>this.length)&&(t=this.length);const r=this.stream.findPattern(e,this.start,this.length,this.backward);if(-1==r)return r;if(this.backward){if(r<this.start-e.buffer.byteLength-t)return-1}else if(r>this.start+e.buffer.byteLength+t)return-1;return this.start=r,r}findFirstIn(e,t=null){(null==t||t>this.length)&&(t=this.length);const r=this.stream.findFirstIn(e,this.start,this.length,this.backward);if(-1==r.id)return r;if(this.backward){if(r.position<this.start-e[r.id].buffer.byteLength-t)return{id:-1,position:this.backward?0:this.start+this.length}}else if(r.position>this.start+e[r.id].buffer.byteLength+t)return{id:-1,position:this.backward?0:this.start+this.length};return this.start=r.position,r}findAllIn(e){const t=this.backward?this.start-this.length:this.start;return this.stream.findAllIn(e,t,this.length)}findFirstNotIn(e,t=null){(null==t||t>this._length)&&(t=this._length);const r=this._stream.findFirstNotIn(e,this._start,this._length,this.backward);if(-1==r.left.id&&-1==r.right.id)return r;if(this.backward){if(-1!=r.right.id&&r.right.position<this._start-e[r.right.id]._buffer.byteLength-t)return{left:{id:-1,position:this._start},right:{id:-1,position:0},value:new pr}}else if(-1!=r.left.id&&r.left.position>this._start+e[r.left.id]._buffer.byteLength+t)return{left:{id:-1,position:this._start},right:{id:-1,position:0},value:new pr};return this.backward?-1==r.left.id?this.start=0:this.start=r.left.position:-1==r.right.id?this.start=this._start+this._length:this.start=r.right.position,r}findAllNotIn(e){const t=this.backward?this._start-this._length:this._start;return this._stream.findAllNotIn(e,t,this._length)}findFirstSequence(e,t=null,r=null){(null==t||t>this._length)&&(t=this._length),(null==r||r>t)&&(r=t);const s=this._stream.findFirstSequence(e,this._start,t,this.backward);if(0==s.value.buffer.byteLength)return s;if(this.backward){if(s.position<this._start-s.value._buffer.byteLength-r)return{position:-1,value:new pr}}else if(s.position>this._start+s.value._buffer.byteLength+r)return{position:-1,value:new pr};return this.start=s.position,s}findAllSequences(e){const t=this.backward?this.start-this.length:this.start;return this.stream.findAllSequences(e,t,this.length)}findPairedPatterns(e,t,r=null){(null==r||r>this.length)&&(r=this.length);const s=this.backward?this.start-this.length:this.start,i=this.stream.findPairedPatterns(e,t,s,this.length);if(i.length)if(this.backward){if(i[0].right<this.start-t.buffer.byteLength-r)return[]}else if(i[0].left>this.start+e.buffer.byteLength+r)return[];return i}findPairedArrays(e,t,r=null){(null==r||r>this.length)&&(r=this.length);const s=this.backward?this.start-this.length:this.start,i=this.stream.findPairedArrays(e,t,s,this.length);if(i.length)if(this.backward){if(i[0].right.position<this.start-t[i[0].right.id].buffer.byteLength-r)return[]}else if(i[0].left.position>this.start+e[i[0].left.id].buffer.byteLength+r)return[];return i}replacePattern(e,t){const r=this.backward?this.start-this.length:this.start;return this.stream.replacePattern(e,t,r,this.length)}skipPatterns(e){const t=this.stream.skipPatterns(e,this.start,this.length,this.backward);return this.start=t,t}skipNotPatterns(e){const t=this.stream.skipNotPatterns(e,this.start,this.length,this.backward);return-1==t?-1:(this.start=t,t)}append(e){this._start+e._buffer.byteLength>this._stream._buffer.byteLength&&(e._buffer.byteLength>this.appendBlock&&(this.appendBlock=e._buffer.byteLength+1e3),this._stream.realloc(this._stream._buffer.byteLength+this.appendBlock)),this._stream._view.set(e._view,this._start),this._length+=2*e._buffer.byteLength,this.start=this._start+e._buffer.byteLength,this.prevLength-=2*e._buffer.byteLength}appendView(e){this._start+e.length>this._stream._buffer.byteLength&&(e.length>this.appendBlock&&(this.appendBlock=e.length+1e3),this._stream.realloc(this._stream._buffer.byteLength+this.appendBlock)),this._stream._view.set(e,this._start),this._length+=2*e.length,this.start=this._start+e.length,this.prevLength-=2*e.length}appendChar(e){this._start+1>this._stream._buffer.byteLength&&(1>this.appendBlock&&(this.appendBlock=1e3),this._stream.realloc(this._stream._buffer.byteLength+this.appendBlock)),this._stream._view[this._start]=e,this._length+=2,this.start=this._start+1,this.prevLength-=2}appendUint16(e){this._start+2>this._stream._buffer.byteLength&&(2>this.appendBlock&&(this.appendBlock=1e3),this._stream.realloc(this._stream._buffer.byteLength+this.appendBlock));const t=new Uint16Array([e]),r=new Uint8Array(t.buffer);this._stream._view[this._start]=r[1],this._stream._view[this._start+1]=r[0],this._length+=4,this.start=this._start+2,this.prevLength-=4}appendUint24(e){this._start+3>this._stream._buffer.byteLength&&(3>this.appendBlock&&(this.appendBlock=1e3),this._stream.realloc(this._stream._buffer.byteLength+this.appendBlock));const t=new Uint32Array([e]),r=new Uint8Array(t.buffer);this._stream._view[this._start]=r[2],this._stream._view[this._start+1]=r[1],this._stream._view[this._start+2]=r[0],this._length+=6,this.start=this._start+3,this.prevLength-=6}appendUint32(e){this._start+4>this._stream._buffer.byteLength&&(4>this.appendBlock&&(this.appendBlock=1e3),this._stream.realloc(this._stream._buffer.byteLength+this.appendBlock));const t=new Uint32Array([e]),r=new Uint8Array(t.buffer);this._stream._view[this._start]=r[3],this._stream._view[this._start+1]=r[2],this._stream._view[this._start+2]=r[1],this._stream._view[this._start+3]=r[0],this._length+=8,this.start=this._start+4,this.prevLength-=8}getBlock(e,t=!0){if(this._length<=0)return[];let r;if(this._length<e&&(e=this._length),this.backward){const t=this._stream._buffer.slice(this._length-e,this._length),s=new Uint8Array(t);r=new Array(e);for(let t=0;t<e;t++)r[e-1-t]=s[t]}else{const t=this._stream._buffer.slice(this._start,this._start+e);r=Array.from(new Uint8Array(t))}return t&&(this.start+=this.backward?-1*e:e),r}getUint16(e=!0){const t=this.getBlock(2,e);if(t.length<2)return 0;const r=new Uint16Array(1),s=new Uint8Array(r.buffer);return s[0]=t[1],s[1]=t[0],r[0]}getUint24(e=!0){const t=this.getBlock(3,e);if(t.length<3)return 0;const r=new Uint32Array(1),s=new Uint8Array(r.buffer);for(let e=3;e>=1;e--)s[3-e]=t[e-1];return r[0]}getUint32(e=!0){const t=this.getBlock(4,e);if(t.length<4)return 0;const r=new Uint32Array(1),s=new Uint8Array(r.buffer);for(let e=3;e>=0;e--)s[3-e]=t[e];return r[0]}}class kr{constructor(t={}){this.version=e(t,"version",kr.defaultValues("version")),this.logID=e(t,"logID",kr.defaultValues("logID")),this.timestamp=e(t,"timestamp",kr.defaultValues("timestamp")),this.extensions=e(t,"extensions",kr.defaultValues("extensions")),this.hashAlgorithm=e(t,"hashAlgorithm",kr.defaultValues("hashAlgorithm")),this.signatureAlgorithm=e(t,"signatureAlgorithm",kr.defaultValues("signatureAlgorithm")),this.signature=e(t,"signature",kr.defaultValues("signature")),"schema"in t&&this.fromSchema(t.schema),"stream"in t&&this.fromStream(t.stream)}static defaultValues(e){switch(e){case"version":return 0;case"logID":case"extensions":return new ArrayBuffer(0);case"timestamp":return new Date(0);case"hashAlgorithm":case"signatureAlgorithm":return"";case"signature":return new kt;default:throw new Error(`Invalid member name for SignedCertificateTimestamp class: ${e}`)}}fromSchema(e){if(e instanceof Bt==!1)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestamp");const t=new vr({stream:new pr({buffer:e.data})});this.fromStream(t)}fromStream(e){const t=e.getUint16();if(this.version=e.getBlock(1)[0],0===this.version){this.logID=new Uint8Array(e.getBlock(32)).buffer.slice(0),this.timestamp=new Date(s(new Uint8Array(e.getBlock(8)),8));const r=e.getUint16();switch(this.extensions=new Uint8Array(e.getBlock(r)).buffer.slice(0),e.getBlock(1)[0]){case 0:this.hashAlgorithm="none";break;case 1:this.hashAlgorithm="md5";break;case 2:this.hashAlgorithm="sha1";break;case 3:this.hashAlgorithm="sha224";break;case 4:this.hashAlgorithm="sha256";break;case 5:this.hashAlgorithm="sha384";break;case 6:this.hashAlgorithm="sha512";break;default:throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}switch(e.getBlock(1)[0]){case 0:this.signatureAlgorithm="anonymous";break;case 1:this.signatureAlgorithm="rsa";break;case 2:this.signatureAlgorithm="dsa";break;case 3:this.signatureAlgorithm="ecdsa";break;default:throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}const i=e.getUint16(),n=St(new Uint8Array(e.getBlock(i)).buffer.slice(0));if(-1===n.offset)throw new Error("Object's stream was not correct for SignedCertificateTimestamp");if(this.signature=n.result,t!==47+r+i)throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}}toSchema(){const e=this.toStream();return new Bt({data:e.stream.buffer})}toStream(){const e=new vr;e.appendUint16(47+this.extensions.byteLength+this.signature.valueBeforeDecode.byteLength),e.appendChar(this.version),e.appendView(new Uint8Array(this.logID));const t=new ArrayBuffer(8),r=new Uint8Array(t),s=i(this.timestamp.valueOf(),8);let n,a;switch(r.set(new Uint8Array(s),8-s.byteLength),e.appendView(r),e.appendUint16(this.extensions.byteLength),this.extensions.byteLength&&e.appendView(new Uint8Array(this.extensions)),this.hashAlgorithm.toLowerCase()){case"none":n=0;break;case"md5":n=1;break;case"sha1":n=2;break;case"sha224":n=3;break;case"sha256":n=4;break;case"sha384":n=5;break;case"sha512":n=6;break;default:throw new Error(`Incorrect data for hashAlgorithm: ${this.hashAlgorithm}`)}switch(e.appendChar(n),this.signatureAlgorithm.toLowerCase()){case"anonymous":a=0;break;case"rsa":a=1;break;case"dsa":a=2;break;case"ecdsa":a=3;break;default:throw new Error(`Incorrect data for signatureAlgorithm: ${this.signatureAlgorithm}`)}e.appendChar(a);const o=this.signature.toBER(!1);return e.appendUint16(o.byteLength),e.appendView(new Uint8Array(o)),e}toJSON(){return{version:this.version,logID:t(this.logID),timestamp:this.timestamp,extensions:t(this.extensions),hashAlgorithm:this.hashAlgorithm,signatureAlgorithm:this.signatureAlgorithm,signature:this.signature.toJSON()}}async verify(e,t,r=0){let s,n=f(d(this.logID)),a=null,o=new vr;for(const t of e)if(t.log_id===n){a=t.key;break}if(null===a)throw new Error(`Public key not found for CT with logId: ${n}`);const l=St(b(g(a)));if(-1===l.offset)throw new Error(`Incorrect key value for CT Log with logId: ${n}`);s=new Et({schema:l.result}),o.appendChar(0),o.appendChar(0);const c=new ArrayBuffer(8),h=new Uint8Array(c),u=i(this.timestamp.valueOf(),8);return h.set(new Uint8Array(u),8-u.byteLength),o.appendView(h),o.appendUint16(r),0===r&&o.appendUint24(t.byteLength),o.appendView(new Uint8Array(t)),o.appendUint16(this.extensions.byteLength),0!==this.extensions.byteLength&&o.appendView(new Uint8Array(this.extensions)),Tt().subtle.verifyWithPublicKey(o._stream._buffer.slice(0,o._length),{valueBlock:{valueHex:this.signature.toBER(!1)}},s,{algorithmId:""},"SHA-256")}}class wr{constructor(t={}){this.timestamps=e(t,"timestamps",wr.defaultValues("timestamps")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"timestamps":return[];default:throw new Error(`Invalid member name for SignedCertificateTimestampList class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"timestamps":return 0===t.length;default:throw new Error(`Invalid member name for SignedCertificateTimestampList class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return"optional"in r==!1&&(r.optional=!1),new Ke({name:r.blockName||"SignedCertificateTimestampList",optional:r.optional})}fromSchema(e){if(e instanceof Ke==!1)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestampList");const t=new vr({stream:new pr({buffer:e.valueBlock.valueHex})});if(t.getUint16()!==t.length)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestampList");for(;t.length;)this.timestamps.push(new kr({stream:t}))}toSchema(){const e=new vr;let t=0;const r=[];for(const e of this.timestamps){const s=e.toStream();r.push(s),t+=s.stream.buffer.byteLength}e.appendUint16(t);for(const t of r)e.appendView(t.stream.view);return new Ke({valueHex:e.stream.buffer.slice(0)})}toJSON(){return{timestamps:Array.from(this.timestamps,e=>e.toJSON())}}}class Br{constructor(t={}){this.templateID=e(t,"templateID",Br.defaultValues("templateID")),"templateMajorVersion"in t&&(this.templateMajorVersion=e(t,"templateMajorVersion",Br.defaultValues("templateMajorVersion"))),"templateMinorVersion"in t&&(this.templateMinorVersion=e(t,"templateMinorVersion",Br.defaultValues("templateMinorVersion"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"templateID":return"";case"templateMajorVersion":case"templateMinorVersion":return 0;default:throw new Error(`Invalid member name for CertificateTemplate class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.templateID||""}),new Me({name:r.templateMajorVersion||"",optional:!0}),new Me({name:r.templateMinorVersion||"",optional:!0})]})}fromSchema(e){v(e,["templateID","templateMajorVersion","templateMinorVersion"]);let t=Ct(e,e,Br.schema({names:{templateID:"templateID",templateMajorVersion:"templateMajorVersion",templateMinorVersion:"templateMinorVersion"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CertificateTemplate");this.templateID=t.result.templateID.valueBlock.toString(),"templateMajorVersion"in t.result&&(this.templateMajorVersion=t.result.templateMajorVersion.valueBlock.valueDec),"templateMinorVersion"in t.result&&(this.templateMinorVersion=t.result.templateMinorVersion.valueBlock.valueDec)}toSchema(){const e=[];return e.push(new Ge({value:this.templateID})),"templateMajorVersion"in this&&e.push(new Me({value:this.templateMajorVersion})),"templateMinorVersion"in this&&e.push(new Me({value:this.templateMinorVersion})),new Ve({value:e})}toJSON(){const e={extnID:this.templateID};return"templateMajorVersion"in this&&(e.templateMajorVersion=this.templateMajorVersion),"templateMinorVersion"in this&&(e.templateMinorVersion=this.templateMinorVersion),e}}class Ar{constructor(t={}){this.certificateIndex=e(t,"certificateIndex",Ar.defaultValues("certificateIndex")),this.keyIndex=e(t,"keyIndex",Ar.defaultValues("keyIndex")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"certificateIndex":case"keyIndex":return 0;default:throw new Error(`Invalid member name for CAVersion class: ${e}`)}}static schema(e={}){return new Me}fromSchema(e){if(e.constructor.blockName()!==Me.blockName())throw new Error("Object's schema was not verified against input data for CAVersion");let t=e.valueBlock.valueHex.slice(0);const r=new Uint8Array(t);switch(!0){case t.byteLength<4:{const e=new ArrayBuffer(4);new Uint8Array(e).set(r,4-t.byteLength),t=e.slice(0)}break;case t.byteLength>4:{const e=new ArrayBuffer(4);new Uint8Array(e).set(r.slice(0,4)),t=e.slice(0)}}const s=t.slice(0,2),i=new Uint8Array(s);let n=i[0];i[0]=i[1],i[1]=n;const a=new Uint16Array(s);this.keyIndex=a[0];const o=t.slice(2),l=new Uint8Array(o);n=l[0],l[0]=l[1],l[1]=n;const c=new Uint16Array(o);this.certificateIndex=c[0]}toSchema(){const e=new ArrayBuffer(2);new Uint16Array(e)[0]=this.certificateIndex;const t=new Uint8Array(e);let r=t[0];t[0]=t[1],t[1]=r;const s=new ArrayBuffer(2);new Uint16Array(s)[0]=this.keyIndex;const i=new Uint8Array(s);return r=i[0],i[0]=i[1],i[1]=r,new Me({valueHex:n(s,e)})}toJSON(){return{certificateIndex:this.certificateIndex,keyIndex:this.keyIndex}}}class Sr{constructor(t={}){this.id=e(t,"id",Sr.defaultValues("id")),"type"in t&&(this.type=e(t,"type",Sr.defaultValues("type"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"id":return"";case"type":return new je;default:throw new Error(`Invalid member name for QCStatement class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"id":return""===t;case"type":return t instanceof je;default:throw new Error(`Invalid member name for QCStatement class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.id||""}),new kt({name:r.type||"",optional:!0})]})}fromSchema(e){v(e,["id","type"]);const t=Ct(e,e,Sr.schema({names:{id:"id",type:"type"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for QCStatement");this.id=t.result.id.valueBlock.toString(),"type"in t.result&&(this.type=t.result.type)}toSchema(){const e=[new Ge({value:this.id})];return"type"in this&&e.push(this.type),new Ve({value:e})}toJSON(){const e={id:this.id};return"type"in this&&(e.type=this.type.toJSON()),e}}class Cr{constructor(t={}){this.values=e(t,"values",Cr.defaultValues("values")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"values":return[];default:throw new Error(`Invalid member name for QCStatements class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"values":return 0===t.length;default:throw new Error(`Invalid member name for QCStatements class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new wt({name:r.values||"",value:Sr.schema(r.value||{})})]})}fromSchema(e){v(e,["values"]);const t=Ct(e,e,Cr.schema({names:{values:"values"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for QCStatements");this.values=Array.from(t.result.values,e=>new Sr({schema:e}))}toSchema(){return new Ve({value:Array.from(this.values,e=>e.toSchema())})}toJSON(){return{extensions:Array.from(this.values,e=>e.toJSON())}}}class xr{constructor(t={}){this.extnID=e(t,"extnID",xr.defaultValues("extnID")),this.critical=e(t,"critical",xr.defaultValues("critical")),this.extnValue="extnValue"in t?new Ke({valueHex:t.extnValue}):xr.defaultValues("extnValue"),"parsedValue"in t&&(this.parsedValue=e(t,"parsedValue",xr.defaultValues("parsedValue"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"extnID":return"";case"critical":return!1;case"extnValue":return new Ke;case"parsedValue":return{};default:throw new Error(`Invalid member name for Extension class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[new Ge({name:r.extnID||""}),new De({name:r.critical||"",optional:!0}),new Ke({name:r.extnValue||""})]})}fromSchema(e){v(e,["extnID","critical","extnValue"]);let t=Ct(e,e,xr.schema({names:{extnID:"extnID",critical:"critical",extnValue:"extnValue"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Extension");if(this.extnID=t.result.extnID.valueBlock.toString(),"critical"in t.result&&(this.critical=t.result.critical.valueBlock.value),this.extnValue=t.result.extnValue,-1!==(t=St(this.extnValue.valueBlock.valueHex)).offset)switch(this.extnID){case"2.5.29.9":try{this.parsedValue=new er({schema:t.result})}catch(e){this.parsedValue=new er,this.parsedValue.parsingError="Incorrectly formated SubjectDirectoryAttributes"}break;case"2.5.29.14":case"2.5.29.15":this.parsedValue=t.result;break;case"2.5.29.16":try{this.parsedValue=new tr({schema:t.result})}catch(e){this.parsedValue=new tr,this.parsedValue.parsingError="Incorrectly formated PrivateKeyUsagePeriod"}break;case"2.5.29.17":case"2.5.29.18":try{this.parsedValue=new Yt({schema:t.result})}catch(e){this.parsedValue=new Yt,this.parsedValue.parsingError="Incorrectly formated AltName"}break;case"2.5.29.19":try{this.parsedValue=new rr({schema:t.result})}catch(e){this.parsedValue=new rr,this.parsedValue.parsingError="Incorrectly formated BasicConstraints"}break;case"2.5.29.20":case"2.5.29.27":case"2.5.29.21":case"2.5.29.24":this.parsedValue=t.result;break;case"2.5.29.28":try{this.parsedValue=new sr({schema:t.result})}catch(e){this.parsedValue=new sr,this.parsedValue.parsingError="Incorrectly formated IssuingDistributionPoint"}break;case"2.5.29.29":try{this.parsedValue=new ir({schema:t.result})}catch(e){this.parsedValue=new ir,this.parsedValue.parsingError="Incorrectly formated GeneralNames"}break;case"2.5.29.30":try{this.parsedValue=new ar({schema:t.result})}catch(e){this.parsedValue=new ar,this.parsedValue.parsingError="Incorrectly formated NameConstraints"}break;case"2.5.29.31":case"2.5.29.46":try{this.parsedValue=new lr({schema:t.result})}catch(e){this.parsedValue=new lr,this.parsedValue.parsingError="Incorrectly formated CRLDistributionPoints"}break;case"2.5.29.32":case"1.3.6.1.4.1.311.21.10":try{this.parsedValue=new ur({schema:t.result})}catch(e){this.parsedValue=new ur,this.parsedValue.parsingError="Incorrectly formated CertificatePolicies"}break;case"2.5.29.33":try{this.parsedValue=new fr({schema:t.result})}catch(e){this.parsedValue=new fr,this.parsedValue.parsingError="Incorrectly formated CertificatePolicies"}break;case"2.5.29.35":try{this.parsedValue=new gr({schema:t.result})}catch(e){this.parsedValue=new gr,this.parsedValue.parsingError="Incorrectly formated AuthorityKeyIdentifier"}break;case"2.5.29.36":try{this.parsedValue=new dr({schema:t.result})}catch(e){this.parsedValue=new dr,this.parsedValue.parsingError="Incorrectly formated PolicyConstraints"}break;case"2.5.29.37":try{this.parsedValue=new br({schema:t.result})}catch(e){this.parsedValue=new br,this.parsedValue.parsingError="Incorrectly formated ExtKeyUsage"}break;case"2.5.29.54":this.parsedValue=t.result;break;case"1.3.6.1.5.5.7.1.1":case"1.3.6.1.5.5.7.1.11":try{this.parsedValue=new yr({schema:t.result})}catch(e){this.parsedValue=new yr,this.parsedValue.parsingError="Incorrectly formated InfoAccess"}break;case"1.3.6.1.4.1.11129.2.4.2":try{this.parsedValue=new wr({schema:t.result})}catch(e){this.parsedValue=new wr,this.parsedValue.parsingError="Incorrectly formated SignedCertificateTimestampList"}break;case"1.3.6.1.4.1.311.20.2":case"1.3.6.1.4.1.311.21.2":this.parsedValue=t.result;break;case"1.3.6.1.4.1.311.21.7":try{this.parsedValue=new Br({schema:t.result})}catch(e){this.parsedValue=new Br,this.parsedValue.parsingError="Incorrectly formated CertificateTemplate"}break;case"1.3.6.1.4.1.311.21.1":try{this.parsedValue=new Ar({schema:t.result})}catch(e){this.parsedValue=new Ar,this.parsedValue.parsingError="Incorrectly formated CAVersion"}break;case"1.3.6.1.5.5.7.1.3":try{this.parsedValue=new Cr({schema:t.result})}catch(e){this.parsedValue=new Cr,this.parsedValue.parsingError="Incorrectly formated QCStatements"}}}toSchema(){const e=[];return e.push(new Ge({value:this.extnID})),this.critical!==xr.defaultValues("critical")&&e.push(new De({value:this.critical})),e.push(this.extnValue),new Ve({value:e})}toJSON(){const e={extnID:this.extnID,extnValue:this.extnValue.toJSON()};return this.critical!==xr.defaultValues("critical")&&(e.critical=this.critical),"parsedValue"in this&&"toJSON"in this.parsedValue&&(e.parsedValue=this.parsedValue.toJSON()),e}}class Nr{constructor(t={}){this.extensions=e(t,"extensions",Nr.defaultValues("extensions")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"extensions":return[];default:throw new Error(`Invalid member name for Extensions class: ${e}`)}}static schema(t={},r=!1){const s=e(t,"names",{});return new Ve({optional:r,name:s.blockName||"",value:[new wt({name:s.extensions||"",value:xr.schema(s.extension||{})})]})}fromSchema(e){v(e,["extensions"]);const t=Ct(e,e,Nr.schema({names:{extensions:"extensions"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Extensions");this.extensions=Array.from(t.result.extensions,e=>new xr({schema:e}))}toSchema(){return new Ve({value:Array.from(this.extensions,e=>e.toSchema())})}toJSON(){return{extensions:Array.from(this.extensions,e=>e.toJSON())}}}function Lr(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"tbsCertificate",value:[new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Me({name:r.tbsCertificateVersion||"tbsCertificate.version"})]}),new Me({name:r.tbsCertificateSerialNumber||"tbsCertificate.serialNumber"}),xt.schema(r.signature||{names:{blockName:"tbsCertificate.signature"}}),qt.schema(r.issuer||{names:{blockName:"tbsCertificate.issuer"}}),new Ve({name:r.tbsCertificateValidity||"tbsCertificate.validity",value:[Xt.schema(r.notBefore||{names:{utcTimeName:"tbsCertificate.notBefore",generalTimeName:"tbsCertificate.notBefore"}}),Xt.schema(r.notAfter||{names:{utcTimeName:"tbsCertificate.notAfter",generalTimeName:"tbsCertificate.notAfter"}})]}),qt.schema(r.subject||{names:{blockName:"tbsCertificate.subject"}}),Et.schema(r.subjectPublicKeyInfo||{names:{blockName:"tbsCertificate.subjectPublicKeyInfo"}}),new Ee({name:r.tbsCertificateIssuerUniqueID||"tbsCertificate.issuerUniqueID",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new Ee({name:r.tbsCertificateSubjectUniqueID||"tbsCertificate.subjectUniqueID",optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:3},value:[Nr.schema(r.extensions||{names:{blockName:"tbsCertificate.extensions"}})]})]})}class Er{constructor(t={}){this.tbs=e(t,"tbs",Er.defaultValues("tbs")),this.version=e(t,"version",Er.defaultValues("version")),this.serialNumber=e(t,"serialNumber",Er.defaultValues("serialNumber")),this.signature=e(t,"signature",Er.defaultValues("signature")),this.issuer=e(t,"issuer",Er.defaultValues("issuer")),this.notBefore=e(t,"notBefore",Er.defaultValues("notBefore")),this.notAfter=e(t,"notAfter",Er.defaultValues("notAfter")),this.subject=e(t,"subject",Er.defaultValues("subject")),this.subjectPublicKeyInfo=e(t,"subjectPublicKeyInfo",Er.defaultValues("subjectPublicKeyInfo")),"issuerUniqueID"in t&&(this.issuerUniqueID=e(t,"issuerUniqueID",Er.defaultValues("issuerUniqueID"))),"subjectUniqueID"in t&&(this.subjectUniqueID=e(t,"subjectUniqueID",Er.defaultValues("subjectUniqueID"))),"extensions"in t&&(this.extensions=e(t,"extensions",Er.defaultValues("extensions"))),this.signatureAlgorithm=e(t,"signatureAlgorithm",Er.defaultValues("signatureAlgorithm")),this.signatureValue=e(t,"signatureValue",Er.defaultValues("signatureValue")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"tbs":return new ArrayBuffer(0);case"version":return 0;case"serialNumber":return new Me;case"signature":return new xt;case"issuer":return new qt;case"notBefore":case"notAfter":return new Xt;case"subject":return new qt;case"subjectPublicKeyInfo":return new Et;case"issuerUniqueID":case"subjectUniqueID":return new ArrayBuffer(0);case"extensions":return[];case"signatureAlgorithm":return new xt;case"signatureValue":return new Te;default:throw new Error(`Invalid member name for Certificate class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Ve({name:r.blockName||"",value:[Lr(r.tbsCertificate),xt.schema(r.signatureAlgorithm||{names:{blockName:"signatureAlgorithm"}}),new Te({name:r.signatureValue||"signatureValue"})]})}fromSchema(e){v(e,["tbsCertificate","tbsCertificate.extensions","tbsCertificate.version","tbsCertificate.serialNumber","tbsCertificate.signature","tbsCertificate.issuer","tbsCertificate.notBefore","tbsCertificate.notAfter","tbsCertificate.subject","tbsCertificate.subjectPublicKeyInfo","tbsCertificate.issuerUniqueID","tbsCertificate.subjectUniqueID","signatureAlgorithm","signatureValue"]);const t=Ct(e,e,Er.schema({names:{tbsCertificate:{names:{extensions:{names:{extensions:"tbsCertificate.extensions"}}}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Certificate");this.tbs=t.result.tbsCertificate.valueBeforeDecode,"tbsCertificate.version"in t.result&&(this.version=t.result["tbsCertificate.version"].valueBlock.valueDec),this.serialNumber=t.result["tbsCertificate.serialNumber"],this.signature=new xt({schema:t.result["tbsCertificate.signature"]}),this.issuer=new qt({schema:t.result["tbsCertificate.issuer"]}),this.notBefore=new Xt({schema:t.result["tbsCertificate.notBefore"]}),this.notAfter=new Xt({schema:t.result["tbsCertificate.notAfter"]}),this.subject=new qt({schema:t.result["tbsCertificate.subject"]}),this.subjectPublicKeyInfo=new Et({schema:t.result["tbsCertificate.subjectPublicKeyInfo"]}),"tbsCertificate.issuerUniqueID"in t.result&&(this.issuerUniqueID=t.result["tbsCertificate.issuerUniqueID"].valueBlock.valueHex),"tbsCertificate.subjectUniqueID"in t.result&&(this.subjectUniqueID=t.result["tbsCertificate.subjectUniqueID"].valueBlock.valueHex),"tbsCertificate.extensions"in t.result&&(this.extensions=Array.from(t.result["tbsCertificate.extensions"],e=>new xr({schema:e}))),this.signatureAlgorithm=new xt({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}encodeTBS(){const e=[];return"version"in this&&this.version!==Er.defaultValues("version")&&e.push(new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Me({value:this.version})]})),e.push(this.serialNumber),e.push(this.signature.toSchema()),e.push(this.issuer.toSchema()),e.push(new Ve({value:[this.notBefore.toSchema(),this.notAfter.toSchema()]})),e.push(this.subject.toSchema()),e.push(this.subjectPublicKeyInfo.toSchema()),"issuerUniqueID"in this&&e.push(new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:1},valueHex:this.issuerUniqueID})),"subjectUniqueID"in this&&e.push(new Ee({optional:!0,idBlock:{tagClass:3,tagNumber:2},valueHex:this.subjectUniqueID})),"extensions"in this&&e.push(new Pe({optional:!0,idBlock:{tagClass:3,tagNumber:3},value:[new Ve({value:Array.from(this.extensions,e=>e.toSchema())})]})),new Ve({value:e})}toSchema(e=!1){let t={};if(!1===e){if(0===this.tbs.length)return Er.schema().value[0];t=St(this.tbs).result}else t=this.encodeTBS();return new Ve({value:[t,this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){const e={tbs:t(this.tbs,0,this.tbs.byteLength),serialNumber:this.serialNumber.toJSON(),signature:this.signature.toJSON(),issuer:this.issuer.toJSON(),notBefore:this.notBefore.toJSON(),notAfter:this.notAfter.toJSON(),subject:this.subject.toJSON(),subjectPublicKeyInfo:this.subjectPublicKeyInfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()};return"version"in this&&this.version!==Er.defaultValues("version")&&(e.version=this.version),"issuerUniqueID"in this&&(e.issuerUniqueID=t(this.issuerUniqueID,0,this.issuerUniqueID.byteLength)),"subjectUniqueID"in this&&(e.subjectUniqueID=t(this.subjectUniqueID,0,this.subjectUniqueID.byteLength)),"extensions"in this&&(e.extensions=Array.from(this.extensions,e=>e.toJSON())),e}getPublicKey(e=null){return Tt().subtle.getPublicKey(this.subjectPublicKeyInfo,this.signatureAlgorithm,e)}getKeyHash(e="SHA-1"){const t=Ft();return void 0===t?Promise.reject("Unable to create WebCrypto object"):t.digest({name:e},new Uint8Array(this.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHex))}sign(e,t="SHA-1"){if(void 0===e)return Promise.reject("Need to provide a private key for signing");let r,s=Promise.resolve();const i=Tt();return s=(s=(s=(s=(s=s.then(()=>i.subtle.getSignatureParameters(e,t))).then(e=>{r=e.parameters,this.signature=e.signatureAlgorithm,this.signatureAlgorithm=e.signatureAlgorithm})).then(()=>{this.tbs=this.encodeTBS().toBER(!1)})).then(()=>i.subtle.signWithPrivateKey(this.tbs,e,r))).then(e=>{this.signatureValue=new Te({valueHex:e})})}verify(e=null){let t={};return null!==e?t=e.subjectPublicKeyInfo:this.issuer.isEqual(this.subject)&&(t=this.subjectPublicKeyInfo),t instanceof Et==!1?Promise.reject("Please provide issuer certificate as a parameter"):Tt().subtle.verifyWithPublicKey(this.tbs,this.signatureValue,t,this.signatureAlgorithm)}}const Ir=/[^\0-\x7E]/,Pr=/[\x2E\u3002\uFF0E\uFF61]/g,Hr={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},Or=Math.floor,Ur=String.fromCharCode;function Dr(e){throw new RangeError(Hr[e])}const Vr=function(e,t){return e+22+75*(e<26)-((0!=t)<<5)},Rr=function(e,t,r){let s=0;for(e=r?Or(e/700):e>>1,e+=Or(e/t);e>455;s+=36)e=Or(e/35);return Or(s+36*e/(e+38))},jr={fromBER:function(e){if(0===e.byteLength){const e=new N({},Object);return e.error="Input buffer has zero length",{offset:-1,result:e}}return ve(e,0,e.byteLength)}},_r={Certificate:Er,ECPublicKey:Nt,RSAPublicKey:Lt},Kr={toASCII:function(e){return function(e,t){const r=e.split("@");let s="";r.length>1&&(s=r[0]+"@",e=r[1]);const i=function(e,t){const r=[];let s=e.length;for(;s--;)r[s]=t(e[s]);return r}((e=e.replace(Pr,".")).split("."),t).join(".");return s+i}(e,function(e){return Ir.test(e)?"xn--"+function(e){const t=[];let r=(e=function(e){const t=[];let r=0;const s=e.length;for(;r<s;){const i=e.charCodeAt(r++);if(i>=55296&&i<=56319&&r<s){const s=e.charCodeAt(r++);56320==(64512&s)?t.push(((1023&i)<<10)+(1023&s)+65536):(t.push(i),r--)}else t.push(i)}return t}(e)).length,s=128,i=0,n=72;for(const r of e)r<128&&t.push(Ur(r));let a=t.length,o=a;for(a&&t.push("-");o<r;){let r=2147483647;for(const t of e)t>=s&&t<r&&(r=t);const l=o+1;r-s>Or((2147483647-i)/l)&&Dr("overflow"),i+=(r-s)*l,s=r;for(const r of e)if(r<s&&++i>2147483647&&Dr("overflow"),r==s){let e=i;for(let r=36;;r+=36){const s=r<=n?1:r>=n+26?26:r-n;if(e<s)break;const i=e-s,a=36-s;t.push(Ur(Vr(s+i%a,0))),e=Or(i/a)}t.push(Ur(Vr(e,0))),n=Rr(i,l,o==a),i=0,++o}++i,++s}return t.join("")}(e):e})}};export{jr as asn1js,_r as pkijs,Kr as punycode};
