// Generated by CoffeeScript 1.9.3
(function() {
  var $, documentReady;

  $ = function(id) {
    return document.getElementById(id);
  };

  document.addEventListener("keyup", function(event) {
    var ref, url;
    if (event.ctrlKey && event.keyCode === 13) {
      if ((ref = document.activeElement) != null) {
        if (typeof ref.blur === "function") {
          ref.blur();
        }
      }
      url = $("url").value.trim();
      if (!(0 < url.length)) {
        url = defaultURL;
      }
      $("url").value = url;
      return chrome.storage.sync.set({
        url: url
      });
    }
  });

  chrome.storage.sync.get("url", function(items) {
    $("url").value = items.url != null ? items.url : defaultURL;
    return $("url").focus();
  });

  documentReady = (function() {
    var callbacks, isReady, onDOMContentLoaded, ref;
    ref = [document.readyState !== "loading", []], isReady = ref[0], callbacks = ref[1];
    if (!isReady) {
      window.addEventListener("DOMContentLoaded", onDOMContentLoaded = function() {
        var callback, i, len;
        window.removeEventListener("DOMContentLoaded", onDOMContentLoaded);
        isReady = true;
        for (i = 0, len = callbacks.length; i < len; i++) {
          callback = callbacks[i];
          callback();
        }
        return callbacks = null;
      });
    }
    return function(callback) {
      if (isReady) {
        return callback();
      } else {
        return callbacks.push(callback);
      }
    };
  })();

  documentReady(function() {
    var versionNumber;
    versionNumber = $("versionNumber");
    return versionNumber.textContent = chrome.runtime.getManifest().version;
  });

}).call(this);
