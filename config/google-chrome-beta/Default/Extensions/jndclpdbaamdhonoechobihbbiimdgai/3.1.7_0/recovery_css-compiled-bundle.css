/* javascript/jfk/gss/base.gss */
/**
 * Copyright 2010 Google Inc. All Rights Reserved.
 *
 * Base Kennedy GSS definitions.
 *
 * Note: 1. Please do not use the base colors directly in component gss.
 *          Use the component definitions or define a new mapping.
 *       2. Don't put any style rules here. Definitions only.
 *       3. Modifying these values will have an impact on every product using
 *          the Kennedy UI. Changes to these values must be carefully
 *          considered.
 *       4. If you change this file, you *must* run
 *          //javatests/com/google/gwt/corp/jfk:AllTests since GWT uses this
 *          file for their Kennedy stuff as well and they process it using a
 *          different parser.
 *
 * @author eneries@google.com (Irene Chung)
 * @author psolderitsch@google.com (Peter Solderitsch)
 */

@provide 'jfk.gss.base';

@if (!DISABLE_KENNEDY) {

/* Basic Kennedy typography. */
@def JFK_BASE_FONT_FAMILY                  arial,sans-serif;
@def JFK_BASE_FONT_LINE_HEIGHT             1.4;
@def JFK_BASE_FONT_SIZE_SMALL              11px;
@def JFK_BASE_FONT_SIZE_NORMAL             13px;
@def JFK_BASE_FONT_NORMAL
    normal JFK_BASE_FONT_SIZE_NORMAL JFK_BASE_FONT_FAMILY;
@def JFK_BASE_FONT
    normal JFK_BASE_FONT_SIZE_NORMAL / JFK_BASE_FONT_LINE_HEIGHT JFK_BASE_FONT_FAMILY;

/* Primary and secondary typography for body text. */
@def JFK_BASE_PRIMARY_TEXT_COLOR           #222;
@def JFK_BASE_SECONDARY_TEXT_FONT_SIZE     JFK_BASE_FONT_SIZE_SMALL;
@def JFK_BASE_SECONDARY_TEXT_COLOR         #777;
@def JFK_BASE_SECONDARY_SOURCE_LINK_COLOR  #093;

/* Product name typography. */
@def JFK_BASE_PRODUCT_NAME_TEXT_COLOR      #dd4b39;
@def JFK_BASE_PRODUCT_NAME_FONT_SIZE       20px;

/* Section header typography. */
@def JFK_BASE_SECTION_HEADER_TEXT_COLOR    #222;
@def JFK_BASE_SECTION_HEADER_FONT_SIZE     16px;

/* Link typography. */
@def JFK_BASE_LINK_COLOR                   #15c;
@def JFK_BASE_VISITED_LINK_COLOR           #61c;
@def JFK_BASE_ACTIVE_LINK_COLOR            #d14836;
@def JFK_BASE_DISABLED_LINK_COLOR          #ccc;
@def JFK_BASE_TITLE_LINK_COLOR             JFK_BASE_LINK_COLOR;
@def JFK_BASE_TITLE_LINK_FONT_SIZE         JFK_BASE_SECTION_HEADER_FONT_SIZE;

/* Shared menu @def. */
/* TODO(chrishenry): We should really have a menu/defs.gss, just like
   button/defs.gss */
@def JFK_BASE_MENU_BG_COLOR                #fff;
@def JFK_BASE_MENU_TEXT_COLOR              #333;
@def JFK_BASE_MENU_BORDER                  1px solid rgba(0, 0, 0, .2);
@def JFK_BASE_MENU_FALLBACK_BORDER         1px solid #ccc;
@def JFK_BASE_MENU_SEPARATOR               1px solid #ebebeb;

/* Shared text input @def. */
@def JFK_BASE_INPUT_BORDER_COLOR           #d9d9d9;
@def JFK_BASE_INPUT_BORDER_TOP_COLOR       #c0c0c0;
@def JFK_BASE_INPUT_FOCUS_BOX_SHADOW       0 1px 2px rgba(0, 0, 0, 0.3);
@def JFK_BASE_INPUT_FOCUS_BORDER_COLOR     #4d90fe;

/* Common icons (not product-specific ones) */
@def JFK_TOOLBAR_BUTTON_DISCLOSURE_ARROW
    url(//ssl.gstatic.com/ui/v1/disclosure/grey-disclosure-arrow.png);
@def JFK_TOOLBAR_BUTTON_DISCLOSURE_ARROW_SELECT
    url(//ssl.gstatic.com/ui/v1/disclosure/grey-disclosure-arrow-up-down.png);
@def JFK_TOOLBAR_BUTTON_SMALL_DISCLOSURE_ARROW
    url(//ssl.gstatic.com/ui/v1/disclosure/small-grey-disclosure-arrow-down.png);

@def JFK_ARROW_DROPDOWN
    url(//ssl.gstatic.com/ui/v1/icons/common/down_arrow.png);

@def JFK_SETTINGS_ICON_BG  url(//ssl.gstatic.com/ui/v1/icons/common/settings.png);


/* DEPRECATED: do not use these @defs on new gss. */

@def JFK_BASE_BORDER_SHADE_COLOR           #ececec;
@def JFK_BASE_ERROR_TEXT_COLOR             #f00;
@def JFK_BASE_FONT_SIZE_LARGE              110%;
@def JFK_BASE_FONT_TITLE                   bold 130% JFK_BASE_FONT_FAMILY;
@def JFK_BASE_INPUT_FALLBACK_BORDER        JFK_BASE_MENU_FALLBACK_BORDER;
@def JFK_BASE_INPUT_RGBA_BORDER            JFK_BASE_MENU_BORDER;
@def JFK_BASE_INPUT_SEPARATOR              JFK_BASE_MENU_SEPARATOR;
@def JFK_BASE_ONTOP_TEXT_COLOR             #fff;
@def JFK_BASE_SECONDARY_BG_COLOR           #e4ebf8;
@def JFK_BASE_SHADE_BG_COLOR               #f1f6fa;
@def JFK_TOOLBAR_BUTTON_SMALL_DISCLOSURE_ARROW_SELECT
    url(//ssl.gstatic.com/ui/v1/disclosure/small-grey-disclosure-arrow-up-down.png);

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/gss/mixin.gss */
/**
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * Shared mixin definition.
 *
 * Author: chrishenry@google.com (Chris Henry)
 */

@provide 'jfk.gss.mixin';


/**
 * Mixin for the CSS3 animations.
 * Note: No version of IE requires the -ms- prefix. See "Remarks":
 * http://msdn.microsoft.com/en-us/library/windows/apps/hh466300.aspx
 * @param ANIMATION The animation CSS property shorthand.
 */
@defmixin animation(ANIMATION) {
  /* @alternate */ -webkit-animation: ANIMATION;
  /* @alternate */ -moz-animation: ANIMATION;
  /* @alternate */ -o-animation: ANIMATION;
  /* @alternate */ animation: ANIMATION;
}


/**
 * Mixin for a CSS3 animation timing function.
 * @param DELAY CSS animation delay in ms or s.
 */
@defmixin animation_delay(DELAY) {
  /* @alternate */ -webkit-animation-delay: DELAY;
  /* @alternate */ -moz-animation-delay: DELAY;
  /* @alternate */ -o-animation-delay: DELAY;
  /* @alternate */ animation-delay: DELAY;
}


/**
 * Mixin for a CSS3 animation's direction.
 * @param DIRECTION CSS animation direction keyword.
 */
@defmixin animation_direction(DIRECTION) {
  /* @alternate */ -webkit-animation-direction: DIRECTION;
  /* @alternate */ -moz-animation-direction: DIRECTION;
  /* @alternate */ -o-animation-direction: DIRECTION;
  /* @alternate */ animation-direction: DIRECTION;
}


/**
 * Mixin for a CSS3 animation duration.
 * @param DURATION The CSS animation-duration value, in ms or s.
 */
@defmixin animation_duration(DURATION) {
  /* @alternate */ -webkit-animation-duration: DURATION;
  /* @alternate */ -moz-animation-duration: DURATION;
  /* @alternate */ -o-animation-duration: DURATION;
  /* @alternate */ animation-duration: DURATION;
}


/**
 * Mixin for a CSS3 animation fill mode.
 * @param MODE animation-fill-mode as keyword.
 */
@defmixin animation_fill_mode(MODE) {
  /* @alternate */ -webkit-animation-fill-mode: MODE;
  /* @alternate */ animation-fill-mode: MODE;
}


/**
 * Mixin for a CSS3 animation's iteration count.
 * @param COUNT CSS animation iteration count as integer or 'infinite'.
 */
@defmixin animation_iteration_count(COUNT) {
  /* @alternate */ -webkit-animation-iteration-count: COUNT;
  /* @alternate */ -moz-animation-iteration-count: COUNT;
  /* @alternate */ -o-animation-iteration-count: COUNT;
  /* @alternate */ animation-iteration-count: COUNT;
}


/**
 * Mixin for the CSS3 animation names.
 * @param NAME The CSS animation-name property name.
 */
@defmixin animation_name(NAME) {
  /* @alternate */ -webkit-animation-name: NAME;
  /* @alternate */ -moz-animation-name: NAME;
  /* @alternate */ -o-animation-name: NAME;
  /* @alternate */ animation-name: NAME;
}


/**
 * Mixin for a CSS3 animation timing function.
 * @param FUNCTION CSS animation-timing-function as keyword or cubic-bezier.
 */
@defmixin animation_timing_function(FUNCTION) {
  /* @alternate */ -webkit-animation-timing-function: FUNCTION;
  /* @alternate */ -moz-animation-timing-function: FUNCTION;
  /* @alternate */ -o-animation-timing-function: FUNCTION;
  /* @alternate */ animation-timing-function: FUNCTION;
}


/**
 * Mixin for background-size.
 * Useful for high resolution (retina) displays.
 * @param BG_SIZE Size specification ex. "20px 25px"
 * Grammar [<length> | <percentage> | auto]{1, 2} | cover | contain
 */
@defmixin background_size(BG_SIZE) {
  /* @alternate */ -webkit-background-size: BG_SIZE;
  /* @alternate */ -moz-background-size: BG_SIZE;
  /* @alternate */ -o-background-size: BG_SIZE;
  /* @alternate */ background-size: BG_SIZE;
}


/**
 * Mixin for CSS3 backface visibility.
 * @param BACKFACE_VISIBILITY The backface-visibility CSS property value.
 */
@defmixin backface_visibility(BACKFACE_VISIBILITY) {
  /* @alternate */ -webkit-backface-visibility: BACKFACE_VISIBILITY;
  /* @alternate */ -moz-backface-visibility: BACKFACE_VISIBILITY;
  /* @alternate */ -o-backface-visibility: BACKFACE_VISIBILITY;
  /* @alternate */ backface-visibility: BACKFACE_VISIBILITY;
}


/**
 * Mixin for border-radius.
 * @param RADIUS The radius definition.
 */
@defmixin border_radius(RADIUS) {
  /* @alternate */ -webkit-border-radius: RADIUS;
  /* @alternate */ -moz-border-radius: RADIUS;
  /* @alternate */ border-radius: RADIUS;
}


/**
 * Mixin for border gradient, fallback to solid border-color.
 * @param GRADIENT The gradient.
 * @param FALLBACK_BORDER_COLOR Fallback solid color.
 */
@defmixin border_gradient(GRADIENT, FALLBACK_BORDER_COLOR) {
  border: 1px solid FALLBACK_BORDER_COLOR;

  /* @alternate */ -webkit-border-image: -webkit-gradient(GRADIENT) 1 100%;
  /* @alternate */ -webkit-border-image:
      -webkit-linear-gradient(GRADIENT) 1 100%;
  /* @alternate */ -o-border-image: -o-linear-gradient(GRADIENT) 1 100%;
  /* @alternate */ -moz-border-image: -moz-linear-gradient(GRADIENT) 1 100%;
}


/**
 * Mixin for box-shadow.
 * @param SHADOW The shadow definition.
 */
@defmixin box_shadow(SHADOW) {
  /* @alternate */ -webkit-box-shadow: SHADOW;
  /* @alternate */ -moz-box-shadow: SHADOW;
  /* @alternate */ box-shadow: SHADOW;
}


/**
 * Mixin for box-sizing.
 * @param BOX_SIZING The box-sizing definition.
 */
@defmixin box_sizing(BOX_SIZING) {
  /* @alternate */ -webkit-box-sizing: BOX_SIZING;
  /* @alternate */ -moz-box-sizing: BOX_SIZING;
  /* @alternate */ box-sizing: BOX_SIZING;
}


/**
 * Mixin for image-set with standard resolution background-image fallback.
 * @param BG_IMAGE_1X_URL The background image URL for standard resolution (1x).
 * @param BG_IMAGE_2X_URL The background image URL for high-DPI resolution (2x).
 */
@defmixin image_set_with_fallback(BG_IMAGE_1X_URL, BG_IMAGE_2X_URL) {
  background-image: BG_IMAGE_1X_URL;

  /* @alternate */ background-image: -webkit-image-set(
      BG_IMAGE_1X_URL 1x,
      BG_IMAGE_2X_URL 2x);
}


/**
 * Mixin for linear gradient, fallback to solid background-color.
 * Not safe to use with an angle or direction: use linear_gradient_angled
 * instead.
 * @param GRADIENT The gradient.
 * @param FALLBACK_BG_COLOR Fallback solid color.
 */
@defmixin linear_gradient(GRADIENT, FALLBACK_BG_COLOR) {
  background-color: FALLBACK_BG_COLOR;

  /* @alternate */ background-image: -webkit-linear-gradient(GRADIENT);
  /* @alternate */ background-image: -moz-linear-gradient(GRADIENT);
  /* @alternate */ background-image: -ms-linear-gradient(GRADIENT);
  /* @alternate */ background-image: -o-linear-gradient(GRADIENT);
  /* @alternate */ background-image: linear-gradient(GRADIENT);
}


/**
 * Mixin for linear gradient at an angle, fallback to solid background-color.
 * Follows the "final syntax" W3C linear-gradient angle interpretation: 0deg is
 * towards the north, 90deg towards the east. No support for named direction
 * keywords such as "to top" or "bottom".
 * @param ANGLE The numeric angle for the gradient, in degrees clockwise from
 *     north and including the "deg" unit keyword.
 * @param GRADIENT The remainder of the gradient.
 * @param FALLBACK_BG_COLOR Fallback solid color.
 */
@defmixin linear_gradient_angled(ANGLE, GRADIENT, FALLBACK_BG_COLOR) {
  background-color: FALLBACK_BG_COLOR;

  /* @alternate */ background-image:
      -webkit-linear-gradient(sub(90deg, ANGLE), GRADIENT);
  /* @alternate */ background-image: linear-gradient(ANGLE, GRADIENT);
}


/**
 * Mixin for CSS3 perspective.
 * @param PERSPECTIVE The perspective CSS property value.
 */
@defmixin perspective(PERSPECTIVE) {
  /* @alternate */ -webkit-perspective: PERSPECTIVE;
  /* @alternate */ -moz-perspective: PERSPECTIVE;
  /* @alternate */ perspective: PERSPECTIVE;
}


/**
 * Mixin for CSS3 perspective-origin.
 * @param PERSPECTIVE_ORIGIN The perspective-origin CSS property value.
 */
@defmixin perspective_origin(PERSPECTIVE_ORIGIN) {
  /* @alternate */ -webkit-perspective-origin: PERSPECTIVE_ORIGIN;
  /* @alternate */ -moz-perspective-origin: PERSPECTIVE_ORIGIN;
  /* @alternate */ perspective-origin: PERSPECTIVE_ORIGIN;
}


/**
 * Mixin for radial gradient, fallback to solid background-color.
 * @param GRADIENT The gradient.
 * @param FALLBACK_BG_COLOR Fallback solid color.
 */
@defmixin radial_gradient(GRADIENT, FALLBACK_BG_COLOR) {
  background-color: FALLBACK_BG_COLOR;

  /* @alternate */ background-image: -webkit-radial-gradient(GRADIENT);
  /* @alternate */ background-image: -moz-radial-gradient(GRADIENT);
  /* @alternate */ background-image: -o-radial-gradient(GRADIENT);
  /* @alternate */ background-image: radial-gradient(GRADIENT);
}


/**
 * Mixin for CSS3 transform.
 * @param TRANSFORM The transform CSS property value.
 */
@defmixin transform(TRANSFORM) {
  /* @alternate */ -webkit-transform: TRANSFORM;
  /* @alternate */ -moz-transform: TRANSFORM;
  /* @alternate */ -ms-transform: TRANSFORM;
  /* @alternate */ -o-transform: TRANSFORM;
  /* @alternate */ transform: TRANSFORM;
}


/**
 * Mixin for CSS3 transform-origin.
 * @param TRANSFORM_ORIGIN The transform-origin CSS property value.
 */
@defmixin transform_origin(TRANSFORM_ORIGIN) {
  /* @alternate */ -webkit-transform-origin: TRANSFORM_ORIGIN;
  /* @alternate */ -moz-transform-origin: TRANSFORM_ORIGIN;
  /* @alternate */ -ms-transform-origin: TRANSFORM_ORIGIN;
  /* @alternate */ -o-transform-origin: TRANSFORM_ORIGIN;
  /* @alternate */ transform-origin: TRANSFORM_ORIGIN;
}


/**
 * Mixin for CSS3 transform-style.
 * @param TRANSFORM_STYLE The transform-style CSS property value.
 */
@defmixin transform_style(TRANSFORM_STYLE) {
  /* @alternate */ -webkit-transform-style: TRANSFORM_STYLE;
  /* @alternate */ -moz-transform-style: TRANSFORM_STYLE;
  /* @alternate */ transform-style: TRANSFORM_STYLE;
}


/**
 * Mixin for CSS3 transition.
 * Note: No version of IE requires the -ms- prefix. See "Remarks":
 * http://msdn.microsoft.com/en-us/library/windows/apps/hh466377.aspx
 * @param TRANSITION The transition CSS property value.
 */
@defmixin transition(TRANSITION) {
  /* @alternate */ -webkit-transition: TRANSITION;
  /* @alternate */ -moz-transition: TRANSITION;
  /* @alternate */ -o-transition: TRANSITION;
  /* @alternate */ transition: TRANSITION;
}


/**
 * Mixin for CSS3 transition-delay.
 * Note: No version of IE requires the -ms- prefix. See "Remarks":
 * http://msdn.microsoft.com/en-us/library/windows/apps/hh466377.aspx
 * @param DELAY Time value indicating transition delay, e.g. 1s, 400ms.
 */
@defmixin transition_delay(DELAY) {
  /* @alternate */ -webkit-transition-delay: DELAY;
  /* @alternate */ -moz-transition-delay: DELAY;
  /* @alternate */ -o-transition-delay: DELAY;
  /* @alternate */ transition-delay: DELAY;
}


/**
 * Mixin for CSS3 transition-duration.
 * Note: No version of IE requires the -ms- prefix. See "Remarks":
 * http://msdn.microsoft.com/en-us/library/windows/apps/hh466377.aspx
 * @param DURATION The transition-duration CSS property value.
 */
@defmixin transition_duration(DURATION) {
  /* @alternate */ -webkit-transition-duration: DURATION;
  /* @alternate */ -moz-transition-duration: DURATION;
  /* @alternate */ -o-transition-duration: DURATION;
  /* @alternate */ transition-duration: DURATION;
}


/**
 * Mixin for CSS3 transition-property.
 * Note: No version of IE requires the -ms- prefix. See "Remarks":
 * http://msdn.microsoft.com/en-us/library/windows/apps/hh466377.aspx
 * @param PROPERTY The transition-property CSS property value.
 */
@defmixin transition_property(PROPERTY) {
  /* @alternate */ -webkit-transition-property: PROPERTY;
  /* @alternate */ -moz-transition-property: PROPERTY;
  /* @alternate */ -o-transition-property: PROPERTY;
  /* @alternate */ transition-property: PROPERTY;
}


/**
 * Mixin for CSS3 transition-timing-function.
 * Note: No version of IE requires the -ms- prefix. See "Remarks":
 * http://msdn.microsoft.com/en-us/library/windows/apps/hh466377.aspx
 * @param FUNCTION The transition-timing-function CSS property value.
 */
@defmixin transition_timing_function(FUNCTION) {
  /* @alternate */ -webkit-transition-timing-function: FUNCTION;
  /* @alternate */ -moz-transition-timing-function: FUNCTION;
  /* @alternate */ -o-transition-timing-function: FUNCTION;
  /* @alternate */ transition-timing-function: FUNCTION;
}


/**
 * Mixin for user select.
 * Note: "user_select" property (no vendor prefix) is not part of CSS3 spec
 * yet and hence is not part of this mixin.
 * @param USER_SELECT User select value.
 */
@defmixin user_select(USER_SELECT) {
  /* @alternate */ -webkit-user-select: USER_SELECT;
  /* @alternate */ -moz-user-select: USER_SELECT;
  /* @alternate */ -ms-user-select: USER_SELECT;
}


/**
 * Mixin for opacity with IE fallback. This (IE fallback) should
 * typically be used only when usability is a concern.
 * NOTE(chrishenry|kennedy-eng): Using this on an image will cause
 * it to display badly in IE. Use it only when it is unusable without it.
 * @param OPACITY The opacity value for non-IE browser, ranging from 0 to 1.0.
 * @param IE_FALLBACK_VALUE IE's alpha filter's opacity value,
 *     ranging from 0 to 100.
 */
@defmixin opacity_with_ie_fallback(OPACITY, IE_FALLBACK_VALUE) {
  filter: alpha(opacity = IE_FALLBACK_VALUE);
  opacity: OPACITY;
}


/**
 * Mixin to blur an image.  A larger radius results in more blurring.  Note if
 * the browser doesn't support this filter, the image will appear unblurred.
 * @param {length} RADIUS blur radius.
 */
@defmixin image_blur(RADIUS) {
  /* @alternate */ -moz-filter: blur(RADIUS);
  /* @alternate */ -ms-filter: blur(RADIUS);
  /* @alternate */ -o-filter: blur(RADIUS);
  /* @alternate */ -webkit-filter: blur(RADIUS);
  /* @alternate */ filter: blur(RADIUS);
}

/* javascript/jfk/gss/menu.gss */
/**
 * Copyright 2009 Google Inc, All Rights Reserved
 *
 * Standard styling for menus created by goog.ui.MenuRenderer
 *
 * Author: attila@google.com (Attila Bodis)
 * Author: psolderitsch@google.com (Peter Solderitsch)
 */

@provide 'jfk.gss.menu';
@require 'jfk.gss.base';
@require 'jfk.gss.mixin';

/**
 * Kennedy styles have been tweaked from the default Closure values. This file
 * can be considered a drop-in replacement for javascript/closure/css/menu.css
 */

@if (!DISABLE_KENNEDY) {

@def JFK_MENU_BG_COLOR         JFK_BASE_MENU_BG_COLOR;
@def JFK_MENU_RGBA_BORDER      JFK_BASE_MENU_BORDER;
@def JFK_MENU_FALLBACK_BORDER  JFK_BASE_MENU_FALLBACK_BORDER;
@def JFK_MENU_BORDER_RADIUS    0;
@def JFK_MENU_BOX_SHADOW       0 2px 4px rgba(0, 0, 0, 0.2);
@def JFK_MENU_PADDING          6px 0;
@def JFK_MENU_TEXT_COLOR       JFK_BASE_MENU_TEXT_COLOR;
@def JFK_MENU_TRANSITION       opacity 0.218s;


.goog-menu {
  @mixin border_radius(JFK_MENU_BORDER_RADIUS);
  @mixin box_shadow(JFK_MENU_BOX_SHADOW);
  @mixin transition(JFK_MENU_TRANSITION);

  background: JFK_MENU_BG_COLOR;
/*
 * TODO(psolderitsch): If/when we support conditional browser GSS for JFK,
 * update this to use outline for browsers that support it.
 */
  border: JFK_MENU_FALLBACK_BORDER; /* IE8 can't handle RGBA */
  /* @alternate */ border: JFK_MENU_RGBA_BORDER;
  cursor: default;
  font-size: JFK_BASE_FONT_SIZE_NORMAL;
  margin: 0;
  outline: none;
  padding: JFK_MENU_PADDING;
  position: absolute;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/gss/menuitem.gss */
/**
 * Copyright 2009 Google Inc, All Rights Reserved
 *
 * Standard styling for menus created by goog.ui.MenuItemRenderer
 *
 * Author: attila@google.com (Attila Bodis)
 * Author: psolderitsch@google.com (Peter Solderitsch)
 */

@provide 'jfk.gss.menuItem';

@require 'jfk.gss.base';
@require 'jfk.gss.menu';

/**
 * Kennedy styles have been tweaked from the default Closure values. This file
 * can be considered a drop-in replacement for
 * javascript/closure/css/menuitem.css
 */

@if (!DISABLE_KENNEDY) {

@def JFK_MENUITEM_ACCEL_TEXT_PADDING         6px;
@def JFK_MENUITEM_CHECKBOX_BACKGROUND_POS    left center;
@def JFK_MENUITEM_CHECKBOX_BACKGROUND_REPEAT no-repeat;
@def JFK_MENUITEM_CHECKBOX_LEFT              3px;
@def JFK_MENUITEM_CHECKBOX_TOP               3px;
@def JFK_MENUITEM_CHECKBOX_PADDING           30px;
@def JFK_MENUITEM_CHECKBOX_SIZE              21px;
@def JFK_MENUITEM_DISABLED_TEXT_COLOR        JFK_BASE_DISABLED_LINK_COLOR;
@def JFK_MENUITEM_DISABLED_OPACITY           0.3;
@def JFK_MENUITEM_DISABLED_FILTER_OPACITY    30;
/* TODO(psolderitsch): Move this color to base.gss? */
@def JFK_MENUITEM_HOVER_BG_COLOR             #eee;
@def JFK_MENUITEM_HOVER_COLOR                #eee;
/* JFK_MENUITEM_PADDING_TOP - 1 */
@def JFK_MENUITEM_HOVER_VERTICAL_PADDING     5px;
@def JFK_MENUITEM_MARGIN                     0;
@def JFK_MENUITEM_MNEMONIC_SEPARATOR_FONTSIZE 12px;
@def JFK_MENUITEM_MNEMONIC_SEPARATOR_PADDING 4px;
@def JFK_MENUITEM_PADDING_TOP                6px;
@def JFK_MENUITEM_PADDING_RIGHT              8em;
@def JFK_MENUITEM_NOACCEL_PADDING_RIGHT      44px;
@def JFK_MENUITEM_PADDING_LEFT               16px;
@def JFK_MENUITEM_SELECTED_TEXT_COLOR        JFK_BASE_MENU_TEXT_COLOR;
@def JFK_MENUITEM_SHORTCUT_TEXT_COLOR        JFK_BASE_SECONDARY_TEXT_COLOR;
@def JFK_MENUITEM_TEXT_COLOR                 JFK_BASE_MENU_TEXT_COLOR;

@def JFK_MENUITEM_CHECKBOX_BACKGROUND_IMAGE
    url(//ssl.gstatic.com/ui/v1/menu/checkmark.png);

/* State: resting. */
.goog-menuitem, .goog-tristatemenuitem, .goog-filterobsmenuitem {
  position: relative;
  color: JFK_MENUITEM_TEXT_COLOR;
  cursor: pointer;
  list-style: none;
  margin: JFK_MENUITEM_MARGIN;
  padding: JFK_MENUITEM_PADDING_TOP JFK_MENUITEM_PADDING_RIGHT
           JFK_MENUITEM_PADDING_TOP JFK_MENUITEM_CHECKBOX_PADDING;
  white-space: nowrap;
}

/*
 * If a menu doesn't have checkable items or items with icons, remove
 * padding.
 */
.goog-menu-nocheckbox .goog-menuitem,
.goog-menu-noicon .goog-menuitem {
  padding-left: JFK_MENUITEM_PADDING_LEFT;
  vertical-align: middle;
}

/*
 * If a menu doesn't have items with shortcuts, leave just enough room for
 * submenu arrows, if they are rendered.
 */
.goog-menu-noaccel .goog-menuitem {
  padding-right: JFK_MENUITEM_NOACCEL_PADDING_RIGHT;
}

/* State: disabled. */
.goog-menuitem-disabled {
  cursor: default;
}

.goog-menuitem-disabled .goog-menuitem-accel,
.goog-menuitem-disabled .goog-menuitem-content {
  color: JFK_MENUITEM_DISABLED_TEXT_COLOR !important;
}

.goog-menuitem-disabled .goog-menuitem-icon {
  filter: alpha(opacity=JFK_MENUITEM_DISABLED_FILTER_OPACITY);
  opacity: JFK_MENUITEM_DISABLED_OPACITY;
}

/* State: hover. */
.goog-menuitem-highlight,
.goog-menuitem-hover {
  background-color: JFK_MENUITEM_HOVER_BG_COLOR;

  /* We set an explicit top and bottom border for high-contrast mode. */
  border-color: JFK_MENUITEM_HOVER_COLOR;
  border-style: dotted;
  border-width: 1px 0;
  padding-top:  JFK_MENUITEM_HOVER_VERTICAL_PADDING;
  padding-bottom: JFK_MENUITEM_HOVER_VERTICAL_PADDING;
}

.goog-menuitem-highlight .goog-menuitem-content,
.goog-menuitem-hover .goog-menuitem-content {
  color: JFK_MENUITEM_SELECTED_TEXT_COLOR;
}

/* State: selected/checked. */
.goog-menuitem-checkbox,
.goog-menuitem-icon {
  background-repeat: no-repeat;
  height: JFK_MENUITEM_CHECKBOX_SIZE;
  left: JFK_MENUITEM_CHECKBOX_LEFT;
  position: absolute;
  right: auto;
  top: JFK_MENUITEM_CHECKBOX_TOP;
  vertical-align: middle;
  width: JFK_MENUITEM_CHECKBOX_SIZE;
}

.goog-option-selected {
  background-image: JFK_MENUITEM_CHECKBOX_BACKGROUND_IMAGE;
  background-repeat: JFK_MENUITEM_CHECKBOX_BACKGROUND_REPEAT;
  background-position: JFK_MENUITEM_CHECKBOX_BACKGROUND_POS;
}

/**
 * TODO(chadli): left center here is a workaround for b/10616087  Remove this
 * block once the bug is fixed.
 */
@if (SCS_BIDI) {
  .goog-option-selected {
    background-position: left center;
  }
}

.goog-option-selected .goog-menuitem-content {
  color: JFK_MENUITEM_SELECTED_TEXT_COLOR;
}

/* Keyboard shortcut ("accelerator") style. */
.goog-menuitem-accel {
  color: JFK_MENUITEM_SHORTCUT_TEXT_COLOR;
  /* Keyboard shortcuts are untranslated; always left-to-right. */
  /* @noflip */ direction: ltr;
  left: auto;
  padding: 0 JFK_MENUITEM_ACCEL_TEXT_PADDING;
  position: absolute;
  right: 0;
  text-align: right;
}

/* Mnemonic styles. */
.goog-menuitem-mnemonic-hint {
  text-decoration: underline;
}

.goog-menuitem-mnemonic-separator {
  color: JFK_MENUITEM_SHORTCUT_TEXT_COLOR;
  font-size: JFK_MENUITEM_MNEMONIC_SEPARATOR_FONTSIZE;
  padding-left: JFK_MENUITEM_MNEMONIC_SEPARATOR_PADDING;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/gss/textinput.gss */
/**
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * Styles for all inputs in JFK. Note that the 'jfk-textinput' class needs
 * to be added explicitly in your code: no common js in jfk or closure adds it
 * automatically.
 *
 * @author zhyder@google.com (Zohair Hyder)
 */

@provide 'jfk.gss.textInput';
@require 'jfk.gss.base';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

.jfk-textinput {
  @mixin border_radius(1px);
  border: 1px solid JFK_BASE_INPUT_BORDER_COLOR;
  border-top: 1px solid JFK_BASE_INPUT_BORDER_TOP_COLOR;
  font-size: JFK_BASE_FONT_SIZE_NORMAL;
  height: 25px;  /* 29px total height incl padding+border */
  padding: 1px 8px;
}

.jfk-textinput:focus {
  @mixin box_shadow(inset JFK_BASE_INPUT_FOCUS_BOX_SHADOW);

  border: 1px solid JFK_BASE_INPUT_FOCUS_BORDER_COLOR;
  outline: none;
}

/* IE 10 automatically adds a clear button at the end of text boxes (an “X”
 * mark) displayed when the textbox is focused and has content. Clicking on the
 * “X” mark will clear the entered text. Most Google designers are not going to
 * consider IE10 for every UI that involves an input field, and most of the
 * time, it will be undesirable. Disabling it results in the least surprises all
 * around.
 */
.jfk-textinput::-ms-clear {
  display: none;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/jfkwrappers/autocomplete/autocomplete.gss */
/**
 * Styles for jfkAutocomplete module.
 *
 * @provide {ng.jfk.autoComplete}
 *
 * @require {jfk.gss.menu}
 * @require {jfk.gss.menuItem}
 * @require {jfk.gss.textInput}
 */

.jfk-ac-renderer {
  padding-bottom: 0;
  padding-top: 0;
}

.jfk-ac-renderer .goog-menuitem {
  /* Matches the padding-left of the JFK textinput. */
  padding-left: 8px;
}

/* javascript/jfk/bubble/bubble.gss */
/**
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * @author tdebroc@google.com (Thibaut de Broca)
 * @author ecattell@google.com (Eric Cattell)
 */

@provide 'jfk.bubble';
@require 'jfk.gss.mixin';


/* NOTE: Keep in sync with jfk.Bubble.ARROW_SIZE in bubble.js */

/* TODO(ecattell): Move all images to jfk as a single sprite */

@if (!DISABLE_KENNEDY) {

@def JFK_BUBBLE_ARROW_WIDTH                 9px;
@def JFK_BUBBLE_ARROW_WIDTH_NEGATIVE        -9px;
/* Should be 1px less than JFK_BUBBLE_ARROW_WIDTH */
@def JFK_BUBBLE_ARROW_WIDTH_NOBORDER        8px;
@def JFK_BUBBLE_ARROW_WIDTH_NOBORDER_NEGATIVE -8px;
@def JFK_BUBBLE_ARROW_LENGTH                15px;

@def JFK_BUBBLE_BOX_SHADOW                  0 1px 3px rgba(0, 0, 0, .2);
@def JFK_BUBBLE_BG_COLOR                    #fff;
@def JFK_BUBBLE_BORDER_COLOR                #bbb;
@def JFK_BUBBLE_BORDER_BOTTOM_COLOR         #a8a8a8;
@def JFK_BUBBLE_Z_INDEX                     1201;
@def JFK_BUBBLE_PADDING                     16px;

@def JFK_BUBBLE_CLOSE_ICON_URL
    url("//ssl.gstatic.com/ui/v1/icons/common/x_8px.png");
@def JFK_BUBBLE_CLOSE_ICON_SIZE             21px;
@def JFK_BUBBLE_CLOSE_ICON_PADDING          2px;
@def JFK_BUBBLE_CLOSE_BUTTON_OPACITY        .4;
@def JFK_BUBBLE_CLOSE_BUTTON_FOCUS_OPACITY  .8;
@def JFK_BUBBLE_CLOSE_BUTTON_FOCUS_BORDER_COLOR  #4d90fe;


.jfk-bubble {
  @mixin box_shadow(JFK_BUBBLE_BOX_SHADOW);

  background-color: JFK_BUBBLE_BG_COLOR;
  border: 1px solid;
  border-color: JFK_BUBBLE_BORDER_COLOR JFK_BUBBLE_BORDER_COLOR
      JFK_BUBBLE_BORDER_BOTTOM_COLOR;
  padding: JFK_BUBBLE_PADDING;
  position: absolute;
  z-index: JFK_BUBBLE_Z_INDEX !important;
}

/*
 * TODO(chrishenry): Use :before for high-contrast a11y. It seems
 * that this is causing the 'x' to disappear in IE8 (highly
 * reproducible, but not in the demo). Please test in IE8, especially
 * in property like Oz/GMail.
 */
.jfk-bubble-closebtn {
  background: JFK_BUBBLE_CLOSE_ICON_URL no-repeat;
  border: 1px solid transparent;
  height: JFK_BUBBLE_CLOSE_ICON_SIZE;
  opacity: JFK_BUBBLE_CLOSE_BUTTON_OPACITY;
  outline: 0;
  position: absolute;
  right: 2px;
  top: 2px;
  width: JFK_BUBBLE_CLOSE_ICON_SIZE;
}

.jfk-bubble-closebtn:focus {
  border: 1px solid JFK_BUBBLE_CLOSE_BUTTON_FOCUS_BORDER_COLOR;
  opacity: JFK_BUBBLE_CLOSE_BUTTON_FOCUS_OPACITY;
}

/*
 * Image-less arrows: the idea is to use 2 div elements that we
 * placed on top of each other. We then use a border magic to create
 * a triangle, one slightly smaller than the other.
 *
 * TODO(chrishenry): If we are dropping support for IE7 completely,
 * we can discard the 2 elements and use .jfk-bubble-arrow:before and :after
 * pseudo-elements with content: ""; to simulate the 2 elements.
 *
 * TODO(chrishenry): Extract a template for the arrow part so we can
 * create implementations of arrows with different width, length,
 * border color, and background easily.
 */

.jfk-bubble-arrow {
  position: absolute;
}

.jfk-bubble-arrow .jfk-bubble-arrowimplbefore,
.jfk-bubble-arrow .jfk-bubble-arrowimplafter {
  display: block;
  height: 0;
  position: absolute;
  width: 0;
}

.jfk-bubble-arrow .jfk-bubble-arrowimplbefore {
  border: JFK_BUBBLE_ARROW_WIDTH solid;
}

.jfk-bubble-arrow .jfk-bubble-arrowimplafter {
  border: JFK_BUBBLE_ARROW_WIDTH_NOBORDER solid;
}

.jfk-bubble-arrowdown {
  bottom: 0;
}

.jfk-bubble-arrowup {
  top: JFK_BUBBLE_ARROW_WIDTH_NEGATIVE;
}

.jfk-bubble-arrowleft {
  left: JFK_BUBBLE_ARROW_WIDTH_NEGATIVE;
}

.jfk-bubble-arrowright {
  right: 0;
}

.jfk-bubble-arrowdown .jfk-bubble-arrowimplbefore,
.jfk-bubble-arrowup .jfk-bubble-arrowimplbefore {
  border-color: JFK_BUBBLE_BORDER_COLOR transparent;
  left: JFK_BUBBLE_ARROW_WIDTH_NEGATIVE;
}

.jfk-bubble-arrowdown .jfk-bubble-arrowimplbefore {
  border-color: JFK_BUBBLE_BORDER_BOTTOM_COLOR transparent;
}

.jfk-bubble-arrowdown .jfk-bubble-arrowimplafter,
.jfk-bubble-arrowup .jfk-bubble-arrowimplafter {
  border-color: JFK_BUBBLE_BG_COLOR transparent;
  left: JFK_BUBBLE_ARROW_WIDTH_NOBORDER_NEGATIVE;
}

.jfk-bubble-arrowdown .jfk-bubble-arrowimplbefore {
  border-bottom-width: 0;
}

.jfk-bubble-arrowdown .jfk-bubble-arrowimplafter {
  border-bottom-width: 0;
}

.jfk-bubble-arrowup .jfk-bubble-arrowimplbefore {
  border-top-width: 0;
}

.jfk-bubble-arrowup .jfk-bubble-arrowimplafter {
  border-top-width: 0;
  top: 1px;
}

.jfk-bubble-arrowleft .jfk-bubble-arrowimplbefore,
.jfk-bubble-arrowright .jfk-bubble-arrowimplbefore {
  border-color: transparent JFK_BUBBLE_BORDER_COLOR;
  top: JFK_BUBBLE_ARROW_WIDTH_NEGATIVE;
}

.jfk-bubble-arrowleft .jfk-bubble-arrowimplafter,
.jfk-bubble-arrowright .jfk-bubble-arrowimplafter {
  border-color: transparent JFK_BUBBLE_BG_COLOR;
  top: JFK_BUBBLE_ARROW_WIDTH_NOBORDER_NEGATIVE;
}

.jfk-bubble-arrowleft .jfk-bubble-arrowimplbefore {
  border-left-width: 0;
}

.jfk-bubble-arrowleft .jfk-bubble-arrowimplafter {
  border-left-width: 0;
  left: 1px;
}

.jfk-bubble-arrowright .jfk-bubble-arrowimplbefore {
  border-right-width: 0;
}

.jfk-bubble-arrowright .jfk-bubble-arrowimplafter {
  border-right-width: 0;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/bubble/promobubble.gss */
/**
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * @author chrishenry@google.com (Chris Henry)
 */

@provide 'jfk.bubble.promoBubble';
@require 'jfk.bubble';

@if (!DISABLE_KENNEDY) {

@def JFK_PROMO_BUBBLE_BG_COLOR        #f9edbe;
@def JFK_PROMO_BUBBLE_BORDER_COLOR    #f0c36d;
@def JFK_PROMO_BUBBLE_BORDER          1px solid JFK_PROMO_BUBBLE_BORDER_COLOR;

.jfk-bubble.jfk-bubble-promo {
  background-color: JFK_PROMO_BUBBLE_BG_COLOR;
  border: JFK_PROMO_BUBBLE_BORDER;
}

.jfk-bubble-promo .jfk-bubble-arrowdown .jfk-bubble-arrowimplbefore,
.jfk-bubble-promo .jfk-bubble-arrowup .jfk-bubble-arrowimplbefore {
  border-color: JFK_PROMO_BUBBLE_BORDER_COLOR transparent;
}

.jfk-bubble-promo .jfk-bubble-arrowdown .jfk-bubble-arrowimplafter,
.jfk-bubble-promo .jfk-bubble-arrowup .jfk-bubble-arrowimplafter {
  border-color: JFK_PROMO_BUBBLE_BG_COLOR transparent;
}

.jfk-bubble-promo .jfk-bubble-arrowleft .jfk-bubble-arrowimplbefore,
.jfk-bubble-promo .jfk-bubble-arrowright .jfk-bubble-arrowimplbefore {
  border-color: transparent JFK_PROMO_BUBBLE_BORDER_COLOR;
}

.jfk-bubble-promo .jfk-bubble-arrowleft .jfk-bubble-arrowimplafter,
.jfk-bubble-promo .jfk-bubble-arrowright .jfk-bubble-arrowimplafter {
  border-color: transparent JFK_PROMO_BUBBLE_BG_COLOR;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/jfkwrappers/bubble/bubble.gss */
/**
 * Styles for jfkBubble module.
 *
 * @provide {ng.jfk.bubble}
 *
 * @require {jfk.bubble}
 * @require {jfk.bubble.promoBubble}
 */

/* javascript/closure/css/common.css */
/*
 * Copyright 2009 The Closure Library Authors. All Rights Reserved.
 *
 * Use of this source code is governed by the Apache License, Version 2.0.
 * See the COPYING file for details.
 */

/*
 * Cross-browser implementation of the "display: inline-block" CSS property.
 * See http://www.w3.org/TR/CSS21/visuren.html#propdef-display for details.
 * Tested on IE 6 & 7, FF 1.5 & 2.0, Safari 2 & 3, Webkit, and Opera 9.
 *
 * @author attila@google.com (Attila Bodis)
 */

/*
 * Default rule; only Safari, Webkit, and Opera handle it without hacks.
 */
.goog-inline-block {
  position: relative;
  display: -moz-inline-box; /* Ignored by FF3 and later. */
  display: inline-block;
}

/*
 * Pre-IE7 IE hack.  On IE, "display: inline-block" only gives the element
 * layout, but doesn't give it inline behavior.  Subsequently setting display
 * to inline does the trick.
 */
* html .goog-inline-block {
  display: inline;
}

/*
 * IE7-only hack.  On IE, "display: inline-block" only gives the element
 * layout, but doesn't give it inline behavior.  Subsequently setting display
 * to inline does the trick.
 */
*:first-child+html .goog-inline-block {
  display: inline;
}

/* javascript/jfk/button/defs.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Base defs for jfk.Button and other jfk Button-like components, such as
 * menubutton.
 *
 * @author brettcvz@google.com (Brett van Zuiden)
 */

@provide 'jfk.button.defs';

@require 'jfk.gss.mixin';


/*
 * IE8 Hacks for :focus
 *
 * Kennedy style uses box-shadow inset for :focus, but IE8 does not support
 * box-shadow. So we use border+outline to create similar effect. Since IE8
 * does not support rgba, we use that to override both border and outline
 * in other browser so that this hack is not visible. The outline hack
 * is specified in each of the buttons gss since that depends on the color
 * of the button.
 *
 * To use, add this to :focus section of the button.
 *
 * @param FOCUS_OUTLINE_IE8_FALLBACK A fallback outline color to use
 *     when the border+outline hack is used. This is typically similar
 *     in color to the button background color.
 */
@defmixin jfk_button_focus(FOCUS_OUTLINE_IE8_FALLBACK) {
  @mixin box_shadow(JFK_BUTTON_COMMON_NONSTANDARD_BUTTON_FOCUS_SHADOW);

  /* @alternate */ border: JFK_BUTTON_COMMON_FOCUS_BORDER_IE8_FALLBACK;
  /* @alternate */ border: JFK_BUTTON_COMMON_FOCUS_BORDER_NON_IE8_OVERRIDE;

  /* IE8 does not support box-shadow! See note in basebutton.gss */
  /* @alternate */ outline: FOCUS_OUTLINE_IE8_FALLBACK;
  /* @alternate */ outline: JFK_BUTTON_COMMON_FOCUS_OUTLINE_NON_IE8_OVERRIDE;
}


@if (!DISABLE_KENNEDY) {

@def JFK_BUTTON_COMMON_TRANSITION all 0.218s;

@def JFK_BUTTON_COMMON_BORDER_RADIUS 2px;
@def JFK_BUTTON_COMMON_CONTENT #f1f1f1;
@def JFK_BUTTON_COMMON_CURSOR default;
@def JFK_BUTTON_COMMON_HOVER #e1e1e1;
@def JFK_BUTTON_COMMON_HOVER_BOX_SHADOW 0 1px 1px rgba(0, 0, 0, .1);
@def JFK_BUTTON_COMMON_FONT_SIZE 11px;
@def JFK_BUTTON_COMMON_FONT_WEIGHT bold;
/* 27px + 2px for borders = 29px */
@def JFK_BUTTON_COMMON_HEIGHT 27px;

@def JFK_BUTTON_COMMON_NONSTANDARD_BUTTON_FOCUS_SHADOW inset 0 0 0 1px #fff;

@def JFK_BUTTON_COMMON_FOCUS_BORDER_IE8_FALLBACK 1px solid #fff;
/*
 * The following 2 defs are used to undo the border and outline applied by
 * IE8 hacks. See below for more comments.
 * Be sure to specify in the correct order, though any can be omitted:
 *   outline-color
 *   outline-style
 *   outline-width
 */
@def JFK_BUTTON_COMMON_FOCUS_BORDER_NON_IE8_OVERRIDE rgba(0, 0, 0, 0) solid 1px;
@def JFK_BUTTON_COMMON_FOCUS_OUTLINE_NON_IE8_OVERRIDE rgba(0, 0, 0, 0) 0;

@def JFK_BUTTON_BORDERLESS_FONT_SIZE 13px;
@def JFK_BUTTON_BORDERLESS_FONT_WEIGHT normal;

/*
 * The following defs are used for the standard buttons, as well as
 * for other "button-like" jfk components, such as menubuttons, toolbar
 * buttons, etc.
 */
@def JFK_BUTTON_STANDARD_BG_COLOR #f5f5f5;
@def JFK_BUTTON_STANDARD_BORDER_COLOR #dcdcdc;
@def JFK_BUTTON_STANDARD_BORDER_COLOR_RGBA rgba(0,0,0,0.1);
@def JFK_BUTTON_STANDARD_GRADIENT top,#f5f5f5,#f1f1f1;
@def JFK_BUTTON_STANDARD_TEXT_COLOR #444;
@def JFK_BUTTON_STANDARD_BOX_SHADOW none;

@def JFK_BUTTON_STANDARD_HOVER_BG_COLOR #f8f8f8;
@def JFK_BUTTON_STANDARD_HOVER_BORDER_COLOR #c6c6c6;
@def JFK_BUTTON_STANDARD_HOVER_GRADIENT top,#f8f8f8,#f1f1f1;
@def JFK_BUTTON_STANDARD_HOVER_TEXT_COLOR #333;
@def JFK_BUTTON_STANDARD_HOVER_BOX_SHADOW none;

@def JFK_BUTTON_STANDARD_ACTIVE_BG_COLOR JFK_BUTTON_STANDARD_HOVER_BG_COLOR;
/* active color defaults to hover and exists bc different in rio */ 
@def JFK_BUTTON_STANDARD_ACTIVE_TEXT_COLOR JFK_BUTTON_STANDARD_HOVER_TEXT_COLOR;
@def JFK_BUTTON_STANDARD_ACTIVE_BOX_SHADOW inset 0 1px 2px rgba(0, 0, 0, .1);

@def JFK_BUTTON_STANDARD_SELECTED_BG_COLOR #eee;
@def JFK_BUTTON_STANDARD_SELECTED_BORDER_COLOR #ccc;
@def JFK_BUTTON_STANDARD_SELECTED_GRADIENT top,#f8f8f8,#f1f1f1;
@def JFK_BUTTON_STANDARD_SELECTED_TEXT_COLOR #333;

@def JFK_BUTTON_STANDARD_CHECKED_BG_COLOR #eee;
@def JFK_BUTTON_STANDARD_CHECKED_BORDER_COLOR #ccc;
@def JFK_BUTTON_STANDARD_CHECKED_GRADIENT top,#eee,#e0e0e0;
@def JFK_BUTTON_STANDARD_CHECKED_TEXT_COLOR #333;
@def JFK_BUTTON_STANDARD_CHECKED_BOX_SHADOW
    JFK_BUTTON_STANDARD_ACTIVE_BOX_SHADOW;

@def JFK_BUTTON_STANDARD_DISABLED_BG_COLOR #fff;
@def JFK_BUTTON_STANDARD_DISABLED_BORDER_COLOR #f3f3f3;
@def JFK_BUTTON_STANDARD_DISABLED_TEXT_COLOR #b8b8b8;

@def JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR #4d90fe;
@def JFK_BUTTON_STANDARD_FOCUS_OUTLINE none;
@def JFK_BUTTON_STANDARD_FOCUS_CLEAR_OUTLINE none;

@def JFK_BUTTON_STANDARD_ICON_OPACITY .55;
@def JFK_BUTTON_STANDARD_ICON_HOVER_OPACITY 0.9;
@def JFK_BUTTON_STANDARD_ICON_DISABLED_FILTER alpha(opacity=33);
@def JFK_BUTTON_STANDARD_ICON_DISABLED_OPACITY 0.333;

/*
 * The following defs are used for the action button.
 */
@def JFK_BUTTON_ACTION_BG_COLOR #4d90fe;
@def JFK_BUTTON_ACTION_BORDER_COLOR #3079ed;
@def JFK_BUTTON_ACTION_GRADIENT top,#4d90fe,#4787ed;
@def JFK_BUTTON_ACTION_TEXT_COLOR #fff;
@def JFK_BUTTON_ACTION_BOX_SHADOW none;

@def JFK_BUTTON_ACTION_HOVER_BG_COLOR #357ae8;
@def JFK_BUTTON_ACTION_HOVER_BORDER_COLOR #2f5bb7;
@def JFK_BUTTON_ACTION_HOVER_BOTTOM_BORDER_COLOR JFK_BUTTON_ACTION_HOVER_BORDER_COLOR;
@def JFK_BUTTON_ACTION_HOVER_GRADIENT top,#4d90fe,#357ae8;
@def JFK_BUTTON_ACTION_HOVER_BOX_SHADOW none;

@def JFK_BUTTON_ACTION_CLEAR_OUTLINE none;
@def JFK_BUTTON_ACTION_FOCUS_OUTLINE_IE8_FALLBACK
    1px solid JFK_BUTTON_ACTION_BG_COLOR;

@def JFK_BUTTON_ACTION_ACTIVE_BORDER_COLOR JFK_BUTTON_ACTION_HOVER_BORDER_COLOR;
@def JFK_BUTTON_ACTION_ACTIVE_TOP_BORDER_COLOR JFK_BUTTON_ACTION_HOVER_BORDER_COLOR;
@def JFK_BUTTON_ACTION_ACTIVE_BG_COLOR JFK_BUTTON_ACTION_HOVER_BG_COLOR;
@def JFK_BUTTON_ACTION_ACTIVE_BOX_SHADOW inset 0 1px 2px rgba(0, 0, 0, 0.3);

/**
 * The following defs are used for the mini button.
 */
@def JFK_BUTTON_MINI_HEIGHT 17px;
@def JFK_BUTTON_MINI_BG_COLOR JFK_BUTTON_STANDARD_BG_COLOR;
@def JFK_BUTTON_MINI_BORDER_COLOR JFK_BUTTON_STANDARD_BORDER_COLOR;
@def JFK_BUTTON_MINI_BORDER_COLOR_RGBA JFK_BUTTON_STANDARD_BORDER_COLOR_RGBA;
@def JFK_BUTTON_MINI_GRADIENT JFK_BUTTON_STANDARD_GRADIENT;
@def JFK_BUTTON_MINI_TEXT_COLOR JFK_BUTTON_STANDARD_TEXT_COLOR;
@def JFK_BUTTON_MINI_TEXT_SHADOW 0px 1px JFK_BUTTON_STANDARD_BORDER_COLOR_RGBA;

@def JFK_BUTTON_MINI_DISABLED_BG_COLOR JFK_BUTTON_STANDARD_DISABLED_BG_COLOR;
@def JFK_BUTTON_MINI_DISABLED_BORDER_COLOR
    JFK_BUTTON_STANDARD_DISABLED_BORDER_COLOR;
@def JFK_BUTTON_MINI_DISABLED_TEXT_COLOR
    JFK_BUTTON_STANDARD_DISABLED_TEXT_COLOR;

@def JFK_BUTTON_MINI_HOVER_BG_COLOR JFK_BUTTON_STANDARD_HOVER_BG_COLOR;
@def JFK_BUTTON_MINI_HOVER_BORDER_COLOR JFK_BUTTON_STANDARD_HOVER_BORDER_COLOR;
@def JFK_BUTTON_MINI_HOVER_TEXT_SHADOW 0px 1px rgba(0,0,0,0.3);
@def JFK_BUTTON_MINI_HOVER_GRADIENT JFK_BUTTON_STANDARD_HOVER_GRADIENT;

@def JFK_BUTTON_MINI_ACTIVE_BOX_SHADOW JFK_BUTTON_STANDARD_ACTIVE_BOX_SHADOW;

@def JFK_BUTTON_MINI_FOCUS_BORDER_COLOR JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR;

@def JFK_BUTTON_MINI_FOCUS_OUTLINE_IE8_FALLBACK
    1px solid JFK_BUTTON_MINI_BG_COLOR;

@def JFK_BUTTON_MINI_CHECKED_GRADIENT top,#eee,#e0e0e0;
@def JFK_BUTTON_MINI_CHECKED_GRADIENT_FALLBACK_COLOR #e0e0e0;
@def JFK_BUTTON_MINI_CHECKED_BG_COLOR #999;
@def JFK_BUTTON_MINI_CHECKED_BORDER 1px solid JFK_BUTTON_STANDARD_SELECTED_BORDER_COLOR;
@def JFK_BUTTON_MINI_CHECKED_BOX_SHADOW JFK_BUTTON_STANDARD_ACTIVE_BOX_SHADOW;
@def JFK_BUTTON_MINI_CHECKED_TEXT_COLOR #333;

/*
 * The following defs are used for the contrast buttons.
 */
@def JFK_BUTTON_CONTRAST_BG_COLOR JFK_BUTTON_STANDARD_BG_COLOR;
@def JFK_BUTTON_CONTRAST_BORDER_COLOR JFK_BUTTON_STANDARD_BORDER_COLOR;
@def JFK_BUTTON_CONTRAST_BORDER_COLOR_RGBA JFK_BUTTON_STANDARD_BORDER_COLOR_RGBA;
@def JFK_BUTTON_CONTRAST_GRADIENT JFK_BUTTON_STANDARD_GRADIENT;
@def JFK_BUTTON_CONTRAST_TEXT_COLOR JFK_BUTTON_STANDARD_TEXT_COLOR;
@def JFK_BUTTON_CONTRAST_BOX_SHADOW JFK_BUTTON_STANDARD_BOX_SHADOW;

@def JFK_BUTTON_CONTRAST_HOVER_BG_COLOR JFK_BUTTON_STANDARD_HOVER_BG_COLOR;
@def JFK_BUTTON_CONTRAST_HOVER_BORDER_COLOR JFK_BUTTON_STANDARD_HOVER_BORDER_COLOR;
@def JFK_BUTTON_CONTRAST_HOVER_GRADIENT JFK_BUTTON_STANDARD_HOVER_GRADIENT;
@def JFK_BUTTON_CONTRAST_HOVER_TEXT_COLOR JFK_BUTTON_STANDARD_HOVER_TEXT_COLOR;
@def JFK_BUTTON_CONTRAST_HOVER_BOX_SHADOW JFK_BUTTON_STANDARD_HOVER_BOX_SHADOW;

@def JFK_BUTTON_CONTRAST_ACTIVE_BG_COLOR JFK_BUTTON_STANDARD_ACTIVE_BG_COLOR;
@def JFK_BUTTON_CONTRAST_ACTIVE_BOX_SHADOW JFK_BUTTON_STANDARD_ACTIVE_BOX_SHADOW;

@def JFK_BUTTON_CONTRAST_SELECTED_BG_COLOR JFK_BUTTON_STANDARD_SELECTED_BG_COLOR;
@def JFK_BUTTON_CONTRAST_SELECTED_BORDER_COLOR JFK_BUTTON_STANDARD_SELECTED_BORDER_COLOR;
@def JFK_BUTTON_CONTRAST_SELECTED_GRADIENT JFK_BUTTON_STANDARD_SELECTED_GRADIENT;
@def JFK_BUTTON_CONTRAST_SELECTED_TEXT_COLOR JFK_BUTTON_STANDARD_SELECTED_TEXT_COLOR;

@def JFK_BUTTON_CONTRAST_CHECKED_BG_COLOR JFK_BUTTON_STANDARD_CHECKED_BG_COLOR;
@def JFK_BUTTON_CONTRAST_CHECKED_BORDER_COLOR JFK_BUTTON_STANDARD_CHECKED_BORDER_COLOR;
@def JFK_BUTTON_CONTRAST_CHECKED_GRADIENT JFK_BUTTON_STANDARD_CHECKED_GRADIENT;
@def JFK_BUTTON_CONTRAST_CHECKED_TEXT_COLOR JFK_BUTTON_STANDARD_CHECKED_TEXT_COLOR;
@def JFK_BUTTON_CONTRAST_CHECKED_BOX_SHADOW JFK_BUTTON_STANDARD_CHECKED_BOX_SHADOW;

@def JFK_BUTTON_CONTRAST_DISABLED_BG_COLOR JFK_BUTTON_STANDARD_DISABLED_BG_COLOR;
@def JFK_BUTTON_CONTRAST_DISABLED_BORDER_COLOR JFK_BUTTON_STANDARD_DISABLED_BORDER_COLOR;
@def JFK_BUTTON_CONTRAST_DISABLED_TEXT_COLOR JFK_BUTTON_STANDARD_DISABLED_TEXT_COLOR;

@def JFK_BUTTON_CONTRAST_FOCUS_BORDER_COLOR JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR;
@def JFK_BUTTON_CONTRAST_FOCUS_OUTLINE JFK_BUTTON_STANDARD_FOCUS_OUTLINE;
@def JFK_BUTTON_CONTRAST_FOCUS_CLEAR_OUTLINE JFK_BUTTON_STANDARD_FOCUS_CLEAR_OUTLINE;

@def JFK_BUTTON_CONTRAST_ICON_OPACITY JFK_BUTTON_STANDARD_ICON_OPACITY;
@def JFK_BUTTON_CONTRAST_ICON_HOVER_OPACITY JFK_BUTTON_STANDARD_ICON_HOVER_OPACITY;
@def JFK_BUTTON_CONTRAST_ICON_DISABLED_FILTER JFK_BUTTON_STANDARD_ICON_DISABLED_FILTER;
@def JFK_BUTTON_CONTRAST_ICON_DISABLED_OPACITY JFK_BUTTON_STANDARD_ICON_DISABLED_OPACITY;

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/basebutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for jfk.Button.
 *
 * @author nnaze@google.com (Nathan Naze)
 */

@provide 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

/*
 * NOTE(chrishenry): Do not add pointer-events: none; to disabled button.
 * TooltipManager requires pointer events to show tooltips. We still
 * want to show tooltip for disabled buttons to conform with default
 * browser behavior and so that users still can figure out what a
 * button means. This is especially important since Kennedy design
 * utilizes image caption in place of text caption.
 */

/* Common button styles */
.jfk-button {
  @mixin border_radius(JFK_BUTTON_COMMON_BORDER_RADIUS);

  cursor: JFK_BUTTON_COMMON_CURSOR;
  font-size: JFK_BUTTON_COMMON_FONT_SIZE;
  font-weight: JFK_BUTTON_COMMON_FONT_WEIGHT;
  text-align: center;
  white-space: nowrap;

  margin-right: 16px;

  /* dimensions */
  height: JFK_BUTTON_COMMON_HEIGHT;
  line-height: JFK_BUTTON_COMMON_HEIGHT;
  min-width: 54px;
  outline: 0px;
  padding: 0 8px;
}

.jfk-button-hover {
  @mixin box_shadow(JFK_BUTTON_COMMON_HOVER_BOX_SHADOW);
}

.jfk-button-selected {
  @mixin box_shadow(inset 0px 1px 2px rgba(0, 0, 0, 0.1));
}

/* Icon and label content styles */

.jfk-button .jfk-button-img {
  margin-top: -3px;
  vertical-align: middle;
}

.jfk-button-label {
  margin-left: 5px;
}

/* Width */

.jfk-button-narrow {
  min-width:34px;
  padding:0;
}

/* Collapsed buttons */

/*
 * To create the collapsed button, we actually overlap the collapsed buttons
 * by 1px, causing the left border of the right button to overlap on top
 * of the left button. In the following 3 rules, we add z-indices such
 * that the correct border is visible.
 */
.jfk-button-collapse-left, .jfk-button-collapse-right {
  z-index: 1;
}

.jfk-button-collapse-left.jfk-button-disabled {
  z-index: 0;
}

.jfk-button-checked.jfk-button-collapse-left,
.jfk-button-checked.jfk-button-collapse-right {
  z-index: 2
}

.jfk-button-collapse-left:focus,
.jfk-button-collapse-right:focus,
.jfk-button-hover.jfk-button-collapse-left,
.jfk-button-hover.jfk-button-collapse-right {
  z-index: 3;
}

/*
 * NOTE(chrishenry): goog.ui.Button already has a logic to determine
 * whether to add jfk-button-collapse-left or -right class name correctly
 * depending on whether the button is LTR/RTL. So we should not let
 * the css compiler performs flipping in these 2 selectors.
 */
.jfk-button-collapse-left {
  /* Causes border to overlap with neighboring button to form a 1px border. */
  /* @noflip */ margin-left: -1px;

  /* @noflip */ -moz-border-radius-bottomleft: 0;
  /* @noflip */ -moz-border-radius-topleft: 0;
  /* @noflip */ -webkit-border-bottom-left-radius: 0;
  /* @noflip */ -webkit-border-top-left-radius: 0;
  /* @noflip */ border-bottom-left-radius: 0;
  /* @noflip */ border-top-left-radius: 0;
}

.jfk-button-collapse-right {
  /* @noflip */ margin-right: 0px;

  /* @noflip */ -moz-border-radius-topright: 0;
  /* @noflip */ -moz-border-radius-bottomright: 0;
  /* @noflip */ -webkit-border-top-right-radius: 0;
  /* @noflip */ -webkit-border-bottom-right-radius: 0;
  /* @noflip */ border-top-right-radius: 0;
  /* @noflip */ border-bottom-right-radius: 0;
}

/* Disabled button */

/*
 * NOTE(chrishenry): disabled button should not have :active state.
 * One option is to specify active state using jfk-button-active
 * class name provided by Closure to style active button (which will
 * not be activated on disabled button). We opted to use :active
 * instead (for better performance), hence requiring us to override
 * all :active style for disabled button. Currently, this is only
 * box-shadow.
 */
.jfk-button.jfk-button-disabled:active {
  @mixin box_shadow(none);
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/actionbutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for the action jfk.Button (jfk.ActionButton).
 *
 * @author nnaze@google.com (Nathan Naze)
 */

@provide 'jfk.button.actionButton';
@require 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

.jfk-button-action {
  @mixin box_shadow(JFK_BUTTON_ACTION_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_ACTION_GRADIENT, JFK_BUTTON_ACTION_BG_COLOR);

  border: 1px solid JFK_BUTTON_ACTION_BORDER_COLOR;
  color: JFK_BUTTON_ACTION_TEXT_COLOR;
}

/* Keep styles in order -- hover, focus, active */

.jfk-button-action.jfk-button-hover {
  @mixin box_shadow(JFK_BUTTON_ACTION_HOVER_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_ACTION_HOVER_GRADIENT, JFK_BUTTON_ACTION_HOVER_BG_COLOR);

  border: 1px solid JFK_BUTTON_ACTION_HOVER_BORDER_COLOR;
  border-bottom-color: JFK_BUTTON_ACTION_HOVER_BOTTOM_BORDER_COLOR;
}

.jfk-button-action:focus {
  @mixin jfk_button_focus(JFK_BUTTON_ACTION_FOCUS_OUTLINE_IE8_FALLBACK);
}

/* This class is applied to clear the above :focus style. */
.jfk-button-action.jfk-button-clear-outline {
  @mixin box_shadow(none);
  outline: JFK_BUTTON_ACTION_CLEAR_OUTLINE;
}

.jfk-button-action:active {
  @mixin box_shadow(JFK_BUTTON_ACTION_ACTIVE_BOX_SHADOW);
  background: JFK_BUTTON_ACTION_ACTIVE_BG_COLOR;
  border: 1px solid JFK_BUTTON_ACTION_ACTIVE_BORDER_COLOR;
  border-top: 1px solid JFK_BUTTON_ACTION_ACTIVE_TOP_BORDER_COLOR;
}

.jfk-button-action.jfk-button-disabled {
  background: JFK_BUTTON_ACTION_BG_COLOR;
  filter: alpha(opacity=50);
  opacity: 0.5;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/defaultbutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for the default jfk.Button (jfk.DefaultButton).
 *
 * @author nnaze@google.com (Nathan Naze)
 */

@provide 'jfk.button.defaultButton';
@require 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

@def JFK_BUTTON_DEFAULT_BG_COLOR #3d9400;
@def JFK_BUTTON_DEFAULT_BORDER_COLOR #29691d;
@def JFK_BUTTON_DEFAULT_GRADIENT top,#3d9400,#398a00;
@def JFK_BUTTON_DEFAULT_TEXT_COLOR #fff;
@def JFK_BUTTON_DEFAULT_TEXT_SHADOW 0px 1px rgba(0,0,0,0.1);
@def JFK_BUTTON_DEFAULT_BOX_SHADOW none;

@def JFK_BUTTON_DEFAULT_HOVER_BG_COLOR #368200;
@def JFK_BUTTON_DEFAULT_HOVER_BORDER_COLOR #2d6200;
@def JFK_BUTTON_DEFAULT_HOVER_BOTTOM_BORDER_COLOR JFK_BUTTON_DEFAULT_HOVER_BORDER_COLOR;
@def JFK_BUTTON_DEFAULT_HOVER_GRADIENT top,#3d9400,#368200;
@def JFK_BUTTON_DEFAULT_HOVER_TEXT_SHADOW 0px 1px rgba(0,0,0,0.3);
@def JFK_BUTTON_DEFAULT_HOVER_BOX_SHADOW none;

@def JFK_BUTTON_DEFAULT_ACTIVE_BOX_SHADOW inset 0px 1px 2px rgba(0, 0, 0, 0.3);
@def JFK_BUTTON_DEFAULT_ACTIVE_BG_COLOR JFK_BUTTON_DEFAULT_HOVER_BG_COLOR;
@def JFK_BUTTON_DEFAULT_ACTIVE_BORDER_COLOR JFK_BUTTON_DEFAULT_HOVER_BORDER_COLOR;
@def JFK_BUTTON_DEFAULT_ACTIVE_TOP_BORDER_COLOR JFK_BUTTON_DEFAULT_HOVER_BORDER_COLOR;

@def JFK_BUTTON_DEFAULT_CLEAR_FOCUS_OUTLINE none;

@def JFK_BUTTON_DEFAULT_FOCUS_OUTLINE_IE8_FALLBACK
    1px solid JFK_BUTTON_DEFAULT_BG_COLOR;

.jfk-button-default {
  @mixin box_shadow(JFK_BUTTON_DEFAULT_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_DEFAULT_GRADIENT, JFK_BUTTON_DEFAULT_BG_COLOR);

  border: 1px solid JFK_BUTTON_DEFAULT_BORDER_COLOR;
  color: JFK_BUTTON_DEFAULT_TEXT_COLOR;
  text-shadow: JFK_BUTTON_DEFAULT_TEXT_SHADOW;
}

/* Keep styles in order -- hover, focus, active */

.jfk-button-default.jfk-button-hover {
  @mixin box_shadow(JFK_BUTTON_DEFAULT_HOVER_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_DEFAULT_HOVER_GRADIENT, JFK_BUTTON_DEFAULT_HOVER_BG_COLOR);

  border: 1px solid JFK_BUTTON_DEFAULT_HOVER_BORDER_COLOR;
  border-bottom: 1px solid JFK_BUTTON_DEFAULT_HOVER_BOTTOM_BORDER_COLOR;
  text-shadow: JFK_BUTTON_DEFAULT_HOVER_TEXT_SHADOW;
}

.jfk-button-default:focus {
  @mixin jfk_button_focus(JFK_BUTTON_DEFAULT_FOCUS_OUTLINE_IE8_FALLBACK);
}

/* This class is applied to clear the above :focus style. */
.jfk-button-default.jfk-button-clear-outline {
  @mixin box_shadow(none);
  outline: JFK_BUTTON_DEFAULT_CLEAR_FOCUS_OUTLINE;
}

.jfk-button-default:active {
  @mixin box_shadow(JFK_BUTTON_DEFAULT_ACTIVE_BOX_SHADOW);
  background: JFK_BUTTON_DEFAULT_ACTIVE_BG_COLOR;
  border: 1px solid JFK_BUTTON_DEFAULT_ACTIVE_BORDER_COLOR;
  border-top: 1px solid JFK_BUTTON_DEFAULT_ACTIVE_TOP_BORDER_COLOR;
}

.jfk-button-default.jfk-button-disabled {
  background: JFK_BUTTON_DEFAULT_BG_COLOR;
  filter: alpha(opacity=50);
  opacity: 0.5;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/flatbutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for flat jfk.Button.
 *
 * @author mariakhomenko@google.com (Maria Khomenko)
 */

@provide 'jfk.button.flatButton';

@require 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

.jfk-button-flat {
  @mixin border_radius(0);

  border: 1px solid transparent;
  font-size: JFK_BUTTON_BORDERLESS_FONT_SIZE;
  font-weight: JFK_BUTTON_BORDERLESS_FONT_WEIGHT;

  /* override dimensions of base button */
  height: 21px;
  line-height: 21px;
  margin-right: 1px;
  min-width: 0;
  padding: 0;
}

.jfk-button-flat.jfk-button-hover,
.jfk-button-flat.jfk-button-selected,
.jfk-button-flat:focus,
.jfk-button-flat:active {
  @mixin box_shadow(none);
}

.jfk-button-flat .jfk-button-img {
  height: 21px;
  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_BUTTON_STANDARD_ICON_OPACITY;
  width: 21px;
}

.jfk-button-flat .jfk-button-label {
  display: inline-block;
  margin: 0;
  padding: 0 1px;
}

.jfk-button-flat.jfk-button-selected .jfk-button-img,
.jfk-button-flat.jfk-button-hover .jfk-button-img {
  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_BUTTON_STANDARD_ICON_HOVER_OPACITY;
}

.jfk-button-flat.jfk-button-disabled .jfk-button-img {
  filter: JFK_BUTTON_STANDARD_ICON_DISABLED_FILTER;
  opacity: JFK_BUTTON_STANDARD_ICON_DISABLED_OPACITY;
}

.jfk-button-flat:focus {
  border: 1px solid JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR;
}

/* This class is applied to clear the above :focus style. */
.jfk-button-flat.jfk-button-clear-outline {
  border: 1px solid transparent;
}

} /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/minibutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for the mini jfk.Button (jfk.MiniButton).
 *
 * @author ziegs@google.com (Matt Ziegelbaum)
 */

@provide 'jfk.button.miniButton';

@require 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

.jfk-button-mini {
  @mixin linear_gradient(
      JFK_BUTTON_MINI_GRADIENT, JFK_BUTTON_MINI_BG_COLOR);

  /* @alternate */ border: 1px solid JFK_BUTTON_MINI_BORDER_COLOR;
  /* @alternate */ border: 1px solid JFK_BUTTON_MINI_BORDER_COLOR_RGBA;
  color: JFK_BUTTON_MINI_TEXT_COLOR;
  height: JFK_BUTTON_MINI_HEIGHT;
  line-height: JFK_BUTTON_MINI_HEIGHT;
  min-width: 22px;
  text-shadow: JFK_BUTTON_MINI_TEXT_SHADOW;
}

.jfk-button-mini.jfk-button-hover,
.jfk-button-mini.jfk-button-clear-outline.jfk-button-hover {
  @mixin linear_gradient(
      JFK_BUTTON_MINI_HOVER_GRADIENT, JFK_BUTTON_MINI_HOVER_BG_COLOR);
  border: 1px solid JFK_BUTTON_MINI_HOVER_BORDER_COLOR;
  text-shadow: JFK_BUTTON_MINI_HOVER_TEXT_SHADOW;
}

.jfk-button-mini:active {
  @mixin box_shadow(JFK_BUTTON_MINI_ACTIVE_BOX_SHADOW);
}

.jfk-button-mini.jfk-button-checked,
.jfk-button-mini.jfk-button-clear-outline.jfk-button-checked {
  @mixin box_shadow(JFK_BUTTON_MINI_CHECKED_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_MINI_CHECKED_GRADIENT,
      JFK_BUTTON_MINI_CHECKED_GRADIENT_FALLBACK_COLOR);
  border: JFK_BUTTON_MINI_CHECKED_BORDER;
  color: JFK_BUTTON_MINI_CHECKED_TEXT_COLOR;
}

.jfk-button-mini:focus {
  border: 1px solid JFK_BUTTON_MINI_FOCUS_BORDER_COLOR;
}

.jfk-button-mini.jfk-button-clear-outline {
  border: 1px solid JFK_BUTTON_MINI_BORDER_COLOR;
}

.jfk-button-mini.jfk-button-disabled {
  background: JFK_BUTTON_MINI_DISABLED_BG_COLOR;
  /* @alternate */ border: 1px solid JFK_BUTTON_MINI_DISABLED_BORDER_COLOR;
  /* @alternate */ border: 1px solid rgba(0,0,0,0.05);
  color: JFK_BUTTON_MINI_DISABLED_TEXT_COLOR;
}

}  /* @if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/primarybutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for the primary jfk.Button (jfk.PrimaryButton).
 *
 * @author nnaze@google.com (Nathan Naze)
 */

@provide 'jfk.button.primaryButton';
@require 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

@def JFK_BUTTON_PRIMARY_BG_COLOR #d14836;
@def JFK_BUTTON_PRIMARY_BORDER_COLOR transparent;
@def JFK_BUTTON_PRIMARY_GRADIENT top,#dd4b39,#d14836;
@def JFK_BUTTON_PRIMARY_TEXT_COLOR #fff;
@def JFK_BUTTON_PRIMARY_TEXT_SHADOW 0px 1px rgba(0, 0, 0, 0.1);
@def JFK_BUTTON_PRIMARY_BOX_SHADOW none;
@def JFK_BUTTON_PRIMARY_TEXT_TRANSFORM uppercase;

@def JFK_BUTTON_PRIMARY_HOVER_BG_COLOR #c53727;
@def JFK_BUTTON_PRIMARY_HOVER_BORDER_COLOR #b0281a;
@def JFK_BUTTON_PRIMARY_HOVER_BOTTOM_BORDER_COLOR #af301f;
@def JFK_BUTTON_PRIMARY_HOVER_GRADIENT top,#dd4b39,#c53727;
@def JFK_BUTTON_PRIMARY_HOVER_BOX_SHADOW 0px 1px 1px rgba(0, 0, 0, 0.2);

@def JFK_BUTTON_PRIMARY_ACTIVE_BG_COLOR #b0281a;
@def JFK_BUTTON_PRIMARY_ACTIVE_BORDER_COLOR #992a1b;
@def JFK_BUTTON_PRIMARY_ACTIVE_GRADIENT top,#dd4b39,#b0281a;
@def JFK_BUTTON_PRIMARY_ACTIVE_BOX_SHADOW inset 0px 1px 2px rgba(0, 0, 0, 0.3);
@def JFK_BUTTON_PRIMARY_ACTIVE_TOP_BORDER_COLOR
    JFK_BUTTON_PRIMARY_ACTIVE_BORDER_COLOR;

@def JFK_BUTTON_PRIMARY_CLEAR_FOCUS_OUTLINE none;

@def JFK_BUTTON_PRIMARY_FOCUS_OUTLINE_IE8_FALLBACK
    1px solid JFK_BUTTON_PRIMARY_BG_COLOR;

.jfk-button-primary {
  @mixin box_shadow(JFK_BUTTON_PRIMARY_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_PRIMARY_GRADIENT, JFK_BUTTON_PRIMARY_BG_COLOR);

  border: 1px solid JFK_BUTTON_PRIMARY_BORDER_COLOR;
  color: JFK_BUTTON_PRIMARY_TEXT_COLOR;
  text-shadow: JFK_BUTTON_PRIMARY_TEXT_SHADOW;
  text-transform: JFK_BUTTON_PRIMARY_TEXT_TRANSFORM;
}

/* Keep styles in order -- hover, focus, active */

.jfk-button-primary.jfk-button-hover {
  @mixin box_shadow(JFK_BUTTON_PRIMARY_HOVER_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_PRIMARY_HOVER_GRADIENT, JFK_BUTTON_PRIMARY_HOVER_BG_COLOR);

  border: 1px solid JFK_BUTTON_PRIMARY_HOVER_BORDER_COLOR;
  border-bottom-color: JFK_BUTTON_PRIMARY_HOVER_BOTTOM_BORDER_COLOR;
}

.jfk-button-primary:focus {
  @mixin jfk_button_focus(JFK_BUTTON_PRIMARY_FOCUS_OUTLINE_IE8_FALLBACK);
}

/* This class is applied to clear the above :focus style. */
.jfk-button-primary.jfk-button-clear-outline {
  @mixin box_shadow(none);
  outline: JFK_BUTTON_PRIMARY_CLEAR_FOCUS_OUTLINE;
}

.jfk-button-primary:active {
  @mixin box_shadow(JFK_BUTTON_PRIMARY_ACTIVE_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_PRIMARY_ACTIVE_GRADIENT, JFK_BUTTON_PRIMARY_ACTIVE_BG_COLOR);

  border: 1px solid JFK_BUTTON_PRIMARY_ACTIVE_BORDER_COLOR;
  border-top: 1px solid JFK_BUTTON_PRIMARY_ACTIVE_TOP_BORDER_COLOR;
}

.jfk-button-primary.jfk-button-disabled {
  background: JFK_BUTTON_PRIMARY_BG_COLOR;
  filter: alpha(opacity=50);
  opacity: 0.5;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/button/standardbutton.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for the standard jfk.Button (jfk.StandardButton).
 *
 * @author nnaze@google.com (Nathan Naze)
 */

@provide 'jfk.button.standardButton';
@require 'jfk.button.baseButton';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

.jfk-button-standard {
  @mixin box_shadow(JFK_BUTTON_STANDARD_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_GRADIENT, JFK_BUTTON_STANDARD_BG_COLOR);

  color: JFK_BUTTON_STANDARD_TEXT_COLOR;
  /* @alternate */ border: 1px solid JFK_BUTTON_STANDARD_BORDER_COLOR;
  /* @alternate */ border: 1px solid JFK_BUTTON_STANDARD_BORDER_COLOR_RGBA;
}

.jfk-button-standard.jfk-button-hover,
.jfk-button-standard.jfk-button-clear-outline.jfk-button-hover {
  @mixin box_shadow(JFK_BUTTON_STANDARD_HOVER_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_HOVER_GRADIENT, JFK_BUTTON_STANDARD_HOVER_BG_COLOR);

  border: 1px solid JFK_BUTTON_STANDARD_HOVER_BORDER_COLOR;
  color: JFK_BUTTON_STANDARD_HOVER_TEXT_COLOR;
}

.jfk-button-standard:active,
.jfk-button-standard.jfk-button-hover:active {
  @mixin box_shadow(JFK_BUTTON_STANDARD_ACTIVE_BOX_SHADOW);
  background: JFK_BUTTON_STANDARD_ACTIVE_BG_COLOR;
  color: JFK_BUTTON_STANDARD_ACTIVE_TEXT_COLOR;
}

.jfk-button-standard.jfk-button-selected,
.jfk-button-standard.jfk-button-clear-outline.jfk-button-selected {
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_SELECTED_GRADIENT,
      JFK_BUTTON_STANDARD_SELECTED_BG_COLOR);

  border: 1px solid JFK_BUTTON_STANDARD_SELECTED_BORDER_COLOR;
  color: JFK_BUTTON_STANDARD_SELECTED_TEXT_COLOR;
}

.jfk-button-standard.jfk-button-checked,
.jfk-button-standard.jfk-button-clear-outline.jfk-button-checked {
  @mixin box_shadow(JFK_BUTTON_STANDARD_CHECKED_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_CHECKED_GRADIENT,
      JFK_BUTTON_STANDARD_CHECKED_BG_COLOR);

  border: 1px solid JFK_BUTTON_STANDARD_CHECKED_BORDER_COLOR;
  color: JFK_BUTTON_STANDARD_CHECKED_TEXT_COLOR;
}

.jfk-button-standard:focus {
  border: 1px solid JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR;
  outline: JFK_BUTTON_STANDARD_FOCUS_OUTLINE;
}

/* This class is applied to clear the above :focus style. */
.jfk-button-standard.jfk-button-clear-outline {
  /* @alternate */ border: 1px solid JFK_BUTTON_STANDARD_BORDER_COLOR;
  /* @alternate */ border: 1px solid JFK_BUTTON_STANDARD_BORDER_COLOR_RGBA;
  outline: JFK_BUTTON_STANDARD_FOCUS_CLEAR_OUTLINE;
}

.jfk-button-standard.jfk-button-disabled {
  background: JFK_BUTTON_STANDARD_DISABLED_BG_COLOR;
  /* @alternate */ border: 1px solid JFK_BUTTON_STANDARD_DISABLED_BORDER_COLOR;
  /* @alternate */ border: 1px solid rgba(0,0,0,0.05);
  color: JFK_BUTTON_STANDARD_DISABLED_TEXT_COLOR;
}

/* For the standard button, the icon opacity should change on hover
   and selection. */

/* TODO(nnaze): These opacity values need to be changed for when we have
   all-black image assets. */

.jfk-button-standard .jfk-button-img {
  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_BUTTON_STANDARD_ICON_OPACITY;
}

.jfk-button-standard.jfk-button-checked .jfk-button-img,
.jfk-button-standard.jfk-button-selected .jfk-button-img,
.jfk-button-standard.jfk-button-hover .jfk-button-img {
  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_BUTTON_STANDARD_ICON_HOVER_OPACITY;
}

.jfk-button-standard.jfk-button-disabled .jfk-button-img {
  filter: JFK_BUTTON_STANDARD_ICON_DISABLED_FILTER;
  opacity: JFK_BUTTON_STANDARD_ICON_DISABLED_OPACITY;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/jfkwrappers/button/button.gss */
/**
 * Styles for jfkButton module.
 *
 * @provide {ng.jfk.button}
 *
 * @require {jfk.button.actionButton}
 * @require {jfk.button.defaultButton}
 * @require {jfk.button.primaryButton}
 * @require {jfk.button.standardButton}
 * @require {jfk.button.flatButton}
 * @require {jfk.button.miniButton}
 */

.jfk-segmented-button-group {
  /* To collapse any whitespace text nodes intermingled between the buttons. */
  font-size: 0;

  /* So the buttons stay on the same line and don't wrap. */
  white-space: nowrap;
}

/* javascript/jfk/checkbox/checkbox.gss */
/**
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * Styles for the Kennedy checkbox.
 *
 * @author gkuznetsov@google.com (Gleb Kuznetsov)
 */

@provide 'jfk.checkbox';
@require 'jfk.gss.mixin';


@if (!DISABLE_KENNEDY) {

@def JFK_CHECKBOX_BG_COLOR         rgba(255,255,255,.05);
@def JFK_CHECKBOX_FALLBACK_BORDER  1px solid #c6c6c6;
@def JFK_CHECKBOX_BORDER           1px solid rgba(155, 155, 155, .57);
@def JFK_CHECKBOX_BORDER_RADIUS    1px;

@def JFK_CHECKBOX_UNDETERMINED_URL
    url(//ssl.gstatic.com/ui/v1/menu/checkmark-partial.png);
@def JFK_CHECKBOX_CHECKED_URL
    url(//ssl.gstatic.com/ui/v1/menu/checkmark.png);
@def JFK_CHECKBOX_UNDETERMINED_2X_URL
    url(//ssl.gstatic.com/ui/v1/menu/checkmark-partial_2x.png);
@def JFK_CHECKBOX_CHECKED_2X_URL
    url(//ssl.gstatic.com/ui/v1/menu/checkmark_2x.png);

@def JFK_CHECKBOX_UNDETERMINED_BG
    JFK_CHECKBOX_UNDETERMINED_URL no-repeat -5px -3px;
@def JFK_CHECKBOX_CHECKED_BG
    JFK_CHECKBOX_CHECKED_URL no-repeat -5px -3px;

@def JFK_CHECKBOX_HOVER_BORDER                  1px solid #b2b2b2;

@def JFK_CHECKBOX_ACTIVE_BG_COLOR               #ebebeb;

@def JFK_CHECKBOX_CHECKED_FALLBACK_BG_COLOR     #fff;
@def JFK_CHECKBOX_CHECKED_BG_COLOR              rgba(255, 255, 255, .65);

@def JFK_CHECKBOX_UNDETERMINED_FALLBACK_BG_COLOR
    JFK_CHECKBOX_CHECKED_FALLBACK_BG_COLOR;
@def JFK_CHECKBOX_UNDETERMINED_BG_COLOR
    JFK_CHECKBOX_CHECKED_BG_COLOR;

@def JFK_CHECKBOX_DISABLED_BG_COLOR             #fff;
@def JFK_CHECKBOX_DISABLED_BORDER               1px solid #f1f1f1;

@def JFK_CHECKBOX_FOCUSED_BORDER                1px solid #4d90fe;

/* Font size applied to the checkbox to fix an IE6 rendering issue */
@def JFK_CHECKBOX_IE6_FIX_FONT_SIZE  1px;

.jfk-checkbox {
  @mixin border_radius(JFK_CHECKBOX_BORDER_RADIUS);

  background-color: JFK_CHECKBOX_BG_COLOR;
  /* @alternate */ border: JFK_CHECKBOX_FALLBACK_BORDER;
  /* @alternate */ border: JFK_CHECKBOX_BORDER;
  font-size: JFK_CHECKBOX_IE6_FIX_FONT_SIZE;
  height: 11px;
  margin: 0px 4px 0px 1px;
  outline: 0;
  vertical-align: text-bottom;
  width: 11px;
}

.jfk-checkbox-undetermined {
  /* @alternate */ background-color:
      JFK_CHECKBOX_UNDETERMINED_FALLBACK_BG_COLOR;
  /* @alternate */ background-color: JFK_CHECKBOX_UNDETERMINED_BG_COLOR;
}

.jfk-checkbox-checked {
  /* @alternate */ background-color: JFK_CHECKBOX_CHECKED_FALLBACK_BG_COLOR;
  /* @alternate */ background-color: JFK_CHECKBOX_CHECKED_BG_COLOR;
}

.jfk-checkbox-hover {
  @mixin box_shadow(inset 0px 1px 1px rgba(0, 0, 0, .1));

  border: JFK_CHECKBOX_HOVER_BORDER;
}

.jfk-checkbox-active {
  background-color: JFK_CHECKBOX_ACTIVE_BG_COLOR;
}

.jfk-checkbox-focused {
  border: JFK_CHECKBOX_FOCUSED_BORDER;
}

/*
 * NOTE(chrishenry): We clear the focus outline if users click on the
 * checkbox instead of tabbing into it.
 */
.jfk-checkbox-clearOutline.jfk-checkbox-focused {
  /* @alternate */ border: JFK_CHECKBOX_FALLBACK_BORDER;
  /* @alternate */ border: JFK_CHECKBOX_BORDER;
}

.jfk-checkbox-disabled,
.jfk-checkbox-clearOutline.jfk-checkbox-disabled {
  background-color: JFK_CHECKBOX_DISABLED_BG_COLOR;
  border: JFK_CHECKBOX_DISABLED_BORDER;
  cursor: default;
}

/* Div that allows the checkmark image to be offset from the container box. */

.jfk-checkbox-checkmark {
  /* dimensions */
  height: 15px;
  outline: 0;
  width: 15px;

  /* position */
  left: 0;
  position: relative;
  top: -3px
}

.jfk-checkbox-undetermined .jfk-checkbox-checkmark {
  background: JFK_CHECKBOX_UNDETERMINED_BG;
  /* @alternate */
  background-image: -webkit-image-set(JFK_CHECKBOX_UNDETERMINED_URL 1x,
      JFK_CHECKBOX_UNDETERMINED_2X_URL 2x);
}

.jfk-checkbox-checked .jfk-checkbox-checkmark {
  background: JFK_CHECKBOX_CHECKED_BG;
  /* @alternate */
  background-image: -webkit-image-set(JFK_CHECKBOX_CHECKED_URL 1x,
      JFK_CHECKBOX_CHECKED_2X_URL 2x);
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/components/checkbox/checkbox.gss */
/** Styles for gCheckbox directive */

@provide 'ng.g.checkbox';

@require 'jfk.checkbox';

/**
 * The JFK styles do not position the elements correctly relative to the text
 * line. This CSS rule corrects the offsets.
 */
.jfk-checkbox {
  position: relative;
  top: -2px;
}

/* javascript/jfk/button/slidetoggle.gss */
/**
 * CSS rules for the Slide Toggle component.
 */

@provide 'jfk.button.slideToggle';
@require 'jfk.button.defs';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

@def SLIDE_TOGGLE_CONTAINER_BORDER 1px solid #ccc;
@def SLIDE_TOGGLE_CONTAINER_BORDER_RADIUS 2px;
@def SLIDE_TOGGLE_CONTAINER_BOX_SHADOW inset 0px 1px 2px 0 rgba(0, 0, 0, .1);
@def SLIDE_TOGGLE_CONTAINER_TEXT_COLOR #666;
@def SLIDE_TOGGLE_CONTAINER_GRADIENT top, #eee, #e0e0e0;

@def SLIDE_TOGGLE_ON_BOX_SHADOW inset 0 1px 2px 0 rgba(0, 0, 0, .1);
@def SLIDE_TOGGLE_ON_TEXT_COLOR #fff;
@def SLIDE_TOGGLE_ON_GRADIENT top, #3b93ff, #3689ee;

@def SLIDE_TOGGLE_THUMB_BORDER 1px solid #ccc;
@def SLIDE_TOGGLE_THUMB_BOX_SHADOW 0px 1px 2px 0 rgba(0, 0, 0, .1);
@def SLIDE_TOGGLE_THUMB_GRADIENT top, #f8f8f8, #f1f1f1;

@def SLIDE_TOGGLE_TRANSITION all .130s ease-out;

@def SLIDE_TOGGLE_AFTER_GRADIENT left, #ccc 50%, transparent 50%;

@def SLIDE_TOGGLE_OFF_BORDER_RADIUS 2px 2px 0 0;

/* Sets rules that apply to the toggle container. */
.jfk-slideToggle {
  @mixin border_radius(SLIDE_TOGGLE_CONTAINER_BORDER_RADIUS);
  @mixin box_shadow(SLIDE_TOGGLE_CONTAINER_BOX_SHADOW);
  @mixin linear_gradient(SLIDE_TOGGLE_CONTAINER_GRADIENT, #f5f5f5);

  border: SLIDE_TOGGLE_CONTAINER_BORDER;
  color: SLIDE_TOGGLE_CONTAINER_TEXT_COLOR;
  font-weight: bold;
  height: 27px;
  line-height: 27px;
  margin-right: 16px;
  outline: none;
  overflow: hidden;
  padding: 0;
  position: relative;
  width: 94px;
}

/* Sets rules that apply to all three divs. */
.jfk-slideToggle-on,
.jfk-slideToggle-off,
.jfk-slideToggle-thumb {
  display: inline-block;
  text-align: center;
  text-transform: uppercase;
  width: 47px;
}

/* Sets rules for "on" div. */
.jfk-slideToggle-on {
  @mixin box_shadow(SLIDE_TOGGLE_ON_BOX_SHADOW);
  @mixin linear_gradient(SLIDE_TOGGLE_ON_GRADIENT, #398bf2);

  color: SLIDE_TOGGLE_ON_TEXT_COLOR;
  height: 27px;
}

/* Sets rules for "off" div. */
.jfk-slideToggle-off {
  @mixin border_radius(SLIDE_TOGGLE_OFF_BORDER_RADIUS);
}

/* Sets rules for "thumb" div. */
.jfk-slideToggle-thumb {
  @mixin box_shadow(SLIDE_TOGGLE_THUMB_BOX_SHADOW);
  @mixin linear_gradient(SLIDE_TOGGLE_THUMB_GRADIENT, #f5f5f5);
  @mixin transition(SLIDE_TOGGLE_TRANSITION);

  border: SLIDE_TOGGLE_THUMB_BORDER;
  display: block;
  height: 27px;
  left: -1px;
  position: absolute;
  top: -1px;
}

/* Creates the dot pattern on the slider. */
.jfk-slideToggle-thumb::after {
  content: '';

  background-image:
      -webkit-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -webkit-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -webkit-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -webkit-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -webkit-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT);

  /* @alternate */ background-image:
      -moz-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -moz-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -moz-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -moz-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -moz-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT);

  /* @alternate */ background-image:
      -ms-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -ms-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -ms-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -ms-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -ms-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT);

  /* @alternate */ background-image:
      -o-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -o-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -o-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -o-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      -o-linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT);

  /* @alternate */ background-image:
      linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT),
      linear-gradient(SLIDE_TOGGLE_AFTER_GRADIENT);

  background-position: 0 0, 0 2px, 0 4px, 0 6px, 0 8px;
  background-repeat: repeat-x;
  background-size: 2px 1px;
  display: block;
  height: 9px;
  left: 15px;
  position: absolute;
  top: 9px;
  width: 17px;
}

/* Sets checked behavior for toggle. */
.jfk-slideToggle.jfk-slideToggle-checked .jfk-slideToggle-thumb {
  left: 47px;
}

/* Sets focus behavior for toggle. */
.jfk-slideToggle:focus {
  border: 1px solid JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR;
}

/* This class is applied to clear the above :focus style. */
.jfk-slideToggle.jfk-slideToggle-clearOutline {
  border: SLIDE_TOGGLE_CONTAINER_BORDER;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/components/checkbox/slidetoggle.gss */
/** Styles for gSlideToggle directive */

@provide 'ng.g.slideToggle';

@require 'jfk.button.slideToggle';

/* javascript/jfk/star/star.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for Star component.
 *
 * @author chrishenry@google.com (Chris Henry)
 */

@provide 'jfk.star';

@if (!DISABLE_KENNEDY) {

@def JFK_STAR_URL          url(//ssl.gstatic.com/ui/v1/star/star4.png);
@def JFK_STAR_2X_URL       url(//ssl.gstatic.com/ui/v1/star/star4_2x.png);
@def JFK_STAR_HOVER_URL    url(//ssl.gstatic.com/ui/v1/star/star-hover4.png);
@def JFK_STAR_HOVER_2X_URL url(//ssl.gstatic.com/ui/v1/star/star-hover4_2x.png);
@def JFK_STAR_ACTIVE_URL   url(//ssl.gstatic.com/ui/v1/star/star-active4.png);
@def JFK_STAR_ACTIVE_2X_URL
    url(//ssl.gstatic.com/ui/v1/star/star-active4_2x.png);

@def JFK_STAR_LIT_URL      url(//ssl.gstatic.com/ui/v1/star/star-lit4.png);
@def JFK_STAR_LIT_2X_URL   url(//ssl.gstatic.com/ui/v1/star/star-lit4_2x.png);
@def JFK_STAR_LIT_ACTIVE_URL
    url(//ssl.gstatic.com/ui/v1/star/star-lit-active4.png);
@def JFK_STAR_LIT_ACTIVE_2X_URL
    url(//ssl.gstatic.com/ui/v1/star/star-lit-active4_2x.png);
@def JFK_STAR_LIT_HOVER_URL
    url(//ssl.gstatic.com/ui/v1/star/star-lit-hover4.png);
@def JFK_STAR_LIT_HOVER_2X_URL
    url(//ssl.gstatic.com/ui/v1/star/star-lit-hover4_2x.png);

@def JFK_STAR_WIDTH          19px;
@def JFK_STAR_HEIGHT         19px;

@def JFK_STAR_PADDING    2px;

.jfk-star {
  display: inline-block;
  height: JFK_STAR_HEIGHT;
  text-align: center;
  width: JFK_STAR_WIDTH;
  padding: JFK_STAR_PADDING;
}

.jfk-star:before {
  content: JFK_STAR_URL;
  /* @alternate */
  content: -webkit-image-set(JFK_STAR_URL 1x, JFK_STAR_2X_URL 2x);
}

.jfk-star-hover:before {
  content: JFK_STAR_HOVER_URL;
  /* @alternate */
  content: -webkit-image-set(JFK_STAR_HOVER_URL 1x, JFK_STAR_HOVER_2X_URL 2x);
}

.jfk-star-active:before {
  content: JFK_STAR_ACTIVE_URL;
  /* @alternate */
  content: -webkit-image-set(JFK_STAR_ACTIVE_URL 1x, JFK_STAR_ACTIVE_2X_URL 2x);
}

.jfk-star-checked:before {
  content: JFK_STAR_LIT_URL;
  /* @alternate */
  content: -webkit-image-set(JFK_STAR_LIT_URL 1x, JFK_STAR_LIT_2X_URL 2x);
}

.jfk-star-checked.jfk-star-hover:before {
  content: JFK_STAR_LIT_HOVER_URL;
  /* @alternate */
  content: -webkit-image-set(JFK_STAR_LIT_HOVER_URL 1x,
      JFK_STAR_LIT_HOVER_2X_URL 2x);
}

.jfk-star-checked.jfk-star-active:before {
  content: JFK_STAR_LIT_ACTIVE_URL;
  /* @alternate */
  content: -webkit-image-set(JFK_STAR_LIT_ACTIVE_URL 1x,
      JFK_STAR_LIT_ACTIVE_2X_URL 2x);
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/components/checkbox/star.gss */
/** Styles for gStar directive */

@provide 'ng.g.star';

@require 'jfk.star';

/**
 * The JFK styles do not position the elements correctly relative to the text
 * line. This CSS rule corrects the offsets.
 */
.jfk-star {
  position: relative;
  top: 4px;
}

/* javascript/angular/jfkwrappers/checkbox/checkbox.gss */
/** Styles for jfkCheckbox module. */

@provide 'ng.jfk.checkbox';

@require 'ng.g.checkbox';
@require 'ng.g.slideToggle';
@require 'ng.g.star';

/*
 * The JFK styles do not position the elements correctly relative to the text
 * line. These CSS rules correct the incorrect offsets.
 */
.jfk-star {
  position: relative;
  top: 4px;
}

.jfk-checkbox {
  position: relative;
  top: -2px;
}

/* javascript/angular/jfkwrappers/input/input.gss */
/**
 * Styles for jfkInput module.
 *
 * @provide {ng.jfk.input}
 *
 * @require {jfk.gss.textInput}
 */

/* javascript/jfk/gss/menubutton.gss */
/**
 * Copyright 2010 Google Inc.
 * All Rights Reserved.
 *
 * @author talin@google.com (Talin)
 * @author brettcvz@google.com (Brett van Zuiden)
 */

@provide 'jfk.gss.menuButton';

@require 'jfk.button.defs';
@require 'jfk.gss.base';
@require 'jfk.gss.mixin';

/* Common goog-based styles used by JFK*/

@if (!DISABLE_KENNEDY) {

@def JFK_MENU_BUTTON_MARGIN                   0 2px;
@def JFK_MENU_BUTTON_PADDING                  0 18px 0 6px;
@def JFK_MENU_BUTTON_LINE_HEIGHT              27px;
@def JFK_MENU_BUTTON_MIN_WIDTH                46px;

@def JFK_MENU_BUTTON_DROPDOWN_HALFWIDTH       4px;
@def JFK_MENU_BUTTON_DROPDOWN_HEIGHT          4px;
@def JFK_MENU_BUTTON_DROPDOWN_COLOR           #777;
@def JFK_MENU_BUTTON_DROPDOWN_HOVER_COLOR     #595959;
@def JFK_MENU_BUTTON_DROPDOWN_POSITION_RIGHT  5px;
@def JFK_MENU_BUTTON_DROPDOWN_POSITION_TOP    12px;

.goog-flat-menu-button {
  @mixin border_radius(JFK_BUTTON_COMMON_BORDER_RADIUS);
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_GRADIENT, JFK_BUTTON_STANDARD_BG_COLOR);

  border: 1px solid JFK_BUTTON_STANDARD_BORDER_COLOR;

  color: JFK_BUTTON_STANDARD_TEXT_COLOR;
  cursor: default;
  font-size: JFK_BUTTON_COMMON_FONT_SIZE;
  font-weight: bold;
  line-height: JFK_MENU_BUTTON_LINE_HEIGHT;
  list-style: none;
  margin: JFK_MENU_BUTTON_MARGIN;
  min-width: JFK_MENU_BUTTON_MIN_WIDTH;
  outline: none;
  padding: JFK_MENU_BUTTON_PADDING;
  text-align: center;
  text-decoration: none;
}

.goog-flat-menu-button-disabled {
  background-color: JFK_BUTTON_STANDARD_DISABLED_BG_COLOR;
  border-color: JFK_BUTTON_STANDARD_DISABLED_BORDER_COLOR;
  color: JFK_BUTTON_STANDARD_DISABLED_TEXT_COLOR;
}

.goog-flat-menu-button.goog-flat-menu-button-hover {
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_HOVER_GRADIENT, JFK_BUTTON_STANDARD_HOVER_BG_COLOR);
  @mixin box_shadow(JFK_BUTTON_COMMON_HOVER_BOX_SHADOW);

  border-color: JFK_BUTTON_STANDARD_HOVER_BORDER_COLOR;
  color: JFK_BUTTON_STANDARD_HOVER_TEXT_COLOR;
}

.goog-flat-menu-button.goog-flat-menu-button-focused {
  border-color: JFK_BUTTON_STANDARD_FOCUS_BORDER_COLOR;
}

.goog-flat-menu-button.goog-flat-menu-button-open,
.goog-flat-menu-button.goog-flat-menu-button-active {
  @mixin box_shadow(JFK_BUTTON_STANDARD_CHECKED_BOX_SHADOW);
  @mixin linear_gradient(
      JFK_BUTTON_STANDARD_CHECKED_GRADIENT,
      JFK_BUTTON_STANDARD_CHECKED_BG_COLOR);

  border: 1px solid JFK_BUTTON_STANDARD_CHECKED_BORDER_COLOR;
  color: JFK_BUTTON_STANDARD_SELECTED_TEXT_COLOR;
  z-index: 2;
}

.goog-flat-menu-button-caption {
  vertical-align: top;
  white-space: nowrap;
}

.goog-flat-menu-button-dropdown {
  border-color: JFK_MENU_BUTTON_DROPDOWN_COLOR transparent;
  border-style: solid;
  border-width: JFK_MENU_BUTTON_DROPDOWN_HEIGHT
                JFK_MENU_BUTTON_DROPDOWN_HALFWIDTH
                0
                JFK_MENU_BUTTON_DROPDOWN_HALFWIDTH;
  height: 0;
  width: 0;
  position: absolute;
  right: JFK_MENU_BUTTON_DROPDOWN_POSITION_RIGHT;
  top: JFK_MENU_BUTTON_DROPDOWN_POSITION_TOP;
}

.goog-flat-menu-button .goog-flat-menu-button-img {
  margin-top: -3px;
  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_BUTTON_STANDARD_ICON_OPACITY;
  vertical-align: middle;
}

.goog-flat-menu-button-active .goog-flat-menu-button-img,
.goog-flat-menu-button-open .goog-flat-menu-button-img,
.goog-flat-menu-button-selected .goog-flat-menu-button-img,
.goog-flat-menu-button-hover .goog-flat-menu-button-img {
  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_BUTTON_STANDARD_ICON_HOVER_OPACITY;
}

.goog-flat-menu-button-active .goog-flat-menu-button-dropdown,
.goog-flat-menu-button-open .goog-flat-menu-button-dropdown,
.goog-flat-menu-button-selected .goog-flat-menu-button-dropdown,
.goog-flat-menu-button-hover .goog-flat-menu-button-dropdown {
  border-color: JFK_MENU_BUTTON_DROPDOWN_HOVER_COLOR transparent;
}

/* Properties for collapsing menubuttons against other buttons */

/*
 * To create the collapsed button, we actually overlap the collapsed buttons
 * by 1px, causing the left border of the right button to overlap on top
 * of the left button. In the following 3 rules, we add z-indices such
 * that the correct border is visible.
 */
.goog-flat-menu-button-left, .goog-flat-menu-button-right {
  z-index: 1;
}


.goog-flat-menu-button-left.goog-flat-menu-button-disabled {
  z-index: 0;
}

.goog-flat-menu-button-right:focus,
.goog-flat-menu-button-hover.goog-flat-menu-button-collapse-right {
  z-index: 2;
}

.goog-flat-menu-button-left:focus,
.goog-flat-menu-button-hover.goog-flat-menu-button-collapse-left {
  z-index: 2;
}

.goog-flat-menu-button-collapse-left {
  /* Causes border to overlap with neighboring button to form a 1px border. */
  margin-left: -1px;

  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-topleft: 0;
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  min-width: 0;
  padding-left: 0;
  vertical-align: top;
}

.goog-flat-menu-button-collapse-right {
  margin-right: 0px;

  -moz-border-radius-topright: 0;
  -moz-border-radius-bottomright: 0;
  -webkit-border-top-right-radius: 0;
  -webkit-border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/gss/menuseparator.gss */
/**
 * Copyright 2009 Google Inc, All Rights Reserved
 *
 * Standard styling for menus created by goog.ui.MenuSeparatorRenderer
 *
 * Author: attila@google.com (Attila Bodis)
 * Author: psolderitsch@google.com (Peter Solderitsch)
 */

@provide 'jfk.gss.menuSeparator';
@require 'jfk.gss.base';

/**
 * Kennedy styles have been tweaked from the default Closure values. This file
 * can be considered a drop-in replacement for
 * javascript/closure/css/menuseparator.css
 */

@if (!DISABLE_KENNEDY) {

@def JFK_MENU_SEPARATOR_BORDER_TOP        JFK_BASE_MENU_SEPARATOR;
@def JFK_MENU_SEPARATOR_MARGIN_TOP        6px;
@def JFK_MENU_SEPARATOR_MARGIN_BOTTOM     6px;


.goog-menuseparator {
  border-top: JFK_MENU_SEPARATOR_BORDER_TOP;
  margin-top: JFK_MENU_SEPARATOR_MARGIN_TOP;
  margin-bottom: JFK_MENU_SEPARATOR_MARGIN_BOTTOM;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/gss/submenu.gss */
/**
 * Copyright 2009 Google Inc, All Rights Reserved
 *
 * Standard styling for menus created by goog.ui.MenuItemRenderer
 *
 * Author: attila@google.com (Attila Bodis)
 * Author: psolderitsch@google.com (Peter Solderitsch)
 */

@provide 'jfk.gss.subMenu';

@require 'jfk.gss.base';
@require 'jfk.gss.mixin';

/**
 * Kennedy styles have been tweaked from the default Closure values. This file
 * can be considered a drop-in replacement for
 * javascript/closure/css/submenu.css.
 *
 * NOTE: Because this GSS file maintains full compatibility with the DOM
 * expected by goog.ui.SubMenuRenderer, the styles here may deviate slightly
 * from the full Kennedy UI spec, specifically in the handling of the disclosure
 * arrow, which in the legacy SubMenuRenderer is emitted as Unicode character
 * rather than as an image or pure CSS border.
 */

/*
 * TODO(psolderitsch): Implement a new SubMenuRenderer that generates a more
 * Kennedy-friendly DOM structure, and style it appropriately. This will also
 * fix UI quirks when rendering submenu disclosure arrows that use
 * nonstandard font sizes.
 */

@if (!DISABLE_KENNEDY) {

@def JFK_SUBMENU_ARROW_PADDING_RIGHT         0;
@def JFK_SUBMENU_ARROW_PADDING_TOP           3px;
@def JFK_SUBMENU_ARROW_TEXT_ALIGN            right;
@def JFK_SUBMENU_ARROW_COLOR                 JFK_BASE_MENU_TEXT_COLOR;
@def JFK_SUBMENU_ARROW_RIGHT                 10px;
@def JFK_SUBMENU_ARROW_OPACITY               .5;
@def JFK_SUBMENU_ARROW_OPACITY_HOVER         1.0;
@def JFK_SUBMENU_ARROW_FILTER                alpha(opacity=50);
@def JFK_SUBMENU_ARROW_FILTER_HOVER          alpha(opacity=100);
@def JFK_SUBMENU_ARROW_SIZE                  70%;
@def JFK_SUBMENU_ARROW_HOVER_BORDER_COLOR    #999;
@def JFK_SUBMENU_ARROW_DISABLED_TEXT_COLOR   inherit;
/* TODO(psolderitsch): Move this to base.gss? */
@def JFK_SUBMENU_ARROW_TRANSITION  all 0.218s;


/* State: resting. */
.goog-submenu-arrow {
  @mixin transition(JFK_SUBMENU_ARROW_TRANSITION);
  /* Arrow sizing */
  font-size: JFK_SUBMENU_ARROW_SIZE;

  /* Arrow positioning */
  left: auto;

  right: JFK_SUBMENU_ARROW_RIGHT;
  padding-top: JFK_SUBMENU_ARROW_PADDING_TOP;
  padding-right: JFK_SUBMENU_ARROW_PADDING_RIGHT;
  position: absolute;
  text-align: JFK_SUBMENU_ARROW_TEXT_ALIGN;

  /* Arrow color */
  opacity: JFK_SUBMENU_ARROW_OPACITY;
  filter: JFK_SUBMENU_ARROW_FILTER;
}

/* State: hover. */
.goog-menuitem-highlight .goog-submenu-arrow,
.goog-menuitem-hover .goog-submenu-arrow {
  @mixin transition(none);

  border-left-color: JFK_SUBMENU_ARROW_HOVER_BORDER_COLOR;

  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: JFK_SUBMENU_ARROW_OPACITY_HOVER;
}

/* State: disabled. */
.goog-menuitem-disabled .goog-submenu-arrow {
  color: JFK_SUBMENU_ARROW_DISABLED_TEXT_COLOR;

  /* filter:opacity interacts badly with alpha-channel PNGs on IE8 */
  opacity: 1.0;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/gss/tristatemenuitem.gss */
/**
 * Copyright 2009 Google Inc, All Rights Reserved
 *
 * Standard styling for menus created by goog.ui.TriStateMenuItemRenderer
 *
 * Author: mleibman@google.com (Michael Leibman)
 */

@provide 'jfk.gss.tristateMenuItem';
@require 'jfk.gss.menu';
@require 'jfk.gss.menuItem';

/**
 * Kennedy styles have been tweaked from the default Closure values. This file
 * can be considered a drop-in replacement for
 * javascript/closure/css/tristatemenuitem.css
 *
 * TODO(mleibman):  replace copied rules with mixins
 */

@if (!DISABLE_KENNEDY) {

@def JFK_MENUITEM_TRISTATE_CHECKED_BACKGROUND_IMAGE
    url(//ssl.gstatic.com/ui/v1/menu/tristate-checked.png);

@def JFK_MENUITEM_TRISTATE_PARTIAL_BACKGROUND_IMAGE
    url(//ssl.gstatic.com/ui/v1/menu/tristate-partial.png);

@def JFK_MENUITEM_TRISTATE_EMPTY_BACKGROUND_IMAGE
    url(//ssl.gstatic.com/ui/v1/menu/tristate-unchecked.png);

/* State: hover. */
.goog-tristatemenuitem-highlight,
.goog-tristatemenuitem-hover,
.goog-filterobsmenuitem-highlight,
.goog-filterobsmenuitem-hover {
  background-color: JFK_MENUITEM_HOVER_BG_COLOR;

  /* We set an explicit top and bottom border for high-contrast mode. */
  border-color: JFK_MENUITEM_HOVER_COLOR;
  border-style: dotted;
  border-width: 1px 0;
  padding-top:  JFK_MENUITEM_HOVER_VERTICAL_PADDING;
  padding-bottom: JFK_MENUITEM_HOVER_VERTICAL_PADDING;
}

/* State: selected/checked. */
/* @overrideSelector {jfk.gss.menuItem} */
.goog-menuitem-highlight .goog-menuitem-content {
  color: JFK_MENUITEM_SELECTED_TEXT_COLOR;
}

/* State: selected/checked. */
/* @overrideSelector {jfk.gss.menuItem} */
.goog-menuitem-hover .goog-menuitem-content {
  color: JFK_MENUITEM_SELECTED_TEXT_COLOR;
}

.goog-tristatemenuitem-checkbox {
  background-repeat: no-repeat;
  height: JFK_MENUITEM_CHECKBOX_SIZE;
  left: JFK_MENUITEM_CHECKBOX_LEFT;
  position: absolute;
  right: auto;
  vertical-align: middle;
  width: JFK_MENUITEM_CHECKBOX_SIZE;
}


.goog-tristatemenuitem,
.goog-tristatemenuitem-partially-checked,
.goog-tristatemenuitem-fully-checked {
  background-repeat: JFK_MENUITEM_CHECKBOX_BACKGROUND_REPEAT;
  background-position: JFK_MENUITEM_CHECKBOX_BACKGROUND_POS;
}

/**
 * TODO(chadli): left center here is a workaround for b/10616087  Remove this
 * block once the bug is fixed.
 */
@if (SCS_BIDI) {
  .goog-tristatemenuitem,
  .goog-tristatemenuitem-partially-checked,
  .goog-tristatemenuitem-fully-checked {
    background-position: left center;
  }
}

.goog-tristatemenuitem {
  background-image: JFK_MENUITEM_TRISTATE_EMPTY_BACKGROUND_IMAGE;
}

.goog-tristatemenuitem-partially-checked {
  background-image: JFK_MENUITEM_TRISTATE_PARTIAL_BACKGROUND_IMAGE;
}

.goog-tristatemenuitem-fully-checked {
  background-image: JFK_MENUITEM_TRISTATE_CHECKED_BACKGROUND_IMAGE;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/menu/freestandingmenubutton.gss */
/**
 * Copyright 2011 Google Inc.
 * All Rights Reserved.
 *
 * @author psolderitsch@google.com (Peter Solderitsch)
 */

@provide 'jfk.menu.freestandingMenuButton';
@require 'jfk.gss.base';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

@def JFK_FREESTANDING_MENU_BUTTON_BORDER              1px solid #e5e5e5;
@def JFK_FREESTANDING_MENU_BUTTON_HEIGHT              11px;
@def JFK_FREESTANDING_MENU_BUTTON_HOVER_BORDER_COLOR  #c6c6c6;
@def JFK_FREESTANDING_MENU_BUTTON_WIDTH               11px;

@def JFK_FREESTANDING_MENU_BUTTON_BACKGROUND
    url(//ssl.gstatic.com/ui/v1/disclosure/light-grey-disclosure-arrow-down.png)
    center no-repeat;

@def JFK_FREESTANDING_MENU_BUTTON_HOVER_BACKGROUND
    url(//ssl.gstatic.com/ui/v1/disclosure/dark-grey-disclosure-arrow-down.png)
    center no-repeat #eee;

.jfk-freestanding-menu-button {
  @mixin border_radius(1px);

  background: JFK_FREESTANDING_MENU_BUTTON_BACKGROUND;
  border: JFK_FREESTANDING_MENU_BUTTON_BORDER;
  height: JFK_FREESTANDING_MENU_BUTTON_HEIGHT;
  width: JFK_FREESTANDING_MENU_BUTTON_WIDTH;
  cursor: pointer;
}

.jfk-freestanding-menu-button-hover,
.jfk-freestanding-menu-button-active,
.jfk-freestanding-menu-button-open {
  background: JFK_FREESTANDING_MENU_BUTTON_HOVER_BACKGROUND;
  border-color: JFK_FREESTANDING_MENU_BUTTON_HOVER_BORDER_COLOR;
}


}  /* if (!DISABLE_KENNEDY) */

/* javascript/jfk/menu/select.gss */
/**
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * @author zhyder@google.com (Zohair Hyder)
 */

@provide 'jfk.menu.select';
@require 'jfk.gss.base';
@require 'jfk.gss.menu';
@require 'jfk.gss.menuItem';
@require 'jfk.gss.menuSeparator';

@if (!DISABLE_KENNEDY) {

.jfk-select .goog-flat-menu-button-caption {
  /*
   * These styles are needed when a width/max-width is added to the
   * select button.
   */
  overflow: hidden;
  width: 100%;
}

.jfk-select .goog-flat-menu-button-dropdown {
  background: JFK_TOOLBAR_BUTTON_DISCLOSURE_ARROW_SELECT center no-repeat;
  border: none;
  height: 11px;
  margin-top: -4px;
  width: 7px;
}

}  /* if (!DISABLE_KENNEDY) */

/* javascript/angular/jfkwrappers/menu/menu.gss */
/**
 * Styles for jfkMenu module.
 *
 * @provide {ng.jfk.menu}
 *
 * @require {jfk.gss.menu}
 * @require {jfk.gss.menuButton}
 * @require {jfk.gss.menuItem}
 * @require {jfk.gss.menuSeparator}
 * @require {jfk.menu.freestandingMenuButton}
 * @require {jfk.menu.select}
 * @require {jfk.gss.subMenu}
 * @require {jfk.gss.textInput}
 * @require {jfk.gss.tristateMenuItem}
 */

.jfk-filtered-menu .goog-menu-filter {
  margin: 8px;
}

.jfk-filtered-menu .goog-menu-filter .jfk-textinput {
  /* Expand the textbox to match the width of the menu. */
  box-sizing: border-box;
  height: 29px;  /* 25px height + 2px padding + 2px border */
  width: 100%;
}

/* javascript/jfk/activityindicator/activityindicator.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for jfk.StatusIndicator.
 *
 * @author nnaze@google.com (Nathan Naze)
 */

@provide 'jfk.activityIndicator';
@require 'jfk.gss.mixin';

/* Note that these size definitions match the definitions in
   activityindicator.js */
@def JFK_ACTIVITY_INDICATOR_SIZE 19px;
@def JFK_ACTIVITY_INDICATOR_SMALL_SIZE 16px;

.jfk-activityIndicator {
  display: inline-block;
  position: relative;

  /* @noflip */ direction: ltr;
}

.jfk-activityIndicator,
.jfk-activityIndicator-icon,
.jfk-activityIndicator-circle,
.jfk-activityIndicator-circle-transition {
  height: JFK_ACTIVITY_INDICATOR_SIZE;
  width: JFK_ACTIVITY_INDICATOR_SIZE;
}

.jfk-activityIndicator-small.jfk-activityIndicator,
.jfk-activityIndicator-small .jfk-activityIndicator-icon,
.jfk-activityIndicator-small .jfk-activityIndicator-circle,
.jfk-activityIndicator-small .jfk-activityIndicator-circle-transition {
  height: JFK_ACTIVITY_INDICATOR_SMALL_SIZE;
  width: JFK_ACTIVITY_INDICATOR_SMALL_SIZE;
}

.jfk-activityIndicator-icon {
  background: url(//ssl.gstatic.com/ui/v1/activityindicator/offline.png)
      center no-repeat;
}

.jfk-activityIndicator-small .jfk-activityIndicator-icon {
  background: url(//ssl.gstatic.com/ui/v1/activityindicator/offline_16.png)
      center no-repeat;
}

.jfk-activityIndicator-icon {
  @mixin transition(opacity .218s linear .44s);

  top: 0;
  /* @noflip */ left: 0;

  position: absolute;

  opacity: 0;
}

.jfk-activityIndicator-circle {
  @mixin border_radius(50%);

  top: 0;
  /* @noflip */ left: 0;
  position: absolute;
}

.jfk-activityIndicator-mask {
  overflow: hidden;
  position: absolute;
}

.jfk-activityIndicator-circle-transition {
  position: relative;
}

.jfk-activityIndicator-transition {
  @mixin transition(all .22s ease-in);
}

.jfk-activityIndicator-transition-second {
  @mixin transition(all .22s ease-out .22s);
}

/* javascript/angular/components/activityindicator/activityindicator.gss */
/** Styles for Activity Indicator directive. */

@provide 'ng.g.activityIndicator';

@require 'jfk.activityIndicator';

/* javascript/angular/jfkwrappers/activityindicator/activityindicator.gss */
/** Styles for jfkActivityIndicator module */

@provide 'ng.jfk.activityIndicator';

@require 'ng.g.activityIndicator';


/* javascript/closure/css/autocomplete.css */
/*
 * Copyright 2009 The Closure Library Authors. All Rights Reserved.
 *
 * Use of this source code is governed by the Apache License, Version 2.0.
 * See the COPYING file for details.
 */

/*
 * Styles for goog.ui.ac.AutoComplete and its derivatives.
 * Note: these styles need some work to get them working properly at various
 * font sizes other than the default.
 *
 * @author pupius@google.com (Daniel Pupius)
 * @author annams@google.com (Srinivas Annam)
 */


/*
 * TODO(annams): Rename (here and in renderer.js) to specify class name as
 * goog-autocomplete-renderer
 */
.ac-renderer {
  font: normal 13px Arial, sans-serif;
  position: absolute;
  background: #fff;
  border: 1px solid #666;
  -moz-box-shadow: 2px 2px 2px rgba(102, 102, 102, .4);
  -webkit-box-shadow: 2px 2px 2px rgba(102, 102, 102, .4);
  width: 300px;
}

.ac-row {
  cursor: pointer;
  padding: .4em;
}

.ac-highlighted {
  font-weight: bold;
}

.ac-active {
  background-color: #b2b4bf;
}

/* javascript/closure/css/menu.css */
/*
 * Copyright 2009 The Closure Library Authors. All Rights Reserved.
 *
 * Use of this source code is governed by the Apache License, Version 2.0.
 * See the COPYING file for details.
 */

/*
 * Standard styling for menus created by goog.ui.MenuRenderer.
 *
 * @author attila@google.com (Attila Bodis)
 */


.goog-menu {
  background: #fff;
  border-color: #ccc #666 #666 #ccc;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  font: normal 13px Arial, sans-serif;
  margin: 0;
  outline: none;
  padding: 4px 0;
  position: absolute;
  z-index: 20000; /* Arbitrary, but some apps depend on it... */
}

/* javascript/jfk/progressbar/progressbar.gss */
/**
 * Copyright 2011 Google Inc, All Rights Reserved
 *
 * Styles for the progress bar component.
 *
 * To use, import progressbar.gss and add jfk-progressbar-blocking or
 * jfk-progressbar-nonBlocking to any element where a progress bar is
 * rendered.
 *
 * - jfk-progressBar-blocking should be used when the progress bar is blocking
 *   most or all of the ui, like during an initial page load.
 * - jfk-progressBar-nonBlocking should be used when the the progress bar is a
 *   background or unimportant operation.
 * - jfk-progressBar-tall can be used with either the blocking or the
 *   nonblocking progress bars, and increases the height from 9px to
 *   12px. The default width of a progress bar is 320px. For widths greater than
 *   160px, use the tall progress bar; for widths smaller than 160px, use the
 *   small progress bar.
 *
 * Only horizontal progress bars are supported.
 *
 * @author oana@google.com (Oana Florescu)
 * @author reinerp@google.com (Reiner Pope)
 */

@provide 'jfk.progressBar';
@require 'jfk.gss.mixin';

@if (!DISABLE_KENNEDY) {

@def JFK_PROGRESSBAR_NONBLOCKING_THUMB_BG_COLOR         #ccc;
@def JFK_PROGRESSBAR_BLOCKING_THUMB_BG_COLOR    #6188f5;
@def JFK_PROGRESSBAR_BORDER_COLOR           #999;
@def JFK_PROGRESSBAR_STATUS_TEXT_COLOR      #202020;
@def JFK_PROGRESSBAR_TEXT_COLOR             #999;
@def JFK_PROGRESSBAR_FONT_SIZE              13px;
@def JFK_PROGRESSBAR_LINE_HEIGHT            18px;
@def JFK_PROGRESSBAR_GRADIENT               315deg, transparent,
    transparent 33%, rgba(0,0,0,.12) 33%, rgba(0,0,0,.12) 66%,
    transparent 66%, transparent;


/* Text styling */
/**
 * Text to display above the progress bar indicating what is currently
 * happening. For example, "Synchronizing".
 */
.jfk-progressStatus {
  color: JFK_PROGRESSBAR_STATUS_TEXT_COLOR;
}

/**
 * Numerical progress indication (eg "57%") to be displayed below progress bar.
 */
.jfk-progressText{
  color: JFK_PROGRESSBAR_TEXT_COLOR;
}

.jfk-progressStatus,
.jfk-progressText {
  line-height: JFK_PROGRESSBAR_LINE_HEIGHT;
}

.jfk-progressBar-blocking .progress-bar-horizontal,
.jfk-progressBar-nonBlocking .progress-bar-horizontal {
  border: 1px solid JFK_PROGRESSBAR_BORDER_COLOR;
  padding: 1px;
  width: 320px;
}

.jfk-progressBar-blocking .progress-bar-thumb {
  background-color: JFK_PROGRESSBAR_BLOCKING_THUMB_BG_COLOR;
  height: 5px;
}

.jfk-progressBar-nonBlocking .progress-bar-thumb {
  background-color: JFK_PROGRESSBAR_NONBLOCKING_THUMB_BG_COLOR;
  height: 5px;
}

.jfk-progressBar-blocking.jfk-progressBar-tall .progress-bar-thumb,
.jfk-progressBar-nonBlocking.jfk-progressBar-tall .progress-bar-thumb {
  height: 8px;
}

/* Animation */
.jfk-progressBar-blocking .progress-bar-thumb {
  @mixin animation(jfk-progressBar-bg 0.8s linear 0s infinite);
  background-position: 0 0;
  background-repeat: repeat-x;
  background-size: 16px 8px;
  @mixin linear_gradient(JFK_PROGRESSBAR_GRADIENT, JFK_PROGRESSBAR_BLOCKING_THUMB_BG_COLOR);
}

.jfk-progressBar-blocking.jfk-progressBar-tall .progress-bar-thumb {
  @mixin animation(jfk-progressBar-bg-tall 0.8s linear 0s infinite);
  background-size: 20px 10px;
}

/*
 * GSS mixins don't support this syntax, so we write all the alternatives
 * manually
 */
@-webkit-keyframes jfk-progressBar-bg {
  0% { background-position: 0 0; }
  100% { background-position: -16px 0; }
}

@-moz-keyframes jfk-progressBar-bg {
  0% { background-position: 0 0; }
  100% { background-position: -16px 0; }
}

@-o-keyframes jfk-progressBar-bg {
  0% { background-position: 0 0; }
  100% { background-position: -16px 0; }
}

@keyframes jfk-progressBar-bg {
  0% { background-position: 0 0; }
  100% { background-position: -16px 0; }
}

@-webkit-keyframes jfk-progressBar-bg-tall {
  0% { background-position: 0 0; }
  100% { background-position: -20px 0; }
}

@-moz-keyframes jfk-progressBar-bg-tall {
  0% { background-position: 0 0; }
  100% { background-position: -20px 0; }
}

@-o-keyframes jfk-progressBar-bg-tall {
  0% { background-position: 0 0; }
  100% { background-position: -20px 0; }
}

@keyframes jfk-progressBar-bg-tall {
  0% { background-position: 0 0; }
  100% { background-position: -20px 0; }
}

/* DEPRECATED: use jfk-progressBar-blocking or jfk-progressBar-nonBlocking
   instead. */
.jfk-progressbar .progress-bar-horizontal,
.jfk-progressbar .progress-bar-vertical {
  border-color: JFK_PROGRESSBAR_BORDER_COLOR;
}

.jfk-progressbar .progress-bar-thumb {
  background-color: JFK_PROGRESSBAR_NONBLOCKING_THUMB_BG_COLOR;
}

}  /* if (!DISABLE_KENNEDY) */

/* googleclient/chrome/chromeos_recovery/chrome_app/styles/recovery.gss */
/* TODO: Organize this file better */

* {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Noto Sans', Arial;
  font-size: 13px;
  color: #222;
}
@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: local('Noto Sans'), local('NotoSans'), url(fonts/NotoSans.woff) format('woff');
}
body {
  color: #2c2c2c;
}
ul {
  padding-left: 18px;
}
li {
  margin: 6px 0;
}
h1, h2, h3, h4 {
  font-weight: normal;
}
a {
  color: #15c;
  text-decoration: none;
}
header {
  -webkit-app-region: drag;
  padding-left: 20px;
  height: 48px;
}
header-text {
  width: 600px;
  float: left;
  line-height: 48px;
}
.steps {
  padding-left: 10px;
}
.hidden {
  display: none;
}
.device-model {
  position: absolute;
  right: 106px;
}
.spinner-message {
  vertical-align: top;
}
#gear-button {
  background-image: -webkit-image-set(
    url('img/topbar_button_settings.png') 1x,
    url('img/2x/topbar_button_settings.png') 2x);
}
#close-button {
  background-image: -webkit-image-set(
    url('img/topbar_button_close.png') 1x,
    url('img/2x/topbar_button_close.png') 2x);
}
buttonbar {
  display: -webkit-box;
  float: right;
  height: 48px;
}
buttonbar .button {
  -webkit-app-region: no-drag;
  -webkit-box-shadow: none;
  -webkit-margin-end: 10px;
  -webkit-margin-start: 10px;
  background-color: transparent;
  background-image: none;
  background-position: center;
  background-repeat: no-repeat;
  border: 0 none transparent;
  box-sizing: content-box;
  display: block;
  height: 48px;
  line-height: 21px;
  margin: 0;
  min-height: 21px;
  min-width: 0;
  outline: none;
  padding: 0;
  position: relative;
  text-align: center;
  width: 48px;
  z-index: 1;
}
buttonbar .button:hover,
buttonbar .button:focus,
buttonbar .button:active {
  background-color: #ededed;
}

/* START: Override JFK styles for gear button */

.goog-menu {
  -webkit-app-region: no-drag;
}

buttonbar .goog-flat-menu-button {
  background: none;
  border: none !important;
  padding: 0 !important;
}
buttonbar .goog-flat-menu-button-dropdown {
  border-width: 0 !important;
}
buttonbar .goog-flat-menu-button-hover,
buttonbar .goog-flat-menu-button-focused,
buttonbar .goog-flat-menu-button-open {
  background-color: #ededed !important;
  border: none !important;
  box-shadow: none !important;
}
jfk-menu-item[disabled='disabled'] {
  opacity: .5;
}
/* END: Override JFK styles for gear button */

section.instruction {
  border-top: solid 1px #e5e5e5;
  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
}
article {
  width: 798px;
  height: 360px;
  padding: 40px;
  background: #FFF;
}
article li, a {
  line-height: 18px;
}
article:first-child {
  amargin-left: 0;
}
h1 {
  font-size: 22px;
  margin-bottom: 40px;
}
h2 {
  font-size: 13px;
  margin-bottom: 15px;
}
h3 {
  font-size: 13px;
  margin-bottom: 15px;
}
input[type="text"] {
  width: 300px;
  height: 28px;
  display: block;
  margin-bottom: 15px;
  padding: 0 5px;
}
img.image {
  width: 100%;
}
figure {
  float: right;
  background: #fff;
  width: 244px;
  height: 182px;
  text-align: center;
  margin: 0 0 0 40px;
}
figure figcaptionblock {
  margin: 12px;
}
figure figcaptiontext {
  font-size: 13px;
  color: #666;
}
.loader {
  display: inline-block;
  width: 19px;
  height: 19px;
  background: url("../images/loader-still.png") no-repeat;
}
summary.usb-name {
  margin: 15px 0;
  font-weight: bold;
}
.progress {
  display: block;
  width: 300px;
  height: 12px;
  margin: 15px 0;

  background: url("../images/progressbar-still.png") no-repeat;
}
button.bt-cancel {
  height: 29px;
  min-width: 78px;
  border: solid 1px #ddd;
  border-radius: 2px;
  font-weight: bold;
  font-size: 11px;

  border:1px solid #DCDCDC;
  background-color: #f5f5f5;
  background-image: -webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#f1f1f1));
  color: #444;
}
footer {
  position: absolute;
  width: 100%;
  bottom: 0;
  padding: 0 40px 40px 40px;
}
footer a {
  position: absolute;
  bottom: 40px;
}
footer button {
  float: right;
  height: 29px;
  min-width: 78px;
  padding: 0 7px;
  margin-left: 10px;
  border: solid 1px #ddd;
  border-radius: 2px;
  font-weight: bold;
  font-size: 11px;

  border:1px solid #DCDCDC;
  background-color: #f5f5f5;
  background-image: -webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#f1f1f1));
  color: #444;
}
footer button:first-child {
  border-color:#3079ed;
  background-color: #4d90fe;
  background-image: -webkit-gradient(linear,left top,left bottom,from(#4d90fe),to(#357ae8));
  color: #fff;
}
mark {
  color: #666;
  background-color: transparent;
}
.label-for-control {
  font-size: 13px;
  margin-bottom: 15px;
  display: block;
}

/* ================================================== */

button.disabled {
  opacity: 0.5;
}
button[disabled='disabled'] {
  opacity: 0.5;
}

jfk-select {
  display: block;
}
jfk-select .goog-flat-menu-button-dropdown {
  background: url(img/grey-disclosure-arrow-up-down.png) center no-repeat !important;
}
jfk-select .goog-flat-menu-button {
  width: 300px;
  text-align: left;
}
jfk-select .goog-flat-menu-button .goog-flat-menu-button-caption {
  font-size: 11px;
}
jfk-select .goog-flat-menu-button .goog-flat-menu-button-caption span {
  font-size: 11px;
}

goog-flat-menu-button-caption
jfk-select[disabled='disabled'] {
  opacity: .5;
}
.jfk-activityIndicator-small .jfk-activityIndicator-icon {
  background: url(img/offline_16.png) center no-repeat !important;
}

.kd-errormessage{
  color:#DD4B39;
  padding:9px 0;
}

#hwid_box {
  width: 300px;
  height: 28px;
  display: block;
  margin-bottom: 5px;
  padding: 0 5px;
}
.message {
  color:#666;
}
.match {
  color:#009933;
}
.match .icon {
  padding: 0 8px;
  margin-right: 8px;
  background-image: -webkit-image-set(
    url('img/checkmark_green.png') 1x,
    url('img/2x/checkmark_green_2x.png') 2x);
}
.error {
  color:#DD4B39;
}
.error .icon {
  background: #DD4B39;
  color: #FFF;
  font-weight: bold;
  display: inline-block;
  border-radius: 50px;
  padding: 0 7px;
  margin-right: 3px;
}
.error .icon:after {
  content:"!";
}
.warning {
  margin: 10px 0 15px 0;
}
.warning .icon:after {
  background: #FCD86D;
  color: #FFF;
  font-weight: bold;
  display: inline-block;
  float: left;
  border-radius: 50px;
  padding: 0 7px;
  margin-right: 8px;
}
.warning .icon:after {
  content:"!";
}
.warning .text {
  width: 360px;
}
.bottomspacer15 {
  margin: 0 0 15px 0;
}
#progress {
  margin-top: 15px;
}
#progressText {
  margin-bottom: 15px;
}

/* The standard checkbox downloads the images from a remote url
   which violates the CSP.  Easiest to just store them locally rather
   than trying to use an XMLHttpRequest. */
@def JFK_CHECKBOX_UNDETERMINED_URL
    url(img/checkmark-partial.png);
@def JFK_CHECKBOX_CHECKED_URL
    url(img/checkmark.png);
@def JFK_CHECKBOX_UNDETERMINED_2X_URL
    url(img/checkmark-2x/partial.png);
@def JFK_CHECKBOX_CHECKED_2X_URL
    url(img/2x/checkmark.png);

